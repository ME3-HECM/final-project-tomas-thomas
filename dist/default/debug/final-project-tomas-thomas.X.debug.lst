

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 15 05:16:58 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataBANK0
    94   004C40                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for _forward_reset_threshold
    98   004C40  0F                 	db	15
    99                           
   100                           ;initializer for _length
   101   004C41  32                 	db	50
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _LATEbits	set	3965
   106   000000                     _TRISEbits	set	3973
   107   000000                     _LATHbits	set	3968
   108   000000                     _SSP2CON2bits	set	3802
   109   000000                     _RX4PPS	set	3605
   110   000000                     _SSP2CLKPPS	set	3612
   111   000000                     _SSP2DATPPS	set	3613
   112   000000                     _ANSELDbits	set	3751
   113   000000                     _SSP2ADD	set	3798
   114   000000                     _SSP2CON1bits	set	3801
   115   000000                     _LATAbits	set	3961
   116   000000                     _LATGbits	set	3967
   117   000000                     _TRISAbits	set	3969
   118   000000                     _TRISGbits	set	3975
   119   000000                     _TRISHbits	set	3976
   120   000000                     _PORTFbits	set	3982
   121   000000                     _TRISCbits	set	3971
   122   000000                     _TRISDbits	set	3972
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATCbits	set	3963
   125   000000                     _LATDbits	set	3964
   126   000000                     _LATFbits	set	3966
   127   000000                     _RC4REG	set	3811
   128   000000                     _SP4BRGL	set	3813
   129   000000                     _TX4STAbits	set	3816
   130   000000                     _BAUD4CONbits	set	3817
   131   000000                     _SSP2CON2	set	3802
   132   000000                     _CCPR4H	set	3873
   133   000000                     _CCPR3H	set	3877
   134   000000                     _SSP2STAT	set	3800
   135   000000                     _ANSELFbits	set	3764
   136   000000                     _SSP2BUF	set	3797
   137   000000                     _PIE4bits	set	3629
   138   000000                     _PIR4bits	set	3639
   139   000000                     _RC0PPS	set	3682
   140   000000                     _RC7PPS	set	3689
   141   000000                     _RD5PPS	set	3695
   142   000000                     _RE2PPS	set	3700
   143   000000                     _RD6PPS	set	3696
   144   000000                     _T2PR	set	4028
   145   000000                     _T2CONbits	set	4029
   146   000000                     _CCPR2H	set	4006
   147   000000                     _CCPR1H	set	4010
   148   000000                     _RE4PPS	set	3702
   149   000000                     _RG6PPS	set	3720
   150   000000                     _T2CLKCONbits	set	4031
   151   000000                     _T2HLTbits	set	4030
   152   000000                     _CCP1CONbits	set	4011
   153   000000                     _CCPTMRS0bits	set	4013
   154   000000                     _CCP2CONbits	set	4007
   155   000000                     _CCP3CONbits	set	3878
   156   000000                     _CCP4CONbits	set	3874
   157                           
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161   004B1A                     __pcinit:
   162                           	callstack 0
   163   004B1A                     start_initialization:
   164                           	callstack 0
   165   004B1A                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Initialize objects allocated to BANK0 (2 bytes)
   169                           ; load TBLPTR registers with __pidataBANK0
   170   004B1A  0E40               	movlw	low __pidataBANK0
   171   004B1C  6EF6               	movwf	tblptrl,c
   172   004B1E  0E4C               	movlw	high __pidataBANK0
   173   004B20  6EF7               	movwf	tblptrh,c
   174   004B22  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   175   004B24  6EF8               	movwf	tblptru,c
   176   004B26  0009               	tblrd		*+	;fetch initializer
   177   004B28  CFF5 F0FB          	movff	tablat,__pdataBANK0
   178   004B2C  0009               	tblrd		*+	;fetch initializer
   179   004B2E  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   180                           
   181                           ; Clear objects allocated to BANK1 (130 bytes)
   182   004B32  EE01  F000         	lfsr	0,__pbssBANK1
   183   004B36  0E82               	movlw	130
   184   004B38                     clear_0:
   185   004B38  6AEE               	clrf	postinc0,c
   186   004B3A  06E8               	decf	wreg,f,c
   187   004B3C  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (35 bytes)
   190   004B3E  EE00  F0D8         	lfsr	0,__pbssBANK0
   191   004B42  0E23               	movlw	35
   192   004B44                     clear_1:
   193   004B44  6AEE               	clrf	postinc0,c
   194   004B46  06E8               	decf	wreg,f,c
   195   004B48  E1FD               	bnz	clear_1
   196   004B4A                     end_of_initialization:
   197                           	callstack 0
   198   004B4A                     __end_of__initialization:
   199                           	callstack 0
   200   004B4A  0100               	movlb	0
   201   004B4C  EF63  F022         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssBANK0
   204   0000D8                     __pbssBANK0:
   205                           	callstack 0
   206   0000D8                     _Color_Value:
   207                           	callstack 0
   208   0000D8                     	ds	2
   209   0000DA                     _Forward_Count:
   210                           	callstack 0
   211   0000DA                     	ds	1
   212   0000DB                     _Operation_Count:
   213                           	callstack 0
   214   0000DB                     	ds	1
   215   0000DC                     _TxBufReadCnt:
   216                           	callstack 0
   217   0000DC                     	ds	1
   218   0000DD                     _TxBufWriteCnt:
   219                           	callstack 0
   220   0000DD                     	ds	1
   221   0000DE                     _RxBufReadCnt:
   222                           	callstack 0
   223   0000DE                     	ds	1
   224   0000DF                     _RxBufWriteCnt:
   225                           	callstack 0
   226   0000DF                     	ds	1
   227   0000E0                     _calibration:
   228                           	callstack 0
   229   0000E0                     	ds	9
   230   0000E9                     _motorR:
   231                           	callstack 0
   232   0000E9                     	ds	9
   233   0000F2                     _motorL:
   234                           	callstack 0
   235   0000F2                     	ds	9
   236                           
   237                           	psect	dataBANK0
   238   0000FB                     __pdataBANK0:
   239                           	callstack 0
   240   0000FB                     _forward_reset_threshold:
   241                           	callstack 0
   242   0000FB                     	ds	1
   243   0000FC                     _length:
   244                           	callstack 0
   245   0000FC                     	ds	1
   246                           
   247                           	psect	bssBANK1
   248   000100                     __pbssBANK1:
   249                           	callstack 0
   250   000100                     _EUSART4TXbuf:
   251                           	callstack 0
   252   000100                     	ds	60
   253   00013C                     _Operation_History:
   254                           	callstack 0
   255   00013C                     	ds	50
   256   00016E                     _EUSART4RXbuf:
   257                           	callstack 0
   258   00016E                     	ds	20
   259                           
   260                           	psect	cstackBANK0
   261   000060                     __pcstackBANK0:
   262                           	callstack 0
   263   000060                     custom_floatmodulo@quotient:
   264                           	callstack 0
   265                           
   266                           ; 4 bytes @ 0x0
   267   000060                     	ds	4
   268   000064                     custom_floatmodulo@remainder:
   269                           	callstack 0
   270                           
   271                           ; 4 bytes @ 0x4
   272   000064                     	ds	4
   273   000068                     custom_floatmodulo@intPart:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x8
   277   000068                     	ds	2
   278   00006A                     RGB_to_HSV@R:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0xA
   282   00006A                     	ds	4
   283   00006E                     RGB_to_HSV@G:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0xE
   287   00006E                     	ds	4
   288   000072                     RGB_to_HSV@B:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x12
   292   000072                     	ds	4
   293   000076                     RGB_to_HSV@C:
   294                           	callstack 0
   295                           
   296                           ; 4 bytes @ 0x16
   297   000076                     	ds	4
   298   00007A                     RGB_to_HSV@H:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x1A
   302   00007A                     	ds	1
   303   00007B                     RGB_to_HSV@S:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x1B
   307   00007B                     	ds	1
   308   00007C                     RGB_to_HSV@V:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x1C
   312   00007C                     	ds	1
   313   00007D                     _RGB_to_HSV$2715:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x1D
   317   00007D                     	ds	4
   318   000081                     _RGB_to_HSV$2716:
   319                           	callstack 0
   320                           
   321                           ; 4 bytes @ 0x21
   322   000081                     	ds	4
   323   000085                     _RGB_to_HSV$317:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x25
   327   000085                     	ds	4
   328   000089                     _RGB_to_HSV$318:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x29
   332   000089                     	ds	4
   333   00008D                     RGB_to_HSV@minRGB:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x2D
   337   00008D                     	ds	4
   338   000091                     _RGB_to_HSV$320:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x31
   342   000091                     	ds	4
   343   000095                     _RGB_to_HSV$321:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x35
   347   000095                     	ds	4
   348   000099                     _RGB_to_HSV$2717:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x39
   352   000099                     	ds	4
   353   00009D                     RGB_to_HSV@H_temp:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x3D
   357   00009D                     	ds	4
   358   0000A1                     RGB_to_HSV@deltaRGB:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x41
   362   0000A1                     	ds	4
   363   0000A5                     RGB_to_HSV@maxRGB:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x45
   367   0000A5                     	ds	4
   368   0000A9                     RGB_to_HSV@r:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x49
   372   0000A9                     	ds	4
   373   0000AD                     RGB_to_HSV@g:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x4D
   377   0000AD                     	ds	4
   378   0000B1                     RGB_to_HSV@b:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x51
   382   0000B1                     	ds	4
   383   0000B5                     color_cardCheck@r:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x55
   387   0000B5                     	ds	4
   388   0000B9                     color_cardCheck@g:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x59
   392   0000B9                     	ds	4
   393   0000BD                     color_cardCheck@b:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x5D
   397   0000BD                     	ds	4
   398   0000C1                     color_cardCheck@c:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x61
   402   0000C1                     	ds	4
   403   0000C5                     color_cardCheck@card_color:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x65
   407   0000C5                     	ds	2
   408   0000C7                     color_cardCheck@H:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x67
   412   0000C7                     	ds	4
   413   0000CB                     color_cardCheck@S:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x6B
   417   0000CB                     	ds	4
   418   0000CF                     color_cardCheck@V:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x6F
   422   0000CF                     	ds	4
   423   0000D3                     maze_search@c:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x73
   427   0000D3                     	ds	1
   428   0000D4                     maze_search@mL:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x74
   432   0000D4                     	ds	1
   433   0000D5                     maze_search@mR:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x75
   437   0000D5                     	ds	1
   438   0000D6                     maze_search@i:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x76
   442   0000D6                     	ds	2
   443                           
   444                           	psect	cstackCOMRAM
   445   000001                     __pcstackCOMRAM:
   446                           	callstack 0
   447   000001                     ??_I2C_2_Master_Idle:
   448   000001                     ??_pause_until_RF2_pressed:
   449   000001                     ?___wmul:
   450                           	callstack 0
   451   000001                     ?___awdiv:
   452                           	callstack 0
   453   000001                     ?___fladd:
   454                           	callstack 0
   455   000001                     ?___fltol:
   456                           	callstack 0
   457   000001                     adjust_calibration@calibration_label:
   458                           	callstack 0
   459   000001                     switch_calibration@calibration_index:
   460                           	callstack 0
   461   000001                     initDCmotorsPWM@PWMperiod:
   462                           	callstack 0
   463   000001                     delay_ms_function@milliseconds:
   464                           	callstack 0
   465   000001                     ___wmul@multiplier:
   466                           	callstack 0
   467   000001                     ___awdiv@dividend:
   468                           	callstack 0
   469   000001                     ___fleq@ff1:
   470                           	callstack 0
   471   000001                     ___flge@ff1:
   472                           	callstack 0
   473   000001                     ___fltol@f1:
   474                           	callstack 0
   475   000001                     ___fladd@b:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x0
   479   000001                     	ds	1
   480   000002                     ??_I2C_2_Master_Read:
   481   000002                     ??_adjust_calibration:
   482   000002                     ??_switch_calibration:
   483   000002                     I2C_2_Master_Write@data_byte:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1
   487   000002                     	ds	1
   488   000003                     ??_delay_ms_function:
   489   000003                     color_writetoaddr@value:
   490                           	callstack 0
   491   000003                     I2C_2_Master_Read@ack:
   492                           	callstack 0
   493   000003                     ___wmul@multiplicand:
   494                           	callstack 0
   495   000003                     ___awdiv@divisor:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x2
   499   000003                     	ds	1
   500   000004                     color_writetoaddr@address:
   501                           	callstack 0
   502   000004                     I2C_2_Master_Read@tmp:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x3
   506   000004                     	ds	1
   507   000005                     ??_color_click_init:
   508   000005                     ??___fltol:
   509   000005                     ?_color_read_Red:
   510                           	callstack 0
   511   000005                     ?_color_read_Green:
   512                           	callstack 0
   513   000005                     ?_color_read_Blue:
   514                           	callstack 0
   515   000005                     ?_color_read_Clear:
   516                           	callstack 0
   517   000005                     ___awdiv@counter:
   518                           	callstack 0
   519   000005                     ___wmul@product:
   520                           	callstack 0
   521   000005                     ___fleq@ff2:
   522                           	callstack 0
   523   000005                     ___flge@ff2:
   524                           	callstack 0
   525   000005                     ___fladd@a:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x4
   529   000005                     	ds	1
   530   000006                     ___awdiv@sign:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x5
   534   000006                     	ds	1
   535   000007                     ??_color_read_Red:
   536   000007                     ??_color_read_Green:
   537   000007                     ??_color_read_Blue:
   538   000007                     ??_color_read_Clear:
   539   000007                     ?___lwdiv:
   540                           	callstack 0
   541   000007                     ___awdiv@quotient:
   542                           	callstack 0
   543   000007                     ___lwdiv@dividend:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x6
   547   000007                     	ds	2
   548   000009                     ??___fladd:
   549   000009                     ??___fleq:
   550   000009                     ??___flge:
   551   000009                     ___fltol@sign1:
   552                           	callstack 0
   553   000009                     ___lwdiv@divisor:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x8
   557   000009                     	ds	1
   558   00000A                     ___fltol@exp1:
   559                           	callstack 0
   560   00000A                     color_read_Red@tmp:
   561                           	callstack 0
   562   00000A                     color_read_Green@tmp:
   563                           	callstack 0
   564   00000A                     color_read_Blue@tmp:
   565                           	callstack 0
   566   00000A                     color_read_Clear@tmp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x9
   570   00000A                     	ds	1
   571   00000B                     ___lwdiv@quotient:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xA
   575   00000B                     	ds	1
   576   00000C                     ?___xxtofl:
   577                           	callstack 0
   578   00000C                     ___xxtofl@val:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0xB
   582   00000C                     	ds	1
   583   00000D                     ___lwdiv@counter:
   584                           	callstack 0
   585   00000D                     ___fladd@signs:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0xC
   589   00000D                     	ds	1
   590   00000E                     setMotorPWM@m:
   591                           	callstack 0
   592   00000E                     ___fladd@aexp:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0xD
   596   00000E                     	ds	1
   597   00000F                     ??_setMotorPWM:
   598   00000F                     ___fladd@bexp:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0xE
   602   00000F                     	ds	1
   603   000010                     ??___xxtofl:
   604   000010                     ___fladd@grs:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0xF
   608   000010                     	ds	1
   609   000011                     setMotorPWM@posDuty:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x10
   613   000011                     	ds	1
   614   000012                     setMotorPWM@negDuty:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x11
   618   000012                     	ds	1
   619   000013                     forward@mL:
   620                           	callstack 0
   621   000013                     backward@mL:
   622                           	callstack 0
   623   000013                     leftTURN@mL:
   624                           	callstack 0
   625   000013                     rightTURN@mL:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x12
   629   000013                     	ds	1
   630   000014                     forward@mR:
   631                           	callstack 0
   632   000014                     backward@mR:
   633                           	callstack 0
   634   000014                     leftTURN@mR:
   635                           	callstack 0
   636   000014                     rightTURN@mR:
   637                           	callstack 0
   638   000014                     ___xxtofl@sign:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x13
   642   000014                     	ds	1
   643   000015                     ??_rightTURN:
   644   000015                     ??_leftTURN:
   645   000015                     ??_forward:
   646   000015                     ??_backward:
   647   000015                     ___xxtofl@exp:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x14
   651   000015                     	ds	1
   652   000016                     ___xxtofl@arg:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x15
   656   000016                     	ds	2
   657   000018                     forward@Distance_Calibration:
   658                           	callstack 0
   659   000018                     backward@Distance_Calibration:
   660                           	callstack 0
   661   000018                     leftTURN@rotation_calibration:
   662                           	callstack 0
   663   000018                     rightTURN@rotation_calibration:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x17
   667   000018                     	ds	1
   668   000019                     forward@i:
   669                           	callstack 0
   670   000019                     backward@i:
   671                           	callstack 0
   672   000019                     leftTURN@i:
   673                           	callstack 0
   674   000019                     rightTURN@i:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x18
   678   000019                     	ds	1
   679   00001A                     ?___flsub:
   680                           	callstack 0
   681   00001A                     ___flsub@b:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x19
   685   00001A                     	ds	1
   686   00001B                     forward@j:
   687                           	callstack 0
   688   00001B                     backward@j:
   689                           	callstack 0
   690   00001B                     leftTURN@j:
   691                           	callstack 0
   692   00001B                     rightTURN@j:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x1A
   696   00001B                     	ds	2
   697   00001D                     forward@max_power:
   698                           	callstack 0
   699   00001D                     backward@max_power:
   700                           	callstack 0
   701   00001D                     leftTURN@max_power:
   702                           	callstack 0
   703   00001D                     rightTURN@max_power:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x1C
   707   00001D                     	ds	1
   708   00001E                     ___flsub@a:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x1D
   712   00001E                     	ds	1
   713   00001F                     forward@delay_time:
   714                           	callstack 0
   715   00001F                     backward@delay_time:
   716                           	callstack 0
   717   00001F                     leftTURN@delay_time:
   718                           	callstack 0
   719   00001F                     rightTURN@delay_time:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x1E
   723   00001F                     	ds	2
   724   000021                     calibration_routine@c:
   725                           	callstack 0
   726   000021                     maze_return@c:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x20
   730   000021                     	ds	1
   731   000022                     ?___fldiv:
   732                           	callstack 0
   733   000022                     calibration_routine@mL:
   734                           	callstack 0
   735   000022                     maze_return@mL:
   736                           	callstack 0
   737   000022                     ___fldiv@b:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x21
   741   000022                     	ds	1
   742   000023                     calibration_routine@mR:
   743                           	callstack 0
   744   000023                     maze_return@mR:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x22
   748   000023                     	ds	1
   749   000024                     ??_maze_return:
   750   000024                     
   751                           ; 1 bytes @ 0x23
   752   000024                     	ds	2
   753   000026                     ___fldiv@a:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x25
   757   000026                     	ds	1
   758   000027                     maze_return@j:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x26
   762   000027                     	ds	2
   763   000029                     maze_return@distance_back:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x28
   767   000029                     	ds	1
   768   00002A                     ??___fldiv:
   769   00002A                     maze_return@i_1875:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x29
   773   00002A                     	ds	2
   774   00002C                     maze_return@i:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2B
   778   00002C                     	ds	2
   779   00002E                     ___fldiv@rem:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x2D
   783   00002E                     	ds	4
   784   000032                     ___fldiv@sign:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x31
   788   000032                     	ds	1
   789   000033                     ___fldiv@new_exp:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x32
   793   000033                     	ds	2
   794   000035                     ___fldiv@grs:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x34
   798   000035                     	ds	4
   799   000039                     ___fldiv@bexp:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x38
   803   000039                     	ds	1
   804   00003A                     ___fldiv@aexp:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x39
   808   00003A                     	ds	1
   809   00003B                     ?___flmul:
   810                           	callstack 0
   811   00003B                     ___flmul@b:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x3A
   815   00003B                     	ds	4
   816   00003F                     ___flmul@a:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x3E
   820   00003F                     	ds	4
   821   000043                     ??___flmul:
   822                           
   823                           ; 1 bytes @ 0x42
   824   000043                     	ds	4
   825   000047                     ___flmul@sign:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x46
   829   000047                     	ds	1
   830   000048                     ___flmul@grs:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x47
   834   000048                     	ds	4
   835   00004C                     ___flmul@aexp:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x4B
   839   00004C                     	ds	1
   840   00004D                     ___flmul@bexp:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x4C
   844   00004D                     	ds	1
   845   00004E                     ___flmul@prod:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x4D
   849   00004E                     	ds	4
   850   000052                     ___flmul@temp:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x51
   854   000052                     	ds	2
   855   000054                     ?_custom_floatmodulo:
   856                           	callstack 0
   857   000054                     custom_floatmodulo@x:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x53
   861   000054                     	ds	4
   862   000058                     custom_floatmodulo@y:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x57
   866   000058                     	ds	4
   867   00005C                     ?_color_cardCheck:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x5B
   871   00005C                     	ds	2
   872   00005E                     ??_maze_search:
   873   00005E                     
   874                           ; 1 bytes @ 0x5D
   875   00005E                     	ds	2
   876   000060                     
   877                           ; 1 bytes @ 0x5F
   878 ;;
   879 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   880 ;;
   881 ;; *************** function _main *****************
   882 ;; Defined at:
   883 ;;		line 20 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  PWMperiod       2    0        unsigned int 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels required when called: 6
   903 ;; This function calls:
   904 ;;		_calibration_routine
   905 ;;		_initDCmotorsPWM
   906 ;;		_maze_return
   907 ;;		_maze_search
   908 ;;		_pause_until_RF2_pressed
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text0
   915   0044C6                     __ptext0:
   916                           	callstack 0
   917   0044C6                     _main:
   918                           	callstack 25
   919   0044C6                     
   920                           ;main.c: 24:     initDCmotorsPWM(PWMperiod);
   921   0044C6  0E00               	movlw	0
   922   0044C8  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   923   0044CA  0E63               	movlw	99
   924   0044CC  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   925   0044CE  ECD6  F023         	call	_initDCmotorsPWM	;wreg free
   926   0044D2                     
   927                           ;main.c: 28:     TRISDbits.TRISD7 = 0;
   928   0044D2  9E84               	bcf	132,7,c	;volatile
   929   0044D4                     
   930                           ;main.c: 29:     LATDbits.LATD7 = 0;
   931   0044D4  9E7C               	bcf	124,7,c	;volatile
   932   0044D6                     
   933                           ;main.c: 31:     TRISHbits.TRISH3 = 0;
   934   0044D6  9688               	bcf	136,3,c	;volatile
   935   0044D8                     
   936                           ;main.c: 32:     LATHbits.LATH3 = 0;
   937   0044D8  9680               	bcf	128,3,c	;volatile
   938   0044DA                     
   939                           ;main.c: 34:     TRISFbits.TRISF2=1;
   940   0044DA  8486               	bsf	134,2,c	;volatile
   941   0044DC                     
   942                           ;main.c: 35:     ANSELFbits.ANSELF2=0;
   943   0044DC  010E               	movlb	14	; () banked
   944   0044DE  95B4               	bcf	180,2,b	;volatile
   945   0044E0                     
   946                           ; BSR set to: 14
   947                           ;main.c: 37:     TRISFbits.TRISF3=1;
   948   0044E0  8686               	bsf	134,3,c	;volatile
   949   0044E2                     
   950                           ; BSR set to: 14
   951                           ;main.c: 38:     ANSELFbits.ANSELF3=0;
   952   0044E2  97B4               	bcf	180,3,b	;volatile
   953   0044E4                     
   954                           ; BSR set to: 14
   955                           ;main.c: 42:     motorL.power=0;
   956   0044E4  0E00               	movlw	0
   957   0044E6  0100               	movlb	0	; () banked
   958   0044E8  6FF2               	movwf	_motorL& (0+255),b
   959   0044EA                     
   960                           ; BSR set to: 0
   961                           ;main.c: 43:     motorL.direction=1;
   962   0044EA  0E01               	movlw	1
   963   0044EC  6FF3               	movwf	(_motorL+1)& (0+255),b
   964   0044EE                     
   965                           ; BSR set to: 0
   966                           ;main.c: 44:     motorL.brakemode=1;
   967   0044EE  0E01               	movlw	1
   968   0044F0  6FF4               	movwf	(_motorL+2)& (0+255),b
   969   0044F2                     
   970                           ; BSR set to: 0
   971                           ;main.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   972   0044F2  0EAA               	movlw	170
   973   0044F4  6FF7               	movwf	(_motorL+5)& (0+255),b
   974   0044F6  0E0F               	movlw	15
   975   0044F8  6FF8               	movwf	(_motorL+6)& (0+255),b
   976   0044FA                     
   977                           ; BSR set to: 0
   978                           ;main.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   979   0044FA  0EA6               	movlw	166
   980   0044FC  6FF9               	movwf	(_motorL+7)& (0+255),b
   981   0044FE  0E0F               	movlw	15
   982   004500  6FFA               	movwf	(_motorL+8)& (0+255),b
   983   004502                     
   984                           ; BSR set to: 0
   985                           ;main.c: 47:     motorL.PWMperiod=PWMperiod;
   986   004502  0E00               	movlw	0
   987   004504  6FF6               	movwf	(_motorL+4)& (0+255),b
   988   004506  0E63               	movlw	99
   989   004508  6FF5               	movwf	(_motorL+3)& (0+255),b
   990   00450A                     
   991                           ; BSR set to: 0
   992                           ;main.c: 49:     motorR.power=0;
   993   00450A  0E00               	movlw	0
   994   00450C  6FE9               	movwf	_motorR& (0+255),b
   995   00450E                     
   996                           ; BSR set to: 0
   997                           ;main.c: 50:     motorR.direction=1;
   998   00450E  0E01               	movlw	1
   999   004510  6FEA               	movwf	(_motorR+1)& (0+255),b
  1000   004512                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 51:     motorR.brakemode=1;
  1003   004512  0E01               	movlw	1
  1004   004514  6FEB               	movwf	(_motorR+2)& (0+255),b
  1005   004516                     
  1006                           ; BSR set to: 0
  1007                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1008   004516  0E25               	movlw	37
  1009   004518  6FEE               	movwf	(_motorR+5)& (0+255),b
  1010   00451A  0E0F               	movlw	15
  1011   00451C  6FEF               	movwf	(_motorR+6)& (0+255),b
  1012   00451E                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1015   00451E  0E21               	movlw	33
  1016   004520  6FF0               	movwf	(_motorR+7)& (0+255),b
  1017   004522  0E0F               	movlw	15
  1018   004524  6FF1               	movwf	(_motorR+8)& (0+255),b
  1019   004526                     
  1020                           ; BSR set to: 0
  1021                           ;main.c: 54:     motorR.PWMperiod=PWMperiod;
  1022   004526  0E00               	movlw	0
  1023   004528  6FED               	movwf	(_motorR+4)& (0+255),b
  1024   00452A  0E63               	movlw	99
  1025   00452C  6FEC               	movwf	(_motorR+3)& (0+255),b
  1026   00452E                     
  1027                           ; BSR set to: 0
  1028                           ;main.c: 58:     calibration.index = 1;
  1029   00452E  0E01               	movlw	1
  1030   004530  6FE0               	movwf	_calibration& (0+255),b
  1031   004532                     
  1032                           ; BSR set to: 0
  1033                           ;main.c: 61:     calibration.right_90 = 25;
  1034   004532  0E19               	movlw	25
  1035   004534  6FE1               	movwf	(_calibration+1)& (0+255),b
  1036   004536                     
  1037                           ; BSR set to: 0
  1038                           ;main.c: 62:     calibration.left_90 = 25;
  1039   004536  0E19               	movlw	25
  1040   004538  6FE2               	movwf	(_calibration+2)& (0+255),b
  1041   00453A                     
  1042                           ; BSR set to: 0
  1043                           ;main.c: 64:     calibration.right_135 = 40;
  1044   00453A  0E28               	movlw	40
  1045   00453C  6FE3               	movwf	(_calibration+3)& (0+255),b
  1046   00453E                     
  1047                           ; BSR set to: 0
  1048                           ;main.c: 65:     calibration.left_135 = 40;
  1049   00453E  0E28               	movlw	40
  1050   004540  6FE4               	movwf	(_calibration+4)& (0+255),b
  1051   004542                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 67:     calibration.forward_one = 100;
  1054   004542  0E64               	movlw	100
  1055   004544  6FE5               	movwf	(_calibration+5)& (0+255),b
  1056   004546                     
  1057                           ; BSR set to: 0
  1058                           ;main.c: 68:     calibration.backward_one = 100;
  1059   004546  0E64               	movlw	100
  1060   004548  6FE6               	movwf	(_calibration+6)& (0+255),b
  1061   00454A                     
  1062                           ; BSR set to: 0
  1063                           ;main.c: 70:     calibration.forward_half = 33;
  1064   00454A  0E21               	movlw	33
  1065   00454C  6FE7               	movwf	(_calibration+7)& (0+255),b
  1066   00454E                     
  1067                           ; BSR set to: 0
  1068                           ;main.c: 71:     calibration.backward_half = 33;
  1069   00454E  0E21               	movlw	33
  1070   004550  6FE8               	movwf	(_calibration+8)& (0+255),b
  1071   004552                     l4540:
  1072                           
  1073                           ;main.c: 80:         pause_until_RF2_pressed();
  1074   004552  EC5A  F024         	call	_pause_until_RF2_pressed	;wreg free
  1075   004556                     
  1076                           ;main.c: 82:         calibration_routine(&calibration, &motorL, &motorR);
  1077   004556  0EE0               	movlw	low _calibration
  1078   004558  6E21               	movwf	calibration_routine@c^0,c
  1079   00455A  0EF2               	movlw	low _motorL
  1080   00455C  6E22               	movwf	calibration_routine@mL^0,c
  1081   00455E  0EE9               	movlw	low _motorR
  1082   004560  6E23               	movwf	calibration_routine@mR^0,c
  1083   004562  EC94  F01A         	call	_calibration_routine	;wreg free
  1084   004566                     
  1085                           ;main.c: 84:         maze_search(&calibration, &motorL, &motorR);
  1086   004566  0EE0               	movlw	low _calibration
  1087   004568  0100               	movlb	0	; () banked
  1088   00456A  6FD3               	movwf	maze_search@c& (0+255),b
  1089   00456C  0EF2               	movlw	low _motorL
  1090   00456E  6FD4               	movwf	maze_search@mL& (0+255),b
  1091   004570  0EE9               	movlw	low _motorR
  1092   004572  6FD5               	movwf	maze_search@mR& (0+255),b
  1093   004574  ECB0  F00F         	call	_maze_search	;wreg free
  1094   004578                     
  1095                           ;main.c: 86:         maze_return(&calibration, &motorL, &motorR);
  1096   004578  0EE0               	movlw	low _calibration
  1097   00457A  6E21               	movwf	maze_return@c^0,c
  1098   00457C  0EF2               	movlw	low _motorL
  1099   00457E  6E22               	movwf	maze_return@mL^0,c
  1100   004580  0EE9               	movlw	low _motorR
  1101   004582  6E23               	movwf	maze_return@mR^0,c
  1102   004584  EC71  F014         	call	_maze_return	;wreg free
  1103   004588  EFA9  F022         	goto	l4540
  1104   00458C  EF00  F000         	goto	start
  1105   004590                     __end_of_main:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _pause_until_RF2_pressed *****************
  1109 ;; Defined at:
  1110 ;;		line 6 in file "calibration.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text1
  1138   0048B4                     __ptext1:
  1139                           	callstack 0
  1140   0048B4                     _pause_until_RF2_pressed:
  1141                           	callstack 30
  1142   0048B4                     l178:
  1143                           
  1144                           ;calibration.c: 12:         LATDbits.LATD7 = 1;
  1145   0048B4  8E7C               	bsf	124,7,c	;volatile
  1146   0048B6                     
  1147                           ;calibration.c: 13:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1148   0048B6  0E09               	movlw	9
  1149   0048B8  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1150   0048BA  0E1E               	movlw	30
  1151   0048BC  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1152   0048BE  0EE4               	movlw	228
  1153   0048C0                     u5147:
  1154   0048C0  2EE8               	decfsz	wreg,f,c
  1155   0048C2  D7FE               	bra	u5147
  1156   0048C4  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1157   0048C6  D7FC               	bra	u5147
  1158   0048C8  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1159   0048CA  D7FA               	bra	u5147
  1160   0048CC  D000               	nop2	
  1161   0048CE                     
  1162                           ;calibration.c: 14:         LATDbits.LATD7 = 0;
  1163   0048CE  9E7C               	bcf	124,7,c	;volatile
  1164                           
  1165                           ;calibration.c: 15:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1166   0048D0  0E09               	movlw	9
  1167   0048D2  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1168   0048D4  0E1E               	movlw	30
  1169   0048D6  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1170   0048D8  0EE4               	movlw	228
  1171   0048DA                     u5157:
  1172   0048DA  2EE8               	decfsz	wreg,f,c
  1173   0048DC  D7FE               	bra	u5157
  1174   0048DE  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1175   0048E0  D7FC               	bra	u5157
  1176   0048E2  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1177   0048E4  D7FA               	bra	u5157
  1178   0048E6  D000               	nop2	
  1179   0048E8                     
  1180                           ;calibration.c: 17:         if(!PORTFbits.RF2){
  1181   0048E8  B48E               	btfsc	142,2,c	;volatile
  1182   0048EA  EF79  F024         	goto	u4711
  1183   0048EE  EF7B  F024         	goto	u4710
  1184   0048F2                     u4711:
  1185   0048F2  EF5A  F024         	goto	l178
  1186   0048F6                     u4710:
  1187   0048F6                     
  1188                           ;calibration.c: 18:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1189   0048F6  0E11               	movlw	17
  1190   0048F8  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1191   0048FA  0E3C               	movlw	60
  1192   0048FC  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1193   0048FE  0ECB               	movlw	203
  1194   004900                     u5167:
  1195   004900  2EE8               	decfsz	wreg,f,c
  1196   004902  D7FE               	bra	u5167
  1197   004904  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1198   004906  D7FC               	bra	u5167
  1199   004908  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1200   00490A  D7FA               	bra	u5167
  1201   00490C  0000               	nop	
  1202   00490E                     
  1203                           ;calibration.c: 19:         LATDbits.LATD7 = 0;
  1204   00490E  9E7C               	bcf	124,7,c	;volatile
  1205   004910  0012               	return		;funcret
  1206   004912                     __end_of_pause_until_RF2_pressed:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _maze_search *****************
  1210 ;; Defined at:
  1211 ;;		line 6 in file "pathfinder_file.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  c               1  115[BANK0 ] PTR struct calibration_s
  1214 ;;		 -> calibration(9), 
  1215 ;;  mL              1  116[BANK0 ] PTR struct DC_motor
  1216 ;;		 -> motorL(9), 
  1217 ;;  mR              1  117[BANK0 ] PTR struct DC_motor
  1218 ;;		 -> motorR(9), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  i               2  118[BANK0 ] int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1230 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;Total ram usage:        7 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 5
  1237 ;; This function calls:
  1238 ;;		_backward
  1239 ;;		_color_cardCheck
  1240 ;;		_color_click_init
  1241 ;;		_forward
  1242 ;;		_leftTURN
  1243 ;;		_rightTURN
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text2
  1250   001F60                     __ptext2:
  1251                           	callstack 0
  1252   001F60                     _maze_search:
  1253                           	callstack 25
  1254   001F60                     
  1255                           ;pathfinder_file.c: 9:     color_click_init();
  1256   001F60  EC6D  F025         	call	_color_click_init	;wreg free
  1257   001F64                     l4272:
  1258                           
  1259                           ;pathfinder_file.c: 13:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1260   001F64  0E29               	movlw	41
  1261   001F66  6E5F               	movwf	(??_maze_search+1)^0,c
  1262   001F68  0E96               	movlw	150
  1263   001F6A  6E5E               	movwf	??_maze_search^0,c
  1264   001F6C  0E7F               	movlw	127
  1265   001F6E                     u5177:
  1266   001F6E  2EE8               	decfsz	wreg,f,c
  1267   001F70  D7FE               	bra	u5177
  1268   001F72  2E5E               	decfsz	??_maze_search^0,f,c
  1269   001F74  D7FC               	bra	u5177
  1270   001F76  2E5F               	decfsz	(??_maze_search+1)^0,f,c
  1271   001F78  D7FA               	bra	u5177
  1272   001F7A  0000               	nop	
  1273   001F7C                     
  1274                           ;pathfinder_file.c: 14:         LATHbits.LATH3 = 1;
  1275   001F7C  8680               	bsf	128,3,c	;volatile
  1276   001F7E                     
  1277                           ;pathfinder_file.c: 15:         LATDbits.LATD7 = 1;
  1278   001F7E  8E7C               	bsf	124,7,c	;volatile
  1279   001F80                     
  1280                           ;pathfinder_file.c: 18:         forward(c->forward_one, mL, mR);
  1281   001F80  C0D4  F013         	movff	maze_search@mL,forward@mL
  1282   001F84  C0D5  F014         	movff	maze_search@mR,forward@mR
  1283   001F88  0100               	movlb	0	; () banked
  1284   001F8A  51D3               	movf	maze_search@c& (0+255),w,b
  1285   001F8C  6ED9               	movwf	fsr2l,c
  1286   001F8E  6ADA               	clrf	fsr2h,c
  1287   001F90  0E05               	movlw	5
  1288   001F92  26D9               	addwf	fsr2l,f,c
  1289   001F94  50DF               	movf	indf2,w,c
  1290   001F96  EC85  F01C         	call	_forward
  1291   001F9A                     
  1292                           ;pathfinder_file.c: 19:         Forward_Count++;
  1293   001F9A  0100               	movlb	0	; () banked
  1294   001F9C  2BDA               	incf	_Forward_Count& (0+255),f,b
  1295   001F9E                     
  1296                           ; BSR set to: 0
  1297                           ;pathfinder_file.c: 20:         Color_Value = color_cardCheck();
  1298   001F9E  EC01  F007         	call	_color_cardCheck	;wreg free
  1299   001FA2  C05C  F0D8         	movff	?_color_cardCheck,_Color_Value
  1300   001FA6  C05D  F0D9         	movff	?_color_cardCheck+1,_Color_Value+1
  1301   001FAA                     
  1302                           ;pathfinder_file.c: 22:         LATHbits.LATH3 = 0;
  1303   001FAA  9680               	bcf	128,3,c	;volatile
  1304   001FAC                     
  1305                           ;pathfinder_file.c: 23:         LATDbits.LATD7 = 0;
  1306   001FAC  9E7C               	bcf	124,7,c	;volatile
  1307   001FAE  0E0F               	movlw	15
  1308   001FB0  0100               	movlb	0	; () banked
  1309   001FB2  65DA               	cpfsgt	_Forward_Count& (0+255),b
  1310   001FB4  EFDE  F00F         	goto	u4811
  1311   001FB8  EFE0  F00F         	goto	u4810
  1312   001FBC                     u4811:
  1313   001FBC  EF45  F010         	goto	l4302
  1314   001FC0                     u4810:
  1315   001FC0                     
  1316                           ; BSR set to: 0
  1317                           ;pathfinder_file.c: 29:             backward(c->backward_half, mL, mR);
  1318   001FC0  C0D4  F013         	movff	maze_search@mL,backward@mL
  1319   001FC4  C0D5  F014         	movff	maze_search@mR,backward@mR
  1320   001FC8  51D3               	movf	maze_search@c& (0+255),w,b
  1321   001FCA  6ED9               	movwf	fsr2l,c
  1322   001FCC  6ADA               	clrf	fsr2h,c
  1323   001FCE  0E08               	movlw	8
  1324   001FD0  26D9               	addwf	fsr2l,f,c
  1325   001FD2  50DF               	movf	indf2,w,c
  1326   001FD4  ECC3  F01E         	call	_backward
  1327                           
  1328                           ;pathfinder_file.c: 30:             rightTURN(c->right_90, mL, mR);
  1329   001FD8  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1330   001FDC  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1331   001FE0  0100               	movlb	0	; () banked
  1332   001FE2  51D3               	movf	maze_search@c& (0+255),w,b
  1333   001FE4  6ED9               	movwf	fsr2l,c
  1334   001FE6  6ADA               	clrf	fsr2h,c
  1335   001FE8  0E01               	movlw	1
  1336   001FEA  26D9               	addwf	fsr2l,f,c
  1337   001FEC  50DF               	movf	indf2,w,c
  1338   001FEE  EC45  F01D         	call	_rightTURN
  1339                           
  1340                           ;pathfinder_file.c: 31:             rightTURN(c->right_90, mL, mR);
  1341   001FF2  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1342   001FF6  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1343   001FFA  0100               	movlb	0	; () banked
  1344   001FFC  51D3               	movf	maze_search@c& (0+255),w,b
  1345   001FFE  6ED9               	movwf	fsr2l,c
  1346   002000  6ADA               	clrf	fsr2h,c
  1347   002002  0E01               	movlw	1
  1348   002004  26D9               	addwf	fsr2l,f,c
  1349   002006  50DF               	movf	indf2,w,c
  1350   002008  EC45  F01D         	call	_rightTURN
  1351                           
  1352                           ;pathfinder_file.c: 32:             backward(c->backward_one, mL, mR);
  1353   00200C  C0D4  F013         	movff	maze_search@mL,backward@mL
  1354   002010  C0D5  F014         	movff	maze_search@mR,backward@mR
  1355   002014  0100               	movlb	0	; () banked
  1356   002016  51D3               	movf	maze_search@c& (0+255),w,b
  1357   002018  6ED9               	movwf	fsr2l,c
  1358   00201A  6ADA               	clrf	fsr2h,c
  1359   00201C  0E06               	movlw	6
  1360   00201E  26D9               	addwf	fsr2l,f,c
  1361   002020  50DF               	movf	indf2,w,c
  1362   002022  ECC3  F01E         	call	_backward
  1363   002026                     
  1364                           ;pathfinder_file.c: 33:             for (int i = 0; i < forward_reset_threshold; i++) {
  1365   002026  0E00               	movlw	0
  1366   002028  0100               	movlb	0	; () banked
  1367   00202A  6FD7               	movwf	(maze_search@i+1)& (0+255),b
  1368   00202C  0E00               	movlw	0
  1369   00202E  6FD6               	movwf	maze_search@i& (0+255),b
  1370   002030  EF29  F010         	goto	l4298
  1371   002034                     l4294:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;pathfinder_file.c: 34:                  forward(c->forward_one, mL, mR);
  1375   002034  C0D4  F013         	movff	maze_search@mL,forward@mL
  1376   002038  C0D5  F014         	movff	maze_search@mR,forward@mR
  1377   00203C  51D3               	movf	maze_search@c& (0+255),w,b
  1378   00203E  6ED9               	movwf	fsr2l,c
  1379   002040  6ADA               	clrf	fsr2h,c
  1380   002042  0E05               	movlw	5
  1381   002044  26D9               	addwf	fsr2l,f,c
  1382   002046  50DF               	movf	indf2,w,c
  1383   002048  EC85  F01C         	call	_forward
  1384   00204C                     
  1385                           ;pathfinder_file.c: 36:             }
  1386   00204C  0100               	movlb	0	; () banked
  1387   00204E  4BD6               	infsnz	maze_search@i& (0+255),f,b
  1388   002050  2BD7               	incf	(maze_search@i+1)& (0+255),f,b
  1389   002052                     l4298:
  1390                           
  1391                           ; BSR set to: 0
  1392   002052  BFD7               	btfsc	(maze_search@i+1)& (0+255),7,b
  1393   002054  EF35  F010         	goto	u4821
  1394   002058  51D7               	movf	(maze_search@i+1)& (0+255),w,b
  1395   00205A  E109               	bnz	u4820
  1396   00205C  0E0F               	movlw	15
  1397   00205E  5DD6               	subwf	maze_search@i& (0+255),w,b
  1398   002060  A0D8               	btfss	status,0,c
  1399   002062  EF35  F010         	goto	u4821
  1400   002066  EF37  F010         	goto	u4820
  1401   00206A                     u4821:
  1402   00206A  EF1A  F010         	goto	l4294
  1403   00206E                     u4820:
  1404   00206E                     
  1405                           ; BSR set to: 0
  1406                           ;pathfinder_file.c: 37:             backward(c->backward_half, mL, mR);
  1407   00206E  C0D4  F013         	movff	maze_search@mL,backward@mL
  1408   002072  C0D5  F014         	movff	maze_search@mR,backward@mR
  1409   002076  51D3               	movf	maze_search@c& (0+255),w,b
  1410   002078  6ED9               	movwf	fsr2l,c
  1411   00207A  6ADA               	clrf	fsr2h,c
  1412   00207C  0E08               	movlw	8
  1413   00207E  26D9               	addwf	fsr2l,f,c
  1414   002080  50DF               	movf	indf2,w,c
  1415   002082  ECC3  F01E         	call	_backward
  1416                           
  1417                           ;pathfinder_file.c: 38:             break;
  1418   002086  EF10  F012         	goto	l484
  1419   00208A                     l4302:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;pathfinder_file.c: 41:         if(Color_Value != 0){
  1423   00208A  51D8               	movf	_Color_Value& (0+255),w,b
  1424   00208C  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1425   00208E  B4D8               	btfsc	status,2,c
  1426   002090  EF4C  F010         	goto	u4831
  1427   002094  EF4E  F010         	goto	u4830
  1428   002098                     u4831:
  1429   002098  EFB2  F00F         	goto	l4272
  1430   00209C                     u4830:
  1431   00209C                     
  1432                           ; BSR set to: 0
  1433                           ;pathfinder_file.c: 43:             Operation_History[Operation_Count] = Forward_Count +
      +                           10;
  1434   00209C  0E3C               	movlw	low _Operation_History
  1435   00209E  25DB               	addwf	_Operation_Count& (0+255),w,b
  1436   0020A0  6ED9               	movwf	fsr2l,c
  1437   0020A2  6ADA               	clrf	fsr2h,c
  1438   0020A4  0E01               	movlw	high _Operation_History
  1439   0020A6  22DA               	addwfc	fsr2h,f,c
  1440   0020A8  51DA               	movf	_Forward_Count& (0+255),w,b
  1441   0020AA  0F0A               	addlw	10
  1442   0020AC  6EDF               	movwf	indf2,c
  1443   0020AE                     
  1444                           ; BSR set to: 0
  1445                           ;pathfinder_file.c: 44:             Forward_Count = 0;
  1446   0020AE  0E00               	movlw	0
  1447   0020B0  6FDA               	movwf	_Forward_Count& (0+255),b
  1448   0020B2                     
  1449                           ; BSR set to: 0
  1450                           ;pathfinder_file.c: 45:             Operation_Count++;
  1451   0020B2  2BDB               	incf	_Operation_Count& (0+255),f,b
  1452   0020B4                     
  1453                           ; BSR set to: 0
  1454                           ;pathfinder_file.c: 47:             if(Color_Value == 1){
  1455   0020B4  05D8               	decf	_Color_Value& (0+255),w,b
  1456   0020B6  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1457   0020B8  A4D8               	btfss	status,2,c
  1458   0020BA  EF61  F010         	goto	u4841
  1459   0020BE  EF63  F010         	goto	u4840
  1460   0020C2                     u4841:
  1461   0020C2  EF87  F010         	goto	l4320
  1462   0020C6                     u4840:
  1463   0020C6                     
  1464                           ; BSR set to: 0
  1465                           ;pathfinder_file.c: 48:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1466   0020C6  0E3C               	movlw	low _Operation_History
  1467   0020C8  25DB               	addwf	_Operation_Count& (0+255),w,b
  1468   0020CA  6ED9               	movwf	fsr2l,c
  1469   0020CC  6ADA               	clrf	fsr2h,c
  1470   0020CE  0E01               	movlw	high _Operation_History
  1471   0020D0  22DA               	addwfc	fsr2h,f,c
  1472   0020D2  C0D8  FFDF         	movff	_Color_Value,indf2
  1473   0020D6                     
  1474                           ; BSR set to: 0
  1475                           ;pathfinder_file.c: 49:                 Operation_Count++;
  1476   0020D6  2BDB               	incf	_Operation_Count& (0+255),f,b
  1477   0020D8                     
  1478                           ; BSR set to: 0
  1479                           ;pathfinder_file.c: 50:                 backward(c->backward_half, mL, mR);
  1480   0020D8  C0D4  F013         	movff	maze_search@mL,backward@mL
  1481   0020DC  C0D5  F014         	movff	maze_search@mR,backward@mR
  1482   0020E0  51D3               	movf	maze_search@c& (0+255),w,b
  1483   0020E2  6ED9               	movwf	fsr2l,c
  1484   0020E4  6ADA               	clrf	fsr2h,c
  1485   0020E6  0E08               	movlw	8
  1486   0020E8  26D9               	addwf	fsr2l,f,c
  1487   0020EA  50DF               	movf	indf2,w,c
  1488   0020EC  ECC3  F01E         	call	_backward
  1489   0020F0                     
  1490                           ;pathfinder_file.c: 51:                 rightTURN(c->right_90, mL, mR);
  1491   0020F0  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1492   0020F4  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1493   0020F8  0100               	movlb	0	; () banked
  1494   0020FA  51D3               	movf	maze_search@c& (0+255),w,b
  1495   0020FC  6ED9               	movwf	fsr2l,c
  1496   0020FE  6ADA               	clrf	fsr2h,c
  1497   002100  0E01               	movlw	1
  1498   002102  26D9               	addwf	fsr2l,f,c
  1499   002104  50DF               	movf	indf2,w,c
  1500   002106  EC45  F01D         	call	_rightTURN
  1501                           
  1502                           ;pathfinder_file.c: 52:             }
  1503   00210A  EFB2  F00F         	goto	l4272
  1504   00210E                     l4320:
  1505                           
  1506                           ; BSR set to: 0
  1507   00210E  0E02               	movlw	2
  1508   002110  19D8               	xorwf	_Color_Value& (0+255),w,b
  1509   002112  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1510   002114  A4D8               	btfss	status,2,c
  1511   002116  EF8F  F010         	goto	u4851
  1512   00211A  EF91  F010         	goto	u4850
  1513   00211E                     u4851:
  1514   00211E  EFB5  F010         	goto	l4330
  1515   002122                     u4850:
  1516   002122                     
  1517                           ; BSR set to: 0
  1518                           ;pathfinder_file.c: 55:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1519   002122  0E3C               	movlw	low _Operation_History
  1520   002124  25DB               	addwf	_Operation_Count& (0+255),w,b
  1521   002126  6ED9               	movwf	fsr2l,c
  1522   002128  6ADA               	clrf	fsr2h,c
  1523   00212A  0E01               	movlw	high _Operation_History
  1524   00212C  22DA               	addwfc	fsr2h,f,c
  1525   00212E  C0D8  FFDF         	movff	_Color_Value,indf2
  1526   002132                     
  1527                           ; BSR set to: 0
  1528                           ;pathfinder_file.c: 56:                 Operation_Count++;
  1529   002132  2BDB               	incf	_Operation_Count& (0+255),f,b
  1530   002134                     
  1531                           ; BSR set to: 0
  1532                           ;pathfinder_file.c: 57:                 backward(c->backward_half, mL, mR);
  1533   002134  C0D4  F013         	movff	maze_search@mL,backward@mL
  1534   002138  C0D5  F014         	movff	maze_search@mR,backward@mR
  1535   00213C  51D3               	movf	maze_search@c& (0+255),w,b
  1536   00213E  6ED9               	movwf	fsr2l,c
  1537   002140  6ADA               	clrf	fsr2h,c
  1538   002142  0E08               	movlw	8
  1539   002144  26D9               	addwf	fsr2l,f,c
  1540   002146  50DF               	movf	indf2,w,c
  1541   002148  ECC3  F01E         	call	_backward
  1542   00214C                     
  1543                           ;pathfinder_file.c: 58:                 leftTURN(c->left_90, mL, mR);
  1544   00214C  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1545   002150  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1546   002154  0100               	movlb	0	; () banked
  1547   002156  51D3               	movf	maze_search@c& (0+255),w,b
  1548   002158  6ED9               	movwf	fsr2l,c
  1549   00215A  6ADA               	clrf	fsr2h,c
  1550   00215C  0E02               	movlw	2
  1551   00215E  26D9               	addwf	fsr2l,f,c
  1552   002160  50DF               	movf	indf2,w,c
  1553   002162  EC04  F01E         	call	_leftTURN
  1554                           
  1555                           ;pathfinder_file.c: 59:             }
  1556   002166  EFB2  F00F         	goto	l4272
  1557   00216A                     l4330:
  1558                           
  1559                           ; BSR set to: 0
  1560   00216A  0E03               	movlw	3
  1561   00216C  19D8               	xorwf	_Color_Value& (0+255),w,b
  1562   00216E  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1563   002170  A4D8               	btfss	status,2,c
  1564   002172  EFBD  F010         	goto	u4861
  1565   002176  EFBF  F010         	goto	u4860
  1566   00217A                     u4861:
  1567   00217A  EFF0  F010         	goto	l4342
  1568   00217E                     u4860:
  1569   00217E                     
  1570                           ; BSR set to: 0
  1571                           ;pathfinder_file.c: 62:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1572   00217E  0E3C               	movlw	low _Operation_History
  1573   002180  25DB               	addwf	_Operation_Count& (0+255),w,b
  1574   002182  6ED9               	movwf	fsr2l,c
  1575   002184  6ADA               	clrf	fsr2h,c
  1576   002186  0E01               	movlw	high _Operation_History
  1577   002188  22DA               	addwfc	fsr2h,f,c
  1578   00218A  C0D8  FFDF         	movff	_Color_Value,indf2
  1579   00218E                     
  1580                           ; BSR set to: 0
  1581                           ;pathfinder_file.c: 63:                 Operation_Count++;
  1582   00218E  2BDB               	incf	_Operation_Count& (0+255),f,b
  1583   002190                     
  1584                           ; BSR set to: 0
  1585                           ;pathfinder_file.c: 64:                 backward(c->backward_half, mL, mR);
  1586   002190  C0D4  F013         	movff	maze_search@mL,backward@mL
  1587   002194  C0D5  F014         	movff	maze_search@mR,backward@mR
  1588   002198  51D3               	movf	maze_search@c& (0+255),w,b
  1589   00219A  6ED9               	movwf	fsr2l,c
  1590   00219C  6ADA               	clrf	fsr2h,c
  1591   00219E  0E08               	movlw	8
  1592   0021A0  26D9               	addwf	fsr2l,f,c
  1593   0021A2  50DF               	movf	indf2,w,c
  1594   0021A4  ECC3  F01E         	call	_backward
  1595   0021A8                     
  1596                           ;pathfinder_file.c: 65:                 rightTURN(c->right_90, mL, mR);
  1597   0021A8  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1598   0021AC  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1599   0021B0  0100               	movlb	0	; () banked
  1600   0021B2  51D3               	movf	maze_search@c& (0+255),w,b
  1601   0021B4  6ED9               	movwf	fsr2l,c
  1602   0021B6  6ADA               	clrf	fsr2h,c
  1603   0021B8  0E01               	movlw	1
  1604   0021BA  26D9               	addwf	fsr2l,f,c
  1605   0021BC  50DF               	movf	indf2,w,c
  1606   0021BE  EC45  F01D         	call	_rightTURN
  1607   0021C2                     
  1608                           ;pathfinder_file.c: 66:                 rightTURN(c->right_90, mL, mR);
  1609   0021C2  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1610   0021C6  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1611   0021CA  0100               	movlb	0	; () banked
  1612   0021CC  51D3               	movf	maze_search@c& (0+255),w,b
  1613   0021CE  6ED9               	movwf	fsr2l,c
  1614   0021D0  6ADA               	clrf	fsr2h,c
  1615   0021D2  0E01               	movlw	1
  1616   0021D4  26D9               	addwf	fsr2l,f,c
  1617   0021D6  50DF               	movf	indf2,w,c
  1618   0021D8  EC45  F01D         	call	_rightTURN
  1619                           
  1620                           ;pathfinder_file.c: 67:             }
  1621   0021DC  EFB2  F00F         	goto	l4272
  1622   0021E0                     l4342:
  1623                           
  1624                           ; BSR set to: 0
  1625   0021E0  0E04               	movlw	4
  1626   0021E2  19D8               	xorwf	_Color_Value& (0+255),w,b
  1627   0021E4  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1628   0021E6  A4D8               	btfss	status,2,c
  1629   0021E8  EFF8  F010         	goto	u4871
  1630   0021EC  EFFA  F010         	goto	u4870
  1631   0021F0                     u4871:
  1632   0021F0  EF2B  F011         	goto	l4354
  1633   0021F4                     u4870:
  1634   0021F4                     
  1635                           ; BSR set to: 0
  1636                           ;pathfinder_file.c: 70:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1637   0021F4  0E3C               	movlw	low _Operation_History
  1638   0021F6  25DB               	addwf	_Operation_Count& (0+255),w,b
  1639   0021F8  6ED9               	movwf	fsr2l,c
  1640   0021FA  6ADA               	clrf	fsr2h,c
  1641   0021FC  0E01               	movlw	high _Operation_History
  1642   0021FE  22DA               	addwfc	fsr2h,f,c
  1643   002200  C0D8  FFDF         	movff	_Color_Value,indf2
  1644   002204                     
  1645                           ; BSR set to: 0
  1646                           ;pathfinder_file.c: 71:                 Operation_Count++;
  1647   002204  2BDB               	incf	_Operation_Count& (0+255),f,b
  1648   002206                     
  1649                           ; BSR set to: 0
  1650                           ;pathfinder_file.c: 72:                 backward(c->backward_half, mL, mR);
  1651   002206  C0D4  F013         	movff	maze_search@mL,backward@mL
  1652   00220A  C0D5  F014         	movff	maze_search@mR,backward@mR
  1653   00220E  51D3               	movf	maze_search@c& (0+255),w,b
  1654   002210  6ED9               	movwf	fsr2l,c
  1655   002212  6ADA               	clrf	fsr2h,c
  1656   002214  0E08               	movlw	8
  1657   002216  26D9               	addwf	fsr2l,f,c
  1658   002218  50DF               	movf	indf2,w,c
  1659   00221A  ECC3  F01E         	call	_backward
  1660   00221E                     
  1661                           ;pathfinder_file.c: 73:                 backward(c->backward_one, mL, mR);
  1662   00221E  C0D4  F013         	movff	maze_search@mL,backward@mL
  1663   002222  C0D5  F014         	movff	maze_search@mR,backward@mR
  1664   002226  0100               	movlb	0	; () banked
  1665   002228  51D3               	movf	maze_search@c& (0+255),w,b
  1666   00222A  6ED9               	movwf	fsr2l,c
  1667   00222C  6ADA               	clrf	fsr2h,c
  1668   00222E  0E06               	movlw	6
  1669   002230  26D9               	addwf	fsr2l,f,c
  1670   002232  50DF               	movf	indf2,w,c
  1671   002234  ECC3  F01E         	call	_backward
  1672   002238                     
  1673                           ;pathfinder_file.c: 74:                 rightTURN(c->right_90, mL, mR);
  1674   002238  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1675   00223C  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1676   002240  0100               	movlb	0	; () banked
  1677   002242  51D3               	movf	maze_search@c& (0+255),w,b
  1678   002244  6ED9               	movwf	fsr2l,c
  1679   002246  6ADA               	clrf	fsr2h,c
  1680   002248  0E01               	movlw	1
  1681   00224A  26D9               	addwf	fsr2l,f,c
  1682   00224C  50DF               	movf	indf2,w,c
  1683   00224E  EC45  F01D         	call	_rightTURN
  1684                           
  1685                           ;pathfinder_file.c: 75:             }
  1686   002252  EFB2  F00F         	goto	l4272
  1687   002256                     l4354:
  1688                           
  1689                           ; BSR set to: 0
  1690   002256  0E05               	movlw	5
  1691   002258  19D8               	xorwf	_Color_Value& (0+255),w,b
  1692   00225A  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1693   00225C  A4D8               	btfss	status,2,c
  1694   00225E  EF33  F011         	goto	u4881
  1695   002262  EF35  F011         	goto	u4880
  1696   002266                     u4881:
  1697   002266  EF66  F011         	goto	l4366
  1698   00226A                     u4880:
  1699   00226A                     
  1700                           ; BSR set to: 0
  1701                           ;pathfinder_file.c: 78:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1702   00226A  0E3C               	movlw	low _Operation_History
  1703   00226C  25DB               	addwf	_Operation_Count& (0+255),w,b
  1704   00226E  6ED9               	movwf	fsr2l,c
  1705   002270  6ADA               	clrf	fsr2h,c
  1706   002272  0E01               	movlw	high _Operation_History
  1707   002274  22DA               	addwfc	fsr2h,f,c
  1708   002276  C0D8  FFDF         	movff	_Color_Value,indf2
  1709   00227A                     
  1710                           ; BSR set to: 0
  1711                           ;pathfinder_file.c: 79:                 Operation_Count++;
  1712   00227A  2BDB               	incf	_Operation_Count& (0+255),f,b
  1713   00227C                     
  1714                           ; BSR set to: 0
  1715                           ;pathfinder_file.c: 80:                 backward(c->backward_half, mL, mR);
  1716   00227C  C0D4  F013         	movff	maze_search@mL,backward@mL
  1717   002280  C0D5  F014         	movff	maze_search@mR,backward@mR
  1718   002284  51D3               	movf	maze_search@c& (0+255),w,b
  1719   002286  6ED9               	movwf	fsr2l,c
  1720   002288  6ADA               	clrf	fsr2h,c
  1721   00228A  0E08               	movlw	8
  1722   00228C  26D9               	addwf	fsr2l,f,c
  1723   00228E  50DF               	movf	indf2,w,c
  1724   002290  ECC3  F01E         	call	_backward
  1725   002294                     
  1726                           ;pathfinder_file.c: 81:                 backward(c->backward_one, mL, mR);
  1727   002294  C0D4  F013         	movff	maze_search@mL,backward@mL
  1728   002298  C0D5  F014         	movff	maze_search@mR,backward@mR
  1729   00229C  0100               	movlb	0	; () banked
  1730   00229E  51D3               	movf	maze_search@c& (0+255),w,b
  1731   0022A0  6ED9               	movwf	fsr2l,c
  1732   0022A2  6ADA               	clrf	fsr2h,c
  1733   0022A4  0E06               	movlw	6
  1734   0022A6  26D9               	addwf	fsr2l,f,c
  1735   0022A8  50DF               	movf	indf2,w,c
  1736   0022AA  ECC3  F01E         	call	_backward
  1737   0022AE                     
  1738                           ;pathfinder_file.c: 82:                 leftTURN(c->left_90, mL, mR);
  1739   0022AE  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1740   0022B2  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1741   0022B6  0100               	movlb	0	; () banked
  1742   0022B8  51D3               	movf	maze_search@c& (0+255),w,b
  1743   0022BA  6ED9               	movwf	fsr2l,c
  1744   0022BC  6ADA               	clrf	fsr2h,c
  1745   0022BE  0E02               	movlw	2
  1746   0022C0  26D9               	addwf	fsr2l,f,c
  1747   0022C2  50DF               	movf	indf2,w,c
  1748   0022C4  EC04  F01E         	call	_leftTURN
  1749                           
  1750                           ;pathfinder_file.c: 83:             }
  1751   0022C8  EFB2  F00F         	goto	l4272
  1752   0022CC                     l4366:
  1753                           
  1754                           ; BSR set to: 0
  1755   0022CC  0E06               	movlw	6
  1756   0022CE  19D8               	xorwf	_Color_Value& (0+255),w,b
  1757   0022D0  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1758   0022D2  A4D8               	btfss	status,2,c
  1759   0022D4  EF6E  F011         	goto	u4891
  1760   0022D8  EF70  F011         	goto	u4890
  1761   0022DC                     u4891:
  1762   0022DC  EF94  F011         	goto	l4376
  1763   0022E0                     u4890:
  1764   0022E0                     
  1765                           ; BSR set to: 0
  1766                           ;pathfinder_file.c: 86:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1767   0022E0  0E3C               	movlw	low _Operation_History
  1768   0022E2  25DB               	addwf	_Operation_Count& (0+255),w,b
  1769   0022E4  6ED9               	movwf	fsr2l,c
  1770   0022E6  6ADA               	clrf	fsr2h,c
  1771   0022E8  0E01               	movlw	high _Operation_History
  1772   0022EA  22DA               	addwfc	fsr2h,f,c
  1773   0022EC  C0D8  FFDF         	movff	_Color_Value,indf2
  1774   0022F0                     
  1775                           ; BSR set to: 0
  1776                           ;pathfinder_file.c: 87:                 Operation_Count++;
  1777   0022F0  2BDB               	incf	_Operation_Count& (0+255),f,b
  1778   0022F2                     
  1779                           ; BSR set to: 0
  1780                           ;pathfinder_file.c: 88:                 backward(c->backward_half, mL, mR);
  1781   0022F2  C0D4  F013         	movff	maze_search@mL,backward@mL
  1782   0022F6  C0D5  F014         	movff	maze_search@mR,backward@mR
  1783   0022FA  51D3               	movf	maze_search@c& (0+255),w,b
  1784   0022FC  6ED9               	movwf	fsr2l,c
  1785   0022FE  6ADA               	clrf	fsr2h,c
  1786   002300  0E08               	movlw	8
  1787   002302  26D9               	addwf	fsr2l,f,c
  1788   002304  50DF               	movf	indf2,w,c
  1789   002306  ECC3  F01E         	call	_backward
  1790   00230A                     
  1791                           ;pathfinder_file.c: 89:                 rightTURN(c->right_135, mL, mR);
  1792   00230A  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1793   00230E  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1794   002312  0100               	movlb	0	; () banked
  1795   002314  51D3               	movf	maze_search@c& (0+255),w,b
  1796   002316  6ED9               	movwf	fsr2l,c
  1797   002318  6ADA               	clrf	fsr2h,c
  1798   00231A  0E03               	movlw	3
  1799   00231C  26D9               	addwf	fsr2l,f,c
  1800   00231E  50DF               	movf	indf2,w,c
  1801   002320  EC45  F01D         	call	_rightTURN
  1802                           
  1803                           ;pathfinder_file.c: 90:             }
  1804   002324  EFB2  F00F         	goto	l4272
  1805   002328                     l4376:
  1806                           
  1807                           ; BSR set to: 0
  1808   002328  0E07               	movlw	7
  1809   00232A  19D8               	xorwf	_Color_Value& (0+255),w,b
  1810   00232C  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1811   00232E  A4D8               	btfss	status,2,c
  1812   002330  EF9C  F011         	goto	u4901
  1813   002334  EF9E  F011         	goto	u4900
  1814   002338                     u4901:
  1815   002338  EFC2  F011         	goto	l4386
  1816   00233C                     u4900:
  1817   00233C                     
  1818                           ; BSR set to: 0
  1819                           ;pathfinder_file.c: 93:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1820   00233C  0E3C               	movlw	low _Operation_History
  1821   00233E  25DB               	addwf	_Operation_Count& (0+255),w,b
  1822   002340  6ED9               	movwf	fsr2l,c
  1823   002342  6ADA               	clrf	fsr2h,c
  1824   002344  0E01               	movlw	high _Operation_History
  1825   002346  22DA               	addwfc	fsr2h,f,c
  1826   002348  C0D8  FFDF         	movff	_Color_Value,indf2
  1827   00234C                     
  1828                           ; BSR set to: 0
  1829                           ;pathfinder_file.c: 94:                 Operation_Count++;
  1830   00234C  2BDB               	incf	_Operation_Count& (0+255),f,b
  1831   00234E                     
  1832                           ; BSR set to: 0
  1833                           ;pathfinder_file.c: 95:                 backward(c->backward_half, mL, mR);
  1834   00234E  C0D4  F013         	movff	maze_search@mL,backward@mL
  1835   002352  C0D5  F014         	movff	maze_search@mR,backward@mR
  1836   002356  51D3               	movf	maze_search@c& (0+255),w,b
  1837   002358  6ED9               	movwf	fsr2l,c
  1838   00235A  6ADA               	clrf	fsr2h,c
  1839   00235C  0E08               	movlw	8
  1840   00235E  26D9               	addwf	fsr2l,f,c
  1841   002360  50DF               	movf	indf2,w,c
  1842   002362  ECC3  F01E         	call	_backward
  1843   002366                     
  1844                           ;pathfinder_file.c: 96:                 leftTURN(c->left_135, mL, mR);
  1845   002366  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1846   00236A  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1847   00236E  0100               	movlb	0	; () banked
  1848   002370  51D3               	movf	maze_search@c& (0+255),w,b
  1849   002372  6ED9               	movwf	fsr2l,c
  1850   002374  6ADA               	clrf	fsr2h,c
  1851   002376  0E04               	movlw	4
  1852   002378  26D9               	addwf	fsr2l,f,c
  1853   00237A  50DF               	movf	indf2,w,c
  1854   00237C  EC04  F01E         	call	_leftTURN
  1855                           
  1856                           ;pathfinder_file.c: 97:             }
  1857   002380  EFB2  F00F         	goto	l4272
  1858   002384                     l4386:
  1859                           
  1860                           ; BSR set to: 0
  1861   002384  0E08               	movlw	8
  1862   002386  19D8               	xorwf	_Color_Value& (0+255),w,b
  1863   002388  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1864   00238A  A4D8               	btfss	status,2,c
  1865   00238C  EFCA  F011         	goto	u4911
  1866   002390  EFCC  F011         	goto	u4910
  1867   002394                     u4911:
  1868   002394  EF0E  F012         	goto	l477
  1869   002398                     u4910:
  1870   002398                     
  1871                           ; BSR set to: 0
  1872                           ;pathfinder_file.c: 101:                 backward(c->backward_half, mL, mR);
  1873   002398  C0D4  F013         	movff	maze_search@mL,backward@mL
  1874   00239C  C0D5  F014         	movff	maze_search@mR,backward@mR
  1875   0023A0  51D3               	movf	maze_search@c& (0+255),w,b
  1876   0023A2  6ED9               	movwf	fsr2l,c
  1877   0023A4  6ADA               	clrf	fsr2h,c
  1878   0023A6  0E08               	movlw	8
  1879   0023A8  26D9               	addwf	fsr2l,f,c
  1880   0023AA  50DF               	movf	indf2,w,c
  1881   0023AC  ECC3  F01E         	call	_backward
  1882                           
  1883                           ;pathfinder_file.c: 102:                 rightTURN(c->right_90, mL, mR);
  1884   0023B0  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1885   0023B4  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1886   0023B8  0100               	movlb	0	; () banked
  1887   0023BA  51D3               	movf	maze_search@c& (0+255),w,b
  1888   0023BC  6ED9               	movwf	fsr2l,c
  1889   0023BE  6ADA               	clrf	fsr2h,c
  1890   0023C0  0E01               	movlw	1
  1891   0023C2  26D9               	addwf	fsr2l,f,c
  1892   0023C4  50DF               	movf	indf2,w,c
  1893   0023C6  EC45  F01D         	call	_rightTURN
  1894                           
  1895                           ;pathfinder_file.c: 103:                 rightTURN(c->right_90, mL, mR);
  1896   0023CA  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1897   0023CE  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1898   0023D2  0100               	movlb	0	; () banked
  1899   0023D4  51D3               	movf	maze_search@c& (0+255),w,b
  1900   0023D6  6ED9               	movwf	fsr2l,c
  1901   0023D8  6ADA               	clrf	fsr2h,c
  1902   0023DA  0E01               	movlw	1
  1903   0023DC  26D9               	addwf	fsr2l,f,c
  1904   0023DE  50DF               	movf	indf2,w,c
  1905   0023E0  EC45  F01D         	call	_rightTURN
  1906                           
  1907                           ;pathfinder_file.c: 104:                 backward(c->backward_one, mL, mR);
  1908   0023E4  C0D4  F013         	movff	maze_search@mL,backward@mL
  1909   0023E8  C0D5  F014         	movff	maze_search@mR,backward@mR
  1910   0023EC  0100               	movlb	0	; () banked
  1911   0023EE  51D3               	movf	maze_search@c& (0+255),w,b
  1912   0023F0  6ED9               	movwf	fsr2l,c
  1913   0023F2  6ADA               	clrf	fsr2h,c
  1914   0023F4  0E06               	movlw	6
  1915   0023F6  26D9               	addwf	fsr2l,f,c
  1916   0023F8  50DF               	movf	indf2,w,c
  1917   0023FA  ECC3  F01E         	call	_backward
  1918                           
  1919                           ;pathfinder_file.c: 105:                 forward(c->forward_half, mL, mR);
  1920   0023FE  C0D4  F013         	movff	maze_search@mL,forward@mL
  1921   002402  C0D5  F014         	movff	maze_search@mR,forward@mR
  1922   002406  0100               	movlb	0	; () banked
  1923   002408  51D3               	movf	maze_search@c& (0+255),w,b
  1924   00240A  6ED9               	movwf	fsr2l,c
  1925   00240C  6ADA               	clrf	fsr2h,c
  1926   00240E  0E07               	movlw	7
  1927   002410  26D9               	addwf	fsr2l,f,c
  1928   002412  50DF               	movf	indf2,w,c
  1929   002414  EC85  F01C         	call	_forward
  1930                           
  1931                           ;pathfinder_file.c: 106:                 break;
  1932   002418  EF10  F012         	goto	l484
  1933   00241C                     l477:
  1934                           
  1935                           ; BSR set to: 0
  1936   00241C  EFB2  F00F         	goto	l4272
  1937   002420                     l484:
  1938   002420  0012               	return		;funcret
  1939   002422                     __end_of_maze_search:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _color_click_init *****************
  1943 ;; Defined at:
  1944 ;;		line 7 in file "color.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 3
  1965 ;; This function calls:
  1966 ;;		_I2C_2_Master_Init
  1967 ;;		_color_writetoaddr
  1968 ;; This function is called by:
  1969 ;;		_maze_search
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text3
  1974   004ADA                     __ptext3:
  1975                           	callstack 0
  1976   004ADA                     _color_click_init:
  1977                           	callstack 26
  1978   004ADA                     
  1979                           ;color.c: 10:     I2C_2_Master_Init();
  1980   004ADA  ECBF  F025         	call	_I2C_2_Master_Init	;wreg free
  1981   004ADE                     
  1982                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  1983   004ADE  0E01               	movlw	1
  1984   004AE0  6E03               	movwf	color_writetoaddr@value^0,c
  1985   004AE2  0E00               	movlw	0
  1986   004AE4  ECFB  F025         	call	_color_writetoaddr
  1987   004AE8                     
  1988                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1989   004AE8  0E3F               	movlw	63
  1990   004AEA  6E05               	movwf	??_color_click_init^0,c
  1991   004AEC  0E55               	movlw	85
  1992   004AEE                     u5187:
  1993   004AEE  2EE8               	decfsz	wreg,f,c
  1994   004AF0  D7FE               	bra	u5187
  1995   004AF2  2E05               	decfsz	??_color_click_init^0,f,c
  1996   004AF4  D7FC               	bra	u5187
  1997   004AF6  0000               	nop	
  1998   004AF8                     
  1999                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  2000   004AF8  0E03               	movlw	3
  2001   004AFA  6E03               	movwf	color_writetoaddr@value^0,c
  2002   004AFC  0E00               	movlw	0
  2003   004AFE  ECFB  F025         	call	_color_writetoaddr
  2004   004B02                     
  2005                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  2006   004B02  0ED5               	movlw	213
  2007   004B04  6E03               	movwf	color_writetoaddr@value^0,c
  2008   004B06  0E01               	movlw	1
  2009   004B08  ECFB  F025         	call	_color_writetoaddr
  2010   004B0C                     
  2011                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  2012   004B0C  9287               	bcf	135,1,c	;volatile
  2013   004B0E                     
  2014                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  2015   004B0E  9881               	bcf	129,4,c	;volatile
  2016   004B10                     
  2017                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  2018   004B10  9E86               	bcf	134,7,c	;volatile
  2019   004B12                     
  2020                           ;color.c: 30:     LATGbits.LATG1 = 1;
  2021   004B12  827F               	bsf	127,1,c	;volatile
  2022   004B14                     
  2023                           ;color.c: 31:     LATAbits.LATA4 = 1;
  2024   004B14  8879               	bsf	121,4,c	;volatile
  2025   004B16                     
  2026                           ;color.c: 32:     LATFbits.LATF7 = 1;
  2027   004B16  8E7E               	bsf	126,7,c	;volatile
  2028   004B18  0012               	return		;funcret
  2029   004B1A                     __end_of_color_click_init:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _color_writetoaddr *****************
  2033 ;; Defined at:
  2034 ;;		line 37 in file "color.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  address         1    wreg     unsigned char 
  2037 ;;  value           1    2[COMRAM] unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  address         1    3[COMRAM] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2049 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;Total ram usage:        2 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 2
  2056 ;; This function calls:
  2057 ;;		_I2C_2_Master_Start
  2058 ;;		_I2C_2_Master_Stop
  2059 ;;		_I2C_2_Master_Write
  2060 ;; This function is called by:
  2061 ;;		_color_click_init
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text4
  2066   004BF6                     __ptext4:
  2067                           	callstack 0
  2068   004BF6                     _color_writetoaddr:
  2069                           	callstack 26
  2070                           
  2071                           ;incstack = 0
  2072                           ;color_writetoaddr@address stored from wreg
  2073   004BF6  6E04               	movwf	color_writetoaddr@address^0,c
  2074   004BF8                     
  2075                           ;color.c: 38:     I2C_2_Master_Start();
  2076   004BF8  EC16  F026         	call	_I2C_2_Master_Start	;wreg free
  2077                           
  2078                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2079   004BFC  0E52               	movlw	82
  2080   004BFE  EC0B  F026         	call	_I2C_2_Master_Write
  2081                           
  2082                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  2083   004C02  5004               	movf	color_writetoaddr@address^0,w,c
  2084   004C04  0980               	iorlw	128
  2085   004C06  EC0B  F026         	call	_I2C_2_Master_Write
  2086                           
  2087                           ;color.c: 41:     I2C_2_Master_Write(value);
  2088   004C0A  5003               	movf	color_writetoaddr@value^0,w,c
  2089   004C0C  EC0B  F026         	call	_I2C_2_Master_Write
  2090                           
  2091                           ;color.c: 42:     I2C_2_Master_Stop();
  2092   004C10  EC11  F026         	call	_I2C_2_Master_Stop	;wreg free
  2093   004C14  0012               	return		;funcret
  2094   004C16                     __end_of_color_writetoaddr:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _I2C_2_Master_Init *****************
  2098 ;; Defined at:
  2099 ;;		line 4 in file "i2c.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_color_click_init
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text5
  2127   004B7E                     __ptext5:
  2128                           	callstack 0
  2129   004B7E                     _I2C_2_Master_Init:
  2130                           	callstack 28
  2131   004B7E                     
  2132                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2133   004B7E  010E               	movlb	14	; () banked
  2134   004B80  51D9               	movf	217,w,b	;volatile
  2135   004B82  0BF0               	andlw	-16
  2136   004B84  0908               	iorlw	8
  2137   004B86  6FD9               	movwf	217,b	;volatile
  2138   004B88                     
  2139                           ; BSR set to: 14
  2140                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2141   004B88  8BD9               	bsf	217,5,b	;volatile
  2142                           
  2143                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2144   004B8A  0E9F               	movlw	159
  2145   004B8C  6FD6               	movwf	214,b	;volatile
  2146   004B8E                     
  2147                           ; BSR set to: 14
  2148                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2149   004B8E  8A84               	bsf	132,5,c	;volatile
  2150   004B90                     
  2151                           ; BSR set to: 14
  2152                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2153   004B90  8C84               	bsf	132,6,c	;volatile
  2154   004B92                     
  2155                           ; BSR set to: 14
  2156                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2157   004B92  9BA7               	bcf	167,5,b	;volatile
  2158   004B94                     
  2159                           ; BSR set to: 14
  2160                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2161   004B94  9DA7               	bcf	167,6,b	;volatile
  2162                           
  2163                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2164   004B96  0E1D               	movlw	29
  2165   004B98  6F1D               	movwf	29,b	;volatile
  2166                           
  2167                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2168   004B9A  0E1E               	movlw	30
  2169   004B9C  6F1C               	movwf	28,b	;volatile
  2170                           
  2171                           ;i2c.c: 18:   RD5PPS=0x1C;
  2172   004B9E  0E1C               	movlw	28
  2173   004BA0  6F6F               	movwf	111,b	;volatile
  2174                           
  2175                           ;i2c.c: 19:   RD6PPS=0x1B;
  2176   004BA2  0E1B               	movlw	27
  2177   004BA4  6F70               	movwf	112,b	;volatile
  2178   004BA6                     
  2179                           ; BSR set to: 14
  2180   004BA6  0012               	return		;funcret
  2181   004BA8                     __end_of_I2C_2_Master_Init:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _color_cardCheck *****************
  2185 ;; Defined at:
  2186 ;;		line 166 in file "color.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  V               4  111[BANK0 ] float 
  2191 ;;  S               4  107[BANK0 ] float 
  2192 ;;  H               4  103[BANK0 ] float 
  2193 ;;  c               4   97[BANK0 ] float 
  2194 ;;  b               4   93[BANK0 ] float 
  2195 ;;  g               4   89[BANK0 ] float 
  2196 ;;  r               4   85[BANK0 ] float 
  2197 ;;  card_color      2  101[BANK0 ] unsigned int 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  2   91[COMRAM] unsigned int 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;Total ram usage:       32 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 4
  2214 ;; This function calls:
  2215 ;;		_RGB_to_HSV
  2216 ;;		___flge
  2217 ;;		___xxtofl
  2218 ;;		_color_read_Blue
  2219 ;;		_color_read_Clear
  2220 ;;		_color_read_Green
  2221 ;;		_color_read_Red
  2222 ;; This function is called by:
  2223 ;;		_maze_search
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text6
  2228   000E02                     __ptext6:
  2229                           	callstack 0
  2230   000E02                     _color_cardCheck:
  2231                           	callstack 25
  2232   000E02                     
  2233                           ;color.c: 169:     float r = color_read_Red();
  2234   000E02  EC89  F024         	call	_color_read_Red	;wreg free
  2235   000E06  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2236   000E0A  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2237   000E0E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2238   000E10  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2239   000E12  0E00               	movlw	0
  2240   000E14  ECAB  F01B         	call	___xxtofl
  2241   000E18  C00C  F0B5         	movff	?___xxtofl,color_cardCheck@r
  2242   000E1C  C00D  F0B6         	movff	?___xxtofl+1,color_cardCheck@r+1
  2243   000E20  C00E  F0B7         	movff	?___xxtofl+2,color_cardCheck@r+2
  2244   000E24  C00F  F0B8         	movff	?___xxtofl+3,color_cardCheck@r+3
  2245                           
  2246                           ;color.c: 170:     float g = color_read_Green();
  2247   000E28  ECB1  F024         	call	_color_read_Green	;wreg free
  2248   000E2C  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2249   000E30  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2250   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2251   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2252   000E38  0E00               	movlw	0
  2253   000E3A  ECAB  F01B         	call	___xxtofl
  2254   000E3E  C00C  F0B9         	movff	?___xxtofl,color_cardCheck@g
  2255   000E42  C00D  F0BA         	movff	?___xxtofl+1,color_cardCheck@g+1
  2256   000E46  C00E  F0BB         	movff	?___xxtofl+2,color_cardCheck@g+2
  2257   000E4A  C00F  F0BC         	movff	?___xxtofl+3,color_cardCheck@g+3
  2258                           
  2259                           ;color.c: 171:     float b = color_read_Blue();
  2260   000E4E  EC01  F025         	call	_color_read_Blue	;wreg free
  2261   000E52  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2262   000E56  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2263   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2264   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2265   000E5E  0E00               	movlw	0
  2266   000E60  ECAB  F01B         	call	___xxtofl
  2267   000E64  C00C  F0BD         	movff	?___xxtofl,color_cardCheck@b
  2268   000E68  C00D  F0BE         	movff	?___xxtofl+1,color_cardCheck@b+1
  2269   000E6C  C00E  F0BF         	movff	?___xxtofl+2,color_cardCheck@b+2
  2270   000E70  C00F  F0C0         	movff	?___xxtofl+3,color_cardCheck@b+3
  2271                           
  2272                           ;color.c: 174:     float c = color_read_Clear();
  2273   000E74  ECD9  F024         	call	_color_read_Clear	;wreg free
  2274   000E78  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2275   000E7C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2276   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2277   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2278   000E84  0E00               	movlw	0
  2279   000E86  ECAB  F01B         	call	___xxtofl
  2280   000E8A  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@c
  2281   000E8E  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@c+1
  2282   000E92  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@c+2
  2283   000E96  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@c+3
  2284   000E9A                     
  2285                           ;color.c: 177:     float H;;color.c: 178:     float S;;color.c: 179:     float V;;color.
      +                          c: 181:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  2286   000E9A  C0B5  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  2287   000E9E  C0B6  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  2288   000EA2  C0B7  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  2289   000EA6  C0B8  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  2290   000EAA  C0B9  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  2291   000EAE  C0BA  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  2292   000EB2  C0BB  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  2293   000EB6  C0BC  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  2294   000EBA  C0BD  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  2295   000EBE  C0BE  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  2296   000EC2  C0BF  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  2297   000EC6  C0C0  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  2298   000ECA  C0C1  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  2299   000ECE  C0C2  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  2300   000ED2  C0C3  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  2301   000ED6  C0C4  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  2302   000EDA  0EC7               	movlw	low color_cardCheck@H
  2303   000EDC  0100               	movlb	0	; () banked
  2304   000EDE  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  2305   000EE0  0ECB               	movlw	low color_cardCheck@S
  2306   000EE2  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  2307   000EE4  0ECF               	movlw	low color_cardCheck@V
  2308   000EE6  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  2309   000EE8  EC1D  F00C         	call	_RGB_to_HSV	;wreg free
  2310   000EEC                     
  2311                           ;color.c: 186:     unsigned int card_color = 0;
  2312   000EEC  0E00               	movlw	0
  2313   000EEE  0100               	movlb	0	; () banked
  2314   000EF0  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2315   000EF2  0E00               	movlw	0
  2316   000EF4  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2317   000EF6                     
  2318                           ; BSR set to: 0
  2319                           ;color.c: 189:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  2320   000EF6  0E00               	movlw	0
  2321   000EF8  6E01               	movwf	___flge@ff1^0,c
  2322   000EFA  0E80               	movlw	128
  2323   000EFC  6E02               	movwf	(___flge@ff1+1)^0,c
  2324   000EFE  0EB1               	movlw	177
  2325   000F00  6E03               	movwf	(___flge@ff1+2)^0,c
  2326   000F02  0E43               	movlw	67
  2327   000F04  6E04               	movwf	(___flge@ff1+3)^0,c
  2328   000F06  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2329   000F0A  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2330   000F0E  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2331   000F12  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2332   000F16  ECE1  F021         	call	___flge	;wreg free
  2333   000F1A  B0D8               	btfsc	status,0,c
  2334   000F1C  EF92  F007         	goto	u3941
  2335   000F20  EF94  F007         	goto	u3940
  2336   000F24                     u3941:
  2337   000F24  EF18  F008         	goto	l3828
  2338   000F28                     u3940:
  2339   000F28  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2340   000F2C  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2341   000F30  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2342   000F34  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2343   000F38  0E00               	movlw	0
  2344   000F3A  6E05               	movwf	___flge@ff2^0,c
  2345   000F3C  0E00               	movlw	0
  2346   000F3E  6E06               	movwf	(___flge@ff2+1)^0,c
  2347   000F40  0EB4               	movlw	180
  2348   000F42  6E07               	movwf	(___flge@ff2+2)^0,c
  2349   000F44  0E43               	movlw	67
  2350   000F46  6E08               	movwf	(___flge@ff2+3)^0,c
  2351   000F48  ECE1  F021         	call	___flge	;wreg free
  2352   000F4C  B0D8               	btfsc	status,0,c
  2353   000F4E  EFAB  F007         	goto	u3951
  2354   000F52  EFAD  F007         	goto	u3950
  2355   000F56                     u3951:
  2356   000F56  EF18  F008         	goto	l3828
  2357   000F5A                     u3950:
  2358   000F5A  0E00               	movlw	0
  2359   000F5C  6E01               	movwf	___flge@ff1^0,c
  2360   000F5E  0E00               	movlw	0
  2361   000F60  6E02               	movwf	(___flge@ff1+1)^0,c
  2362   000F62  0EAA               	movlw	170
  2363   000F64  6E03               	movwf	(___flge@ff1+2)^0,c
  2364   000F66  0E42               	movlw	66
  2365   000F68  6E04               	movwf	(___flge@ff1+3)^0,c
  2366   000F6A  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2367   000F6E  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2368   000F72  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2369   000F76  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2370   000F7A  ECE1  F021         	call	___flge	;wreg free
  2371   000F7E  B0D8               	btfsc	status,0,c
  2372   000F80  EFC4  F007         	goto	u3961
  2373   000F84  EFC6  F007         	goto	u3960
  2374   000F88                     u3961:
  2375   000F88  EF18  F008         	goto	l3828
  2376   000F8C                     u3960:
  2377   000F8C  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2378   000F90  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2379   000F94  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2380   000F98  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2381   000F9C  0E00               	movlw	0
  2382   000F9E  6E05               	movwf	___flge@ff2^0,c
  2383   000FA0  0E00               	movlw	0
  2384   000FA2  6E06               	movwf	(___flge@ff2+1)^0,c
  2385   000FA4  0EB4               	movlw	180
  2386   000FA6  6E07               	movwf	(___flge@ff2+2)^0,c
  2387   000FA8  0E42               	movlw	66
  2388   000FAA  6E08               	movwf	(___flge@ff2+3)^0,c
  2389   000FAC  ECE1  F021         	call	___flge	;wreg free
  2390   000FB0  B0D8               	btfsc	status,0,c
  2391   000FB2  EFDD  F007         	goto	u3971
  2392   000FB6  EFDF  F007         	goto	u3970
  2393   000FBA                     u3971:
  2394   000FBA  EF18  F008         	goto	l3828
  2395   000FBE                     u3970:
  2396   000FBE  0E00               	movlw	0
  2397   000FC0  6E01               	movwf	___flge@ff1^0,c
  2398   000FC2  0E00               	movlw	0
  2399   000FC4  6E02               	movwf	(___flge@ff1+1)^0,c
  2400   000FC6  0EA0               	movlw	160
  2401   000FC8  6E03               	movwf	(___flge@ff1+2)^0,c
  2402   000FCA  0E42               	movlw	66
  2403   000FCC  6E04               	movwf	(___flge@ff1+3)^0,c
  2404   000FCE  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2405   000FD2  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2406   000FD6  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2407   000FDA  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2408   000FDE  ECE1  F021         	call	___flge	;wreg free
  2409   000FE2  B0D8               	btfsc	status,0,c
  2410   000FE4  EFF6  F007         	goto	u3981
  2411   000FE8  EFF8  F007         	goto	u3980
  2412   000FEC                     u3981:
  2413   000FEC  EF18  F008         	goto	l3828
  2414   000FF0                     u3980:
  2415   000FF0  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2416   000FF4  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2417   000FF8  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2418   000FFC  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2419   001000  0E00               	movlw	0
  2420   001002  6E05               	movwf	___flge@ff2^0,c
  2421   001004  0E00               	movlw	0
  2422   001006  6E06               	movwf	(___flge@ff2+1)^0,c
  2423   001008  0EAA               	movlw	170
  2424   00100A  6E07               	movwf	(___flge@ff2+2)^0,c
  2425   00100C  0E42               	movlw	66
  2426   00100E  6E08               	movwf	(___flge@ff2+3)^0,c
  2427   001010  ECE1  F021         	call	___flge	;wreg free
  2428   001014  B0D8               	btfsc	status,0,c
  2429   001016  EF0F  F008         	goto	u3991
  2430   00101A  EF11  F008         	goto	u3990
  2431   00101E                     u3991:
  2432   00101E  EF18  F008         	goto	l3828
  2433   001022                     u3990:
  2434   001022  0E00               	movlw	0
  2435   001024  0100               	movlb	0	; () banked
  2436   001026  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2437   001028  0E01               	movlw	1
  2438   00102A  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2439   00102C  EF18  F00C         	goto	l3920
  2440   001030                     l3828:
  2441   001030  0E00               	movlw	0
  2442   001032  6E01               	movwf	___flge@ff1^0,c
  2443   001034  0E00               	movlw	0
  2444   001036  6E02               	movwf	(___flge@ff1+1)^0,c
  2445   001038  0E86               	movlw	134
  2446   00103A  6E03               	movwf	(___flge@ff1+2)^0,c
  2447   00103C  0E42               	movlw	66
  2448   00103E  6E04               	movwf	(___flge@ff1+3)^0,c
  2449   001040  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2450   001044  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2451   001048  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2452   00104C  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2453   001050  ECE1  F021         	call	___flge	;wreg free
  2454   001054  B0D8               	btfsc	status,0,c
  2455   001056  EF2F  F008         	goto	u4001
  2456   00105A  EF31  F008         	goto	u4000
  2457   00105E                     u4001:
  2458   00105E  EFB5  F008         	goto	l3842
  2459   001062                     u4000:
  2460   001062  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2461   001066  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2462   00106A  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2463   00106E  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2464   001072  0E00               	movlw	0
  2465   001074  6E05               	movwf	___flge@ff2^0,c
  2466   001076  0E00               	movlw	0
  2467   001078  6E06               	movwf	(___flge@ff2+1)^0,c
  2468   00107A  0E9E               	movlw	158
  2469   00107C  6E07               	movwf	(___flge@ff2+2)^0,c
  2470   00107E  0E42               	movlw	66
  2471   001080  6E08               	movwf	(___flge@ff2+3)^0,c
  2472   001082  ECE1  F021         	call	___flge	;wreg free
  2473   001086  B0D8               	btfsc	status,0,c
  2474   001088  EF48  F008         	goto	u4011
  2475   00108C  EF4A  F008         	goto	u4010
  2476   001090                     u4011:
  2477   001090  EFB5  F008         	goto	l3842
  2478   001094                     u4010:
  2479   001094  0E00               	movlw	0
  2480   001096  6E01               	movwf	___flge@ff1^0,c
  2481   001098  0E00               	movlw	0
  2482   00109A  6E02               	movwf	(___flge@ff1+1)^0,c
  2483   00109C  0E48               	movlw	72
  2484   00109E  6E03               	movwf	(___flge@ff1+2)^0,c
  2485   0010A0  0E42               	movlw	66
  2486   0010A2  6E04               	movwf	(___flge@ff1+3)^0,c
  2487   0010A4  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2488   0010A8  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2489   0010AC  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2490   0010B0  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2491   0010B4  ECE1  F021         	call	___flge	;wreg free
  2492   0010B8  B0D8               	btfsc	status,0,c
  2493   0010BA  EF61  F008         	goto	u4021
  2494   0010BE  EF63  F008         	goto	u4020
  2495   0010C2                     u4021:
  2496   0010C2  EFB5  F008         	goto	l3842
  2497   0010C6                     u4020:
  2498   0010C6  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2499   0010CA  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2500   0010CE  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2501   0010D2  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2502   0010D6  0E00               	movlw	0
  2503   0010D8  6E05               	movwf	___flge@ff2^0,c
  2504   0010DA  0E00               	movlw	0
  2505   0010DC  6E06               	movwf	(___flge@ff2+1)^0,c
  2506   0010DE  0E64               	movlw	100
  2507   0010E0  6E07               	movwf	(___flge@ff2+2)^0,c
  2508   0010E2  0E42               	movlw	66
  2509   0010E4  6E08               	movwf	(___flge@ff2+3)^0,c
  2510   0010E6  ECE1  F021         	call	___flge	;wreg free
  2511   0010EA  B0D8               	btfsc	status,0,c
  2512   0010EC  EF7A  F008         	goto	u4031
  2513   0010F0  EF7C  F008         	goto	u4030
  2514   0010F4                     u4031:
  2515   0010F4  EFB5  F008         	goto	l3842
  2516   0010F8                     u4030:
  2517   0010F8  0E00               	movlw	0
  2518   0010FA  6E01               	movwf	___flge@ff1^0,c
  2519   0010FC  0E00               	movlw	0
  2520   0010FE  6E02               	movwf	(___flge@ff1+1)^0,c
  2521   001100  0E20               	movlw	32
  2522   001102  6E03               	movwf	(___flge@ff1+2)^0,c
  2523   001104  0E42               	movlw	66
  2524   001106  6E04               	movwf	(___flge@ff1+3)^0,c
  2525   001108  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2526   00110C  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2527   001110  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2528   001114  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2529   001118  ECE1  F021         	call	___flge	;wreg free
  2530   00111C  B0D8               	btfsc	status,0,c
  2531   00111E  EF93  F008         	goto	u4041
  2532   001122  EF95  F008         	goto	u4040
  2533   001126                     u4041:
  2534   001126  EFB5  F008         	goto	l3842
  2535   00112A                     u4040:
  2536   00112A  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2537   00112E  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2538   001132  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2539   001136  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2540   00113A  0E00               	movlw	0
  2541   00113C  6E05               	movwf	___flge@ff2^0,c
  2542   00113E  0E00               	movlw	0
  2543   001140  6E06               	movwf	(___flge@ff2+1)^0,c
  2544   001142  0E38               	movlw	56
  2545   001144  6E07               	movwf	(___flge@ff2+2)^0,c
  2546   001146  0E42               	movlw	66
  2547   001148  6E08               	movwf	(___flge@ff2+3)^0,c
  2548   00114A  ECE1  F021         	call	___flge	;wreg free
  2549   00114E  B0D8               	btfsc	status,0,c
  2550   001150  EFAC  F008         	goto	u4051
  2551   001154  EFAE  F008         	goto	u4050
  2552   001158                     u4051:
  2553   001158  EFB5  F008         	goto	l3842
  2554   00115C                     u4050:
  2555   00115C  0E00               	movlw	0
  2556   00115E  0100               	movlb	0	; () banked
  2557   001160  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2558   001162  0E02               	movlw	2
  2559   001164  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2560   001166  EF18  F00C         	goto	l3920
  2561   00116A                     l3842:
  2562   00116A  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2563   00116E  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2564   001172  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2565   001176  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2566   00117A  0E00               	movlw	0
  2567   00117C  6E05               	movwf	___flge@ff2^0,c
  2568   00117E  0E00               	movlw	0
  2569   001180  6E06               	movwf	(___flge@ff2+1)^0,c
  2570   001182  0E20               	movlw	32
  2571   001184  6E07               	movwf	(___flge@ff2+2)^0,c
  2572   001186  0E41               	movlw	65
  2573   001188  6E08               	movwf	(___flge@ff2+3)^0,c
  2574   00118A  ECE1  F021         	call	___flge	;wreg free
  2575   00118E  B0D8               	btfsc	status,0,c
  2576   001190  EFCC  F008         	goto	u4061
  2577   001194  EFCE  F008         	goto	u4060
  2578   001198                     u4061:
  2579   001198  EF07  F009         	goto	l3850
  2580   00119C                     u4060:
  2581   00119C  0E00               	movlw	0
  2582   00119E  6E01               	movwf	___flge@ff1^0,c
  2583   0011A0  0E00               	movlw	0
  2584   0011A2  6E02               	movwf	(___flge@ff1+1)^0,c
  2585   0011A4  0EF0               	movlw	240
  2586   0011A6  6E03               	movwf	(___flge@ff1+2)^0,c
  2587   0011A8  0E41               	movlw	65
  2588   0011AA  6E04               	movwf	(___flge@ff1+3)^0,c
  2589   0011AC  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2590   0011B0  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2591   0011B4  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2592   0011B8  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2593   0011BC  ECE1  F021         	call	___flge	;wreg free
  2594   0011C0  B0D8               	btfsc	status,0,c
  2595   0011C2  EFE5  F008         	goto	u4071
  2596   0011C6  EFE7  F008         	goto	u4070
  2597   0011CA                     u4071:
  2598   0011CA  EF07  F009         	goto	l3850
  2599   0011CE                     u4070:
  2600   0011CE  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2601   0011D2  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2602   0011D6  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2603   0011DA  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2604   0011DE  0E00               	movlw	0
  2605   0011E0  6E05               	movwf	___flge@ff2^0,c
  2606   0011E2  0E00               	movlw	0
  2607   0011E4  6E06               	movwf	(___flge@ff2+1)^0,c
  2608   0011E6  0E0C               	movlw	12
  2609   0011E8  6E07               	movwf	(___flge@ff2+2)^0,c
  2610   0011EA  0E42               	movlw	66
  2611   0011EC  6E08               	movwf	(___flge@ff2+3)^0,c
  2612   0011EE  ECE1  F021         	call	___flge	;wreg free
  2613   0011F2  B0D8               	btfsc	status,0,c
  2614   0011F4  EFFE  F008         	goto	u4081
  2615   0011F8  EF00  F009         	goto	u4080
  2616   0011FC                     u4081:
  2617   0011FC  EF07  F009         	goto	l3850
  2618   001200                     u4080:
  2619   001200  0E00               	movlw	0
  2620   001202  0100               	movlb	0	; () banked
  2621   001204  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2622   001206  0E03               	movlw	3
  2623   001208  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2624   00120A  EF18  F00C         	goto	l3920
  2625   00120E                     l3850:
  2626   00120E  0E00               	movlw	0
  2627   001210  6E01               	movwf	___flge@ff1^0,c
  2628   001212  0E00               	movlw	0
  2629   001214  6E02               	movwf	(___flge@ff1+1)^0,c
  2630   001216  0EA0               	movlw	160
  2631   001218  6E03               	movwf	(___flge@ff1+2)^0,c
  2632   00121A  0E41               	movlw	65
  2633   00121C  6E04               	movwf	(___flge@ff1+3)^0,c
  2634   00121E  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2635   001222  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2636   001226  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2637   00122A  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2638   00122E  ECE1  F021         	call	___flge	;wreg free
  2639   001232  B0D8               	btfsc	status,0,c
  2640   001234  EF1E  F009         	goto	u4091
  2641   001238  EF20  F009         	goto	u4090
  2642   00123C                     u4091:
  2643   00123C  EFA4  F009         	goto	l3864
  2644   001240                     u4090:
  2645   001240  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2646   001244  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2647   001248  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2648   00124C  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2649   001250  0E00               	movlw	0
  2650   001252  6E05               	movwf	___flge@ff2^0,c
  2651   001254  0E00               	movlw	0
  2652   001256  6E06               	movwf	(___flge@ff2+1)^0,c
  2653   001258  0EC8               	movlw	200
  2654   00125A  6E07               	movwf	(___flge@ff2+2)^0,c
  2655   00125C  0E41               	movlw	65
  2656   00125E  6E08               	movwf	(___flge@ff2+3)^0,c
  2657   001260  ECE1  F021         	call	___flge	;wreg free
  2658   001264  B0D8               	btfsc	status,0,c
  2659   001266  EF37  F009         	goto	u4101
  2660   00126A  EF39  F009         	goto	u4100
  2661   00126E                     u4101:
  2662   00126E  EFA4  F009         	goto	l3864
  2663   001272                     u4100:
  2664   001272  0E00               	movlw	0
  2665   001274  6E01               	movwf	___flge@ff1^0,c
  2666   001276  0E00               	movlw	0
  2667   001278  6E02               	movwf	(___flge@ff1+1)^0,c
  2668   00127A  0E82               	movlw	130
  2669   00127C  6E03               	movwf	(___flge@ff1+2)^0,c
  2670   00127E  0E42               	movlw	66
  2671   001280  6E04               	movwf	(___flge@ff1+3)^0,c
  2672   001282  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2673   001286  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2674   00128A  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2675   00128E  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2676   001292  ECE1  F021         	call	___flge	;wreg free
  2677   001296  B0D8               	btfsc	status,0,c
  2678   001298  EF50  F009         	goto	u4111
  2679   00129C  EF52  F009         	goto	u4110
  2680   0012A0                     u4111:
  2681   0012A0  EFA4  F009         	goto	l3864
  2682   0012A4                     u4110:
  2683   0012A4  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2684   0012A8  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2685   0012AC  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2686   0012B0  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2687   0012B4  0E00               	movlw	0
  2688   0012B6  6E05               	movwf	___flge@ff2^0,c
  2689   0012B8  0E00               	movlw	0
  2690   0012BA  6E06               	movwf	(___flge@ff2+1)^0,c
  2691   0012BC  0E8C               	movlw	140
  2692   0012BE  6E07               	movwf	(___flge@ff2+2)^0,c
  2693   0012C0  0E42               	movlw	66
  2694   0012C2  6E08               	movwf	(___flge@ff2+3)^0,c
  2695   0012C4  ECE1  F021         	call	___flge	;wreg free
  2696   0012C8  B0D8               	btfsc	status,0,c
  2697   0012CA  EF69  F009         	goto	u4121
  2698   0012CE  EF6B  F009         	goto	u4120
  2699   0012D2                     u4121:
  2700   0012D2  EFA4  F009         	goto	l3864
  2701   0012D6                     u4120:
  2702   0012D6  0E00               	movlw	0
  2703   0012D8  6E01               	movwf	___flge@ff1^0,c
  2704   0012DA  0E00               	movlw	0
  2705   0012DC  6E02               	movwf	(___flge@ff1+1)^0,c
  2706   0012DE  0E58               	movlw	88
  2707   0012E0  6E03               	movwf	(___flge@ff1+2)^0,c
  2708   0012E2  0E42               	movlw	66
  2709   0012E4  6E04               	movwf	(___flge@ff1+3)^0,c
  2710   0012E6  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2711   0012EA  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2712   0012EE  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2713   0012F2  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2714   0012F6  ECE1  F021         	call	___flge	;wreg free
  2715   0012FA  B0D8               	btfsc	status,0,c
  2716   0012FC  EF82  F009         	goto	u4131
  2717   001300  EF84  F009         	goto	u4130
  2718   001304                     u4131:
  2719   001304  EFA4  F009         	goto	l3864
  2720   001308                     u4130:
  2721   001308  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2722   00130C  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2723   001310  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2724   001314  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2725   001318  0E00               	movlw	0
  2726   00131A  6E05               	movwf	___flge@ff2^0,c
  2727   00131C  0E00               	movlw	0
  2728   00131E  6E06               	movwf	(___flge@ff2+1)^0,c
  2729   001320  0E64               	movlw	100
  2730   001322  6E07               	movwf	(___flge@ff2+2)^0,c
  2731   001324  0E42               	movlw	66
  2732   001326  6E08               	movwf	(___flge@ff2+3)^0,c
  2733   001328  ECE1  F021         	call	___flge	;wreg free
  2734   00132C  B0D8               	btfsc	status,0,c
  2735   00132E  EF9B  F009         	goto	u4141
  2736   001332  EF9D  F009         	goto	u4140
  2737   001336                     u4141:
  2738   001336  EFA4  F009         	goto	l3864
  2739   00133A                     u4140:
  2740   00133A  0E00               	movlw	0
  2741   00133C  0100               	movlb	0	; () banked
  2742   00133E  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2743   001340  0E04               	movlw	4
  2744   001342  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2745   001344  EF18  F00C         	goto	l3920
  2746   001348                     l3864:
  2747   001348  0E00               	movlw	0
  2748   00134A  6E01               	movwf	___flge@ff1^0,c
  2749   00134C  0E00               	movlw	0
  2750   00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  2751   001350  0E50               	movlw	80
  2752   001352  6E03               	movwf	(___flge@ff1+2)^0,c
  2753   001354  0E41               	movlw	65
  2754   001356  6E04               	movwf	(___flge@ff1+3)^0,c
  2755   001358  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2756   00135C  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2757   001360  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2758   001364  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2759   001368  ECE1  F021         	call	___flge	;wreg free
  2760   00136C  B0D8               	btfsc	status,0,c
  2761   00136E  EFBB  F009         	goto	u4151
  2762   001372  EFBD  F009         	goto	u4150
  2763   001376                     u4151:
  2764   001376  EF41  F00A         	goto	l3878
  2765   00137A                     u4150:
  2766   00137A  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2767   00137E  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2768   001382  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2769   001386  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2770   00138A  0E00               	movlw	0
  2771   00138C  6E05               	movwf	___flge@ff2^0,c
  2772   00138E  0E00               	movlw	0
  2773   001390  6E06               	movwf	(___flge@ff2+1)^0,c
  2774   001392  0E90               	movlw	144
  2775   001394  6E07               	movwf	(___flge@ff2+2)^0,c
  2776   001396  0E41               	movlw	65
  2777   001398  6E08               	movwf	(___flge@ff2+3)^0,c
  2778   00139A  ECE1  F021         	call	___flge	;wreg free
  2779   00139E  B0D8               	btfsc	status,0,c
  2780   0013A0  EFD4  F009         	goto	u4161
  2781   0013A4  EFD6  F009         	goto	u4160
  2782   0013A8                     u4161:
  2783   0013A8  EF41  F00A         	goto	l3878
  2784   0013AC                     u4160:
  2785   0013AC  0E00               	movlw	0
  2786   0013AE  6E01               	movwf	___flge@ff1^0,c
  2787   0013B0  0E00               	movlw	0
  2788   0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  2789   0013B4  0E5C               	movlw	92
  2790   0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  2791   0013B8  0E42               	movlw	66
  2792   0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  2793   0013BC  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2794   0013C0  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2795   0013C4  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2796   0013C8  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2797   0013CC  ECE1  F021         	call	___flge	;wreg free
  2798   0013D0  B0D8               	btfsc	status,0,c
  2799   0013D2  EFED  F009         	goto	u4171
  2800   0013D6  EFEF  F009         	goto	u4170
  2801   0013DA                     u4171:
  2802   0013DA  EF41  F00A         	goto	l3878
  2803   0013DE                     u4170:
  2804   0013DE  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2805   0013E2  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2806   0013E6  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2807   0013EA  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2808   0013EE  0E00               	movlw	0
  2809   0013F0  6E05               	movwf	___flge@ff2^0,c
  2810   0013F2  0E00               	movlw	0
  2811   0013F4  6E06               	movwf	(___flge@ff2+1)^0,c
  2812   0013F6  0E70               	movlw	112
  2813   0013F8  6E07               	movwf	(___flge@ff2+2)^0,c
  2814   0013FA  0E42               	movlw	66
  2815   0013FC  6E08               	movwf	(___flge@ff2+3)^0,c
  2816   0013FE  ECE1  F021         	call	___flge	;wreg free
  2817   001402  B0D8               	btfsc	status,0,c
  2818   001404  EF06  F00A         	goto	u4181
  2819   001408  EF08  F00A         	goto	u4180
  2820   00140C                     u4181:
  2821   00140C  EF41  F00A         	goto	l3878
  2822   001410                     u4180:
  2823   001410  0E00               	movlw	0
  2824   001412  6E01               	movwf	___flge@ff1^0,c
  2825   001414  0E00               	movlw	0
  2826   001416  6E02               	movwf	(___flge@ff1+1)^0,c
  2827   001418  0E48               	movlw	72
  2828   00141A  6E03               	movwf	(___flge@ff1+2)^0,c
  2829   00141C  0E42               	movlw	66
  2830   00141E  6E04               	movwf	(___flge@ff1+3)^0,c
  2831   001420  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2832   001424  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2833   001428  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2834   00142C  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2835   001430  ECE1  F021         	call	___flge	;wreg free
  2836   001434  B0D8               	btfsc	status,0,c
  2837   001436  EF1F  F00A         	goto	u4191
  2838   00143A  EF21  F00A         	goto	u4190
  2839   00143E                     u4191:
  2840   00143E  EF41  F00A         	goto	l3878
  2841   001442                     u4190:
  2842   001442  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2843   001446  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2844   00144A  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2845   00144E  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2846   001452  0E00               	movlw	0
  2847   001454  6E05               	movwf	___flge@ff2^0,c
  2848   001456  0E00               	movlw	0
  2849   001458  6E06               	movwf	(___flge@ff2+1)^0,c
  2850   00145A  0E58               	movlw	88
  2851   00145C  6E07               	movwf	(___flge@ff2+2)^0,c
  2852   00145E  0E42               	movlw	66
  2853   001460  6E08               	movwf	(___flge@ff2+3)^0,c
  2854   001462  ECE1  F021         	call	___flge	;wreg free
  2855   001466  B0D8               	btfsc	status,0,c
  2856   001468  EF38  F00A         	goto	u4201
  2857   00146C  EF3A  F00A         	goto	u4200
  2858   001470                     u4201:
  2859   001470  EF41  F00A         	goto	l3878
  2860   001474                     u4200:
  2861   001474  0E00               	movlw	0
  2862   001476  0100               	movlb	0	; () banked
  2863   001478  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2864   00147A  0E05               	movlw	5
  2865   00147C  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2866   00147E  EF18  F00C         	goto	l3920
  2867   001482                     l3878:
  2868   001482  0E00               	movlw	0
  2869   001484  6E01               	movwf	___flge@ff1^0,c
  2870   001486  0E00               	movlw	0
  2871   001488  6E02               	movwf	(___flge@ff1+1)^0,c
  2872   00148A  0EA0               	movlw	160
  2873   00148C  6E03               	movwf	(___flge@ff1+2)^0,c
  2874   00148E  0E40               	movlw	64
  2875   001490  6E04               	movwf	(___flge@ff1+3)^0,c
  2876   001492  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2877   001496  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2878   00149A  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2879   00149E  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2880   0014A2  ECE1  F021         	call	___flge	;wreg free
  2881   0014A6  B0D8               	btfsc	status,0,c
  2882   0014A8  EF58  F00A         	goto	u4211
  2883   0014AC  EF5A  F00A         	goto	u4210
  2884   0014B0                     u4211:
  2885   0014B0  EFDE  F00A         	goto	l3892
  2886   0014B4                     u4210:
  2887   0014B4  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2888   0014B8  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2889   0014BC  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2890   0014C0  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2891   0014C4  0E00               	movlw	0
  2892   0014C6  6E05               	movwf	___flge@ff2^0,c
  2893   0014C8  0E00               	movlw	0
  2894   0014CA  6E06               	movwf	(___flge@ff2+1)^0,c
  2895   0014CC  0E20               	movlw	32
  2896   0014CE  6E07               	movwf	(___flge@ff2+2)^0,c
  2897   0014D0  0E41               	movlw	65
  2898   0014D2  6E08               	movwf	(___flge@ff2+3)^0,c
  2899   0014D4  ECE1  F021         	call	___flge	;wreg free
  2900   0014D8  B0D8               	btfsc	status,0,c
  2901   0014DA  EF71  F00A         	goto	u4221
  2902   0014DE  EF73  F00A         	goto	u4220
  2903   0014E2                     u4221:
  2904   0014E2  EFDE  F00A         	goto	l3892
  2905   0014E6                     u4220:
  2906   0014E6  0E00               	movlw	0
  2907   0014E8  6E01               	movwf	___flge@ff1^0,c
  2908   0014EA  0E00               	movlw	0
  2909   0014EC  6E02               	movwf	(___flge@ff1+1)^0,c
  2910   0014EE  0E8C               	movlw	140
  2911   0014F0  6E03               	movwf	(___flge@ff1+2)^0,c
  2912   0014F2  0E42               	movlw	66
  2913   0014F4  6E04               	movwf	(___flge@ff1+3)^0,c
  2914   0014F6  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2915   0014FA  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2916   0014FE  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2917   001502  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2918   001506  ECE1  F021         	call	___flge	;wreg free
  2919   00150A  B0D8               	btfsc	status,0,c
  2920   00150C  EF8A  F00A         	goto	u4231
  2921   001510  EF8C  F00A         	goto	u4230
  2922   001514                     u4231:
  2923   001514  EFDE  F00A         	goto	l3892
  2924   001518                     u4230:
  2925   001518  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2926   00151C  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2927   001520  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2928   001524  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2929   001528  0E00               	movlw	0
  2930   00152A  6E05               	movwf	___flge@ff2^0,c
  2931   00152C  0E00               	movlw	0
  2932   00152E  6E06               	movwf	(___flge@ff2+1)^0,c
  2933   001530  0E96               	movlw	150
  2934   001532  6E07               	movwf	(___flge@ff2+2)^0,c
  2935   001534  0E42               	movlw	66
  2936   001536  6E08               	movwf	(___flge@ff2+3)^0,c
  2937   001538  ECE1  F021         	call	___flge	;wreg free
  2938   00153C  B0D8               	btfsc	status,0,c
  2939   00153E  EFA3  F00A         	goto	u4241
  2940   001542  EFA5  F00A         	goto	u4240
  2941   001546                     u4241:
  2942   001546  EFDE  F00A         	goto	l3892
  2943   00154A                     u4240:
  2944   00154A  0E00               	movlw	0
  2945   00154C  6E01               	movwf	___flge@ff1^0,c
  2946   00154E  0E00               	movlw	0
  2947   001550  6E02               	movwf	(___flge@ff1+1)^0,c
  2948   001552  0E78               	movlw	120
  2949   001554  6E03               	movwf	(___flge@ff1+2)^0,c
  2950   001556  0E42               	movlw	66
  2951   001558  6E04               	movwf	(___flge@ff1+3)^0,c
  2952   00155A  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2953   00155E  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2954   001562  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2955   001566  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2956   00156A  ECE1  F021         	call	___flge	;wreg free
  2957   00156E  B0D8               	btfsc	status,0,c
  2958   001570  EFBC  F00A         	goto	u4251
  2959   001574  EFBE  F00A         	goto	u4250
  2960   001578                     u4251:
  2961   001578  EFDE  F00A         	goto	l3892
  2962   00157C                     u4250:
  2963   00157C  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2964   001580  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2965   001584  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2966   001588  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2967   00158C  0E00               	movlw	0
  2968   00158E  6E05               	movwf	___flge@ff2^0,c
  2969   001590  0E00               	movlw	0
  2970   001592  6E06               	movwf	(___flge@ff2+1)^0,c
  2971   001594  0E86               	movlw	134
  2972   001596  6E07               	movwf	(___flge@ff2+2)^0,c
  2973   001598  0E42               	movlw	66
  2974   00159A  6E08               	movwf	(___flge@ff2+3)^0,c
  2975   00159C  ECE1  F021         	call	___flge	;wreg free
  2976   0015A0  B0D8               	btfsc	status,0,c
  2977   0015A2  EFD5  F00A         	goto	u4261
  2978   0015A6  EFD7  F00A         	goto	u4260
  2979   0015AA                     u4261:
  2980   0015AA  EFDE  F00A         	goto	l3892
  2981   0015AE                     u4260:
  2982   0015AE  0E00               	movlw	0
  2983   0015B0  0100               	movlb	0	; () banked
  2984   0015B2  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2985   0015B4  0E06               	movlw	6
  2986   0015B6  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2987   0015B8  EF18  F00C         	goto	l3920
  2988   0015BC                     l3892:
  2989   0015BC  0E00               	movlw	0
  2990   0015BE  6E01               	movwf	___flge@ff1^0,c
  2991   0015C0  0E00               	movlw	0
  2992   0015C2  6E02               	movwf	(___flge@ff1+1)^0,c
  2993   0015C4  0E94               	movlw	148
  2994   0015C6  6E03               	movwf	(___flge@ff1+2)^0,c
  2995   0015C8  0E42               	movlw	66
  2996   0015CA  6E04               	movwf	(___flge@ff1+3)^0,c
  2997   0015CC  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2998   0015D0  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2999   0015D4  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3000   0015D8  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3001   0015DC  ECE1  F021         	call	___flge	;wreg free
  3002   0015E0  B0D8               	btfsc	status,0,c
  3003   0015E2  EFF5  F00A         	goto	u4271
  3004   0015E6  EFF7  F00A         	goto	u4270
  3005   0015EA                     u4271:
  3006   0015EA  EF7B  F00B         	goto	l3906
  3007   0015EE                     u4270:
  3008   0015EE  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  3009   0015F2  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3010   0015F6  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3011   0015FA  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3012   0015FE  0E00               	movlw	0
  3013   001600  6E05               	movwf	___flge@ff2^0,c
  3014   001602  0E00               	movlw	0
  3015   001604  6E06               	movwf	(___flge@ff2+1)^0,c
  3016   001606  0EAA               	movlw	170
  3017   001608  6E07               	movwf	(___flge@ff2+2)^0,c
  3018   00160A  0E42               	movlw	66
  3019   00160C  6E08               	movwf	(___flge@ff2+3)^0,c
  3020   00160E  ECE1  F021         	call	___flge	;wreg free
  3021   001612  B0D8               	btfsc	status,0,c
  3022   001614  EF0E  F00B         	goto	u4281
  3023   001618  EF10  F00B         	goto	u4280
  3024   00161C                     u4281:
  3025   00161C  EF7B  F00B         	goto	l3906
  3026   001620                     u4280:
  3027   001620  0E00               	movlw	0
  3028   001622  6E01               	movwf	___flge@ff1^0,c
  3029   001624  0E00               	movlw	0
  3030   001626  6E02               	movwf	(___flge@ff1+1)^0,c
  3031   001628  0EE0               	movlw	224
  3032   00162A  6E03               	movwf	(___flge@ff1+2)^0,c
  3033   00162C  0E41               	movlw	65
  3034   00162E  6E04               	movwf	(___flge@ff1+3)^0,c
  3035   001630  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  3036   001634  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3037   001638  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3038   00163C  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3039   001640  ECE1  F021         	call	___flge	;wreg free
  3040   001644  B0D8               	btfsc	status,0,c
  3041   001646  EF27  F00B         	goto	u4291
  3042   00164A  EF29  F00B         	goto	u4290
  3043   00164E                     u4291:
  3044   00164E  EF7B  F00B         	goto	l3906
  3045   001652                     u4290:
  3046   001652  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  3047   001656  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3048   00165A  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3049   00165E  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3050   001662  0E00               	movlw	0
  3051   001664  6E05               	movwf	___flge@ff2^0,c
  3052   001666  0E00               	movlw	0
  3053   001668  6E06               	movwf	(___flge@ff2+1)^0,c
  3054   00166A  0E04               	movlw	4
  3055   00166C  6E07               	movwf	(___flge@ff2+2)^0,c
  3056   00166E  0E42               	movlw	66
  3057   001670  6E08               	movwf	(___flge@ff2+3)^0,c
  3058   001672  ECE1  F021         	call	___flge	;wreg free
  3059   001676  B0D8               	btfsc	status,0,c
  3060   001678  EF40  F00B         	goto	u4301
  3061   00167C  EF42  F00B         	goto	u4300
  3062   001680                     u4301:
  3063   001680  EF7B  F00B         	goto	l3906
  3064   001684                     u4300:
  3065   001684  0E00               	movlw	0
  3066   001686  6E01               	movwf	___flge@ff1^0,c
  3067   001688  0E00               	movlw	0
  3068   00168A  6E02               	movwf	(___flge@ff1+1)^0,c
  3069   00168C  0E14               	movlw	20
  3070   00168E  6E03               	movwf	(___flge@ff1+2)^0,c
  3071   001690  0E42               	movlw	66
  3072   001692  6E04               	movwf	(___flge@ff1+3)^0,c
  3073   001694  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  3074   001698  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3075   00169C  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3076   0016A0  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3077   0016A4  ECE1  F021         	call	___flge	;wreg free
  3078   0016A8  B0D8               	btfsc	status,0,c
  3079   0016AA  EF59  F00B         	goto	u4311
  3080   0016AE  EF5B  F00B         	goto	u4310
  3081   0016B2                     u4311:
  3082   0016B2  EF7B  F00B         	goto	l3906
  3083   0016B6                     u4310:
  3084   0016B6  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  3085   0016BA  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3086   0016BE  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3087   0016C2  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3088   0016C6  0E00               	movlw	0
  3089   0016C8  6E05               	movwf	___flge@ff2^0,c
  3090   0016CA  0E00               	movlw	0
  3091   0016CC  6E06               	movwf	(___flge@ff2+1)^0,c
  3092   0016CE  0E28               	movlw	40
  3093   0016D0  6E07               	movwf	(___flge@ff2+2)^0,c
  3094   0016D2  0E42               	movlw	66
  3095   0016D4  6E08               	movwf	(___flge@ff2+3)^0,c
  3096   0016D6  ECE1  F021         	call	___flge	;wreg free
  3097   0016DA  B0D8               	btfsc	status,0,c
  3098   0016DC  EF72  F00B         	goto	u4321
  3099   0016E0  EF74  F00B         	goto	u4320
  3100   0016E4                     u4321:
  3101   0016E4  EF7B  F00B         	goto	l3906
  3102   0016E8                     u4320:
  3103   0016E8  0E00               	movlw	0
  3104   0016EA  0100               	movlb	0	; () banked
  3105   0016EC  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3106   0016EE  0E07               	movlw	7
  3107   0016F0  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  3108   0016F2  EF18  F00C         	goto	l3920
  3109   0016F6                     l3906:
  3110   0016F6  0E00               	movlw	0
  3111   0016F8  6E01               	movwf	___flge@ff1^0,c
  3112   0016FA  0E00               	movlw	0
  3113   0016FC  6E02               	movwf	(___flge@ff1+1)^0,c
  3114   0016FE  0EB0               	movlw	176
  3115   001700  6E03               	movwf	(___flge@ff1+2)^0,c
  3116   001702  0E41               	movlw	65
  3117   001704  6E04               	movwf	(___flge@ff1+3)^0,c
  3118   001706  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  3119   00170A  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3120   00170E  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3121   001712  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3122   001716  ECE1  F021         	call	___flge	;wreg free
  3123   00171A  B0D8               	btfsc	status,0,c
  3124   00171C  EF92  F00B         	goto	u4331
  3125   001720  EF94  F00B         	goto	u4330
  3126   001724                     u4331:
  3127   001724  EF18  F00C         	goto	l99
  3128   001728                     u4330:
  3129   001728  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  3130   00172C  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3131   001730  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3132   001734  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3133   001738  0E00               	movlw	0
  3134   00173A  6E05               	movwf	___flge@ff2^0,c
  3135   00173C  0E00               	movlw	0
  3136   00173E  6E06               	movwf	(___flge@ff2+1)^0,c
  3137   001740  0ED8               	movlw	216
  3138   001742  6E07               	movwf	(___flge@ff2+2)^0,c
  3139   001744  0E41               	movlw	65
  3140   001746  6E08               	movwf	(___flge@ff2+3)^0,c
  3141   001748  ECE1  F021         	call	___flge	;wreg free
  3142   00174C  B0D8               	btfsc	status,0,c
  3143   00174E  EFAB  F00B         	goto	u4341
  3144   001752  EFAD  F00B         	goto	u4340
  3145   001756                     u4341:
  3146   001756  EF18  F00C         	goto	l99
  3147   00175A                     u4340:
  3148   00175A  0E00               	movlw	0
  3149   00175C  6E01               	movwf	___flge@ff1^0,c
  3150   00175E  0E00               	movlw	0
  3151   001760  6E02               	movwf	(___flge@ff1+1)^0,c
  3152   001762  0E40               	movlw	64
  3153   001764  6E03               	movwf	(___flge@ff1+2)^0,c
  3154   001766  0E42               	movlw	66
  3155   001768  6E04               	movwf	(___flge@ff1+3)^0,c
  3156   00176A  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  3157   00176E  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3158   001772  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3159   001776  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3160   00177A  ECE1  F021         	call	___flge	;wreg free
  3161   00177E  B0D8               	btfsc	status,0,c
  3162   001780  EFC4  F00B         	goto	u4351
  3163   001784  EFC6  F00B         	goto	u4350
  3164   001788                     u4351:
  3165   001788  EF18  F00C         	goto	l99
  3166   00178C                     u4350:
  3167   00178C  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  3168   001790  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3169   001794  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3170   001798  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3171   00179C  0E00               	movlw	0
  3172   00179E  6E05               	movwf	___flge@ff2^0,c
  3173   0017A0  0E00               	movlw	0
  3174   0017A2  6E06               	movwf	(___flge@ff2+1)^0,c
  3175   0017A4  0E54               	movlw	84
  3176   0017A6  6E07               	movwf	(___flge@ff2+2)^0,c
  3177   0017A8  0E42               	movlw	66
  3178   0017AA  6E08               	movwf	(___flge@ff2+3)^0,c
  3179   0017AC  ECE1  F021         	call	___flge	;wreg free
  3180   0017B0  B0D8               	btfsc	status,0,c
  3181   0017B2  EFDD  F00B         	goto	u4361
  3182   0017B6  EFDF  F00B         	goto	u4360
  3183   0017BA                     u4361:
  3184   0017BA  EF18  F00C         	goto	l99
  3185   0017BE                     u4360:
  3186   0017BE  0E00               	movlw	0
  3187   0017C0  6E01               	movwf	___flge@ff1^0,c
  3188   0017C2  0E00               	movlw	0
  3189   0017C4  6E02               	movwf	(___flge@ff1+1)^0,c
  3190   0017C6  0E34               	movlw	52
  3191   0017C8  6E03               	movwf	(___flge@ff1+2)^0,c
  3192   0017CA  0E42               	movlw	66
  3193   0017CC  6E04               	movwf	(___flge@ff1+3)^0,c
  3194   0017CE  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  3195   0017D2  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3196   0017D6  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3197   0017DA  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3198   0017DE  ECE1  F021         	call	___flge	;wreg free
  3199   0017E2  B0D8               	btfsc	status,0,c
  3200   0017E4  EFF6  F00B         	goto	u4371
  3201   0017E8  EFF8  F00B         	goto	u4370
  3202   0017EC                     u4371:
  3203   0017EC  EF18  F00C         	goto	l99
  3204   0017F0                     u4370:
  3205   0017F0  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  3206   0017F4  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3207   0017F8  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3208   0017FC  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3209   001800  0E00               	movlw	0
  3210   001802  6E05               	movwf	___flge@ff2^0,c
  3211   001804  0E00               	movlw	0
  3212   001806  6E06               	movwf	(___flge@ff2+1)^0,c
  3213   001808  0E48               	movlw	72
  3214   00180A  6E07               	movwf	(___flge@ff2+2)^0,c
  3215   00180C  0E42               	movlw	66
  3216   00180E  6E08               	movwf	(___flge@ff2+3)^0,c
  3217   001810  ECE1  F021         	call	___flge	;wreg free
  3218   001814  B0D8               	btfsc	status,0,c
  3219   001816  EF0F  F00C         	goto	u4381
  3220   00181A  EF11  F00C         	goto	u4380
  3221   00181E                     u4381:
  3222   00181E  EF18  F00C         	goto	l99
  3223   001822                     u4380:
  3224   001822  0E00               	movlw	0
  3225   001824  0100               	movlb	0	; () banked
  3226   001826  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3227   001828  0E08               	movlw	8
  3228   00182A  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  3229   00182C  EF18  F00C         	goto	l3920
  3230   001830                     l99:
  3231   001830                     l3920:
  3232                           
  3233                           ;color.c: 213:     return card_color;
  3234   001830  C0C5  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  3235   001834  C0C6  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  3236   001838  0012               	return		;funcret
  3237   00183A                     __end_of_color_cardCheck:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function _color_read_Red *****************
  3241 ;; Defined at:
  3242 ;;		line 46 in file "color.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  tmp             2    9[COMRAM] unsigned int 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  2    4[COMRAM] unsigned int 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3258 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3259 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3260 ;;Total ram usage:        7 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 2
  3263 ;; This function calls:
  3264 ;;		_I2C_2_Master_Read
  3265 ;;		_I2C_2_Master_RepStart
  3266 ;;		_I2C_2_Master_Start
  3267 ;;		_I2C_2_Master_Stop
  3268 ;;		_I2C_2_Master_Write
  3269 ;; This function is called by:
  3270 ;;		_color_cardCheck
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text7
  3275   004912                     __ptext7:
  3276                           	callstack 0
  3277   004912                     _color_read_Red:
  3278                           	callstack 26
  3279   004912                     
  3280                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  3281   004912  EC16  F026         	call	_I2C_2_Master_Start	;wreg free
  3282                           
  3283                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  3284   004916  0E52               	movlw	82
  3285   004918  EC0B  F026         	call	_I2C_2_Master_Write
  3286                           
  3287                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  3288   00491C  0EB6               	movlw	182
  3289   00491E  EC0B  F026         	call	_I2C_2_Master_Write
  3290                           
  3291                           ;color.c: 52:  I2C_2_Master_RepStart();
  3292   004922  EC1B  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3293                           
  3294                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  3295   004926  0E53               	movlw	83
  3296   004928  EC0B  F026         	call	_I2C_2_Master_Write
  3297                           
  3298                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  3299   00492C  0E01               	movlw	1
  3300   00492E  EC4C  F025         	call	_I2C_2_Master_Read
  3301   004932  6E07               	movwf	??_color_read_Red^0,c
  3302   004934  5007               	movf	??_color_read_Red^0,w,c
  3303   004936  6E0A               	movwf	color_read_Red@tmp^0,c
  3304   004938  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3305                           
  3306                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3307   00493A  0E00               	movlw	0
  3308   00493C  EC4C  F025         	call	_I2C_2_Master_Read
  3309   004940  6E07               	movwf	??_color_read_Red^0,c
  3310   004942  5007               	movf	??_color_read_Red^0,w,c
  3311   004944  6E09               	movwf	(??_color_read_Red+2)^0,c
  3312   004946  6A08               	clrf	(??_color_read_Red+1)^0,c
  3313   004948  500A               	movf	color_read_Red@tmp^0,w,c
  3314   00494A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3315   00494C  6E0A               	movwf	color_read_Red@tmp^0,c
  3316   00494E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3317   004950  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3318   004952  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3319                           
  3320                           ;color.c: 56:  I2C_2_Master_Stop();
  3321   004954  EC11  F026         	call	_I2C_2_Master_Stop	;wreg free
  3322   004958                     
  3323                           ;color.c: 57:  return tmp;
  3324   004958  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3325   00495C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3326   004960  0012               	return		;funcret
  3327   004962                     __end_of_color_read_Red:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _color_read_Green *****************
  3331 ;; Defined at:
  3332 ;;		line 60 in file "color.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  tmp             2    9[COMRAM] unsigned int 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2    4[COMRAM] unsigned int 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;Total ram usage:        7 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 2
  3353 ;; This function calls:
  3354 ;;		_I2C_2_Master_Read
  3355 ;;		_I2C_2_Master_RepStart
  3356 ;;		_I2C_2_Master_Start
  3357 ;;		_I2C_2_Master_Stop
  3358 ;;		_I2C_2_Master_Write
  3359 ;; This function is called by:
  3360 ;;		_color_cardCheck
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text8
  3365   004962                     __ptext8:
  3366                           	callstack 0
  3367   004962                     _color_read_Green:
  3368                           	callstack 26
  3369   004962                     
  3370                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  3371   004962  EC16  F026         	call	_I2C_2_Master_Start	;wreg free
  3372                           
  3373                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  3374   004966  0E52               	movlw	82
  3375   004968  EC0B  F026         	call	_I2C_2_Master_Write
  3376                           
  3377                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  3378   00496C  0EB8               	movlw	184
  3379   00496E  EC0B  F026         	call	_I2C_2_Master_Write
  3380                           
  3381                           ;color.c: 66:  I2C_2_Master_RepStart();
  3382   004972  EC1B  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3383                           
  3384                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  3385   004976  0E53               	movlw	83
  3386   004978  EC0B  F026         	call	_I2C_2_Master_Write
  3387                           
  3388                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  3389   00497C  0E01               	movlw	1
  3390   00497E  EC4C  F025         	call	_I2C_2_Master_Read
  3391   004982  6E07               	movwf	??_color_read_Green^0,c
  3392   004984  5007               	movf	??_color_read_Green^0,w,c
  3393   004986  6E0A               	movwf	color_read_Green@tmp^0,c
  3394   004988  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3395                           
  3396                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3397   00498A  0E00               	movlw	0
  3398   00498C  EC4C  F025         	call	_I2C_2_Master_Read
  3399   004990  6E07               	movwf	??_color_read_Green^0,c
  3400   004992  5007               	movf	??_color_read_Green^0,w,c
  3401   004994  6E09               	movwf	(??_color_read_Green+2)^0,c
  3402   004996  6A08               	clrf	(??_color_read_Green+1)^0,c
  3403   004998  500A               	movf	color_read_Green@tmp^0,w,c
  3404   00499A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3405   00499C  6E0A               	movwf	color_read_Green@tmp^0,c
  3406   00499E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3407   0049A0  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3408   0049A2  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3409                           
  3410                           ;color.c: 70:  I2C_2_Master_Stop();
  3411   0049A4  EC11  F026         	call	_I2C_2_Master_Stop	;wreg free
  3412   0049A8                     
  3413                           ;color.c: 71:  return tmp;
  3414   0049A8  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3415   0049AC  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3416   0049B0  0012               	return		;funcret
  3417   0049B2                     __end_of_color_read_Green:
  3418                           	callstack 0
  3419                           
  3420 ;; *************** function _color_read_Clear *****************
  3421 ;; Defined at:
  3422 ;;		line 88 in file "color.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  tmp             2    9[COMRAM] unsigned int 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  2    4[COMRAM] unsigned int 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;Total ram usage:        7 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; Hardware stack levels required when called: 2
  3443 ;; This function calls:
  3444 ;;		_I2C_2_Master_Read
  3445 ;;		_I2C_2_Master_RepStart
  3446 ;;		_I2C_2_Master_Start
  3447 ;;		_I2C_2_Master_Stop
  3448 ;;		_I2C_2_Master_Write
  3449 ;; This function is called by:
  3450 ;;		_color_cardCheck
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text9
  3455   0049B2                     __ptext9:
  3456                           	callstack 0
  3457   0049B2                     _color_read_Clear:
  3458                           	callstack 26
  3459   0049B2                     
  3460                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3461   0049B2  EC16  F026         	call	_I2C_2_Master_Start	;wreg free
  3462                           
  3463                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3464   0049B6  0E52               	movlw	82
  3465   0049B8  EC0B  F026         	call	_I2C_2_Master_Write
  3466                           
  3467                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  3468   0049BC  0EB4               	movlw	180
  3469   0049BE  EC0B  F026         	call	_I2C_2_Master_Write
  3470                           
  3471                           ;color.c: 96:  I2C_2_Master_RepStart();
  3472   0049C2  EC1B  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3473                           
  3474                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3475   0049C6  0E53               	movlw	83
  3476   0049C8  EC0B  F026         	call	_I2C_2_Master_Write
  3477                           
  3478                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3479   0049CC  0E01               	movlw	1
  3480   0049CE  EC4C  F025         	call	_I2C_2_Master_Read
  3481   0049D2  6E07               	movwf	??_color_read_Clear^0,c
  3482   0049D4  5007               	movf	??_color_read_Clear^0,w,c
  3483   0049D6  6E0A               	movwf	color_read_Clear@tmp^0,c
  3484   0049D8  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3485                           
  3486                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3487   0049DA  0E00               	movlw	0
  3488   0049DC  EC4C  F025         	call	_I2C_2_Master_Read
  3489   0049E0  6E07               	movwf	??_color_read_Clear^0,c
  3490   0049E2  5007               	movf	??_color_read_Clear^0,w,c
  3491   0049E4  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3492   0049E6  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3493   0049E8  500A               	movf	color_read_Clear@tmp^0,w,c
  3494   0049EA  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3495   0049EC  6E0A               	movwf	color_read_Clear@tmp^0,c
  3496   0049EE  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3497   0049F0  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3498   0049F2  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3499                           
  3500                           ;color.c: 100:  I2C_2_Master_Stop();
  3501   0049F4  EC11  F026         	call	_I2C_2_Master_Stop	;wreg free
  3502   0049F8                     
  3503                           ;color.c: 101:  return tmp;
  3504   0049F8  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3505   0049FC  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3506   004A00  0012               	return		;funcret
  3507   004A02                     __end_of_color_read_Clear:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _color_read_Blue *****************
  3511 ;; Defined at:
  3512 ;;		line 74 in file "color.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  tmp             2    9[COMRAM] unsigned int 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2    4[COMRAM] unsigned int 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;Total ram usage:        7 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 2
  3533 ;; This function calls:
  3534 ;;		_I2C_2_Master_Read
  3535 ;;		_I2C_2_Master_RepStart
  3536 ;;		_I2C_2_Master_Start
  3537 ;;		_I2C_2_Master_Stop
  3538 ;;		_I2C_2_Master_Write
  3539 ;; This function is called by:
  3540 ;;		_color_cardCheck
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text10
  3545   004A02                     __ptext10:
  3546                           	callstack 0
  3547   004A02                     _color_read_Blue:
  3548                           	callstack 26
  3549   004A02                     
  3550                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  3551   004A02  EC16  F026         	call	_I2C_2_Master_Start	;wreg free
  3552                           
  3553                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  3554   004A06  0E52               	movlw	82
  3555   004A08  EC0B  F026         	call	_I2C_2_Master_Write
  3556                           
  3557                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  3558   004A0C  0EBA               	movlw	186
  3559   004A0E  EC0B  F026         	call	_I2C_2_Master_Write
  3560                           
  3561                           ;color.c: 80:  I2C_2_Master_RepStart();
  3562   004A12  EC1B  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3563                           
  3564                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3565   004A16  0E53               	movlw	83
  3566   004A18  EC0B  F026         	call	_I2C_2_Master_Write
  3567                           
  3568                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  3569   004A1C  0E01               	movlw	1
  3570   004A1E  EC4C  F025         	call	_I2C_2_Master_Read
  3571   004A22  6E07               	movwf	??_color_read_Blue^0,c
  3572   004A24  5007               	movf	??_color_read_Blue^0,w,c
  3573   004A26  6E0A               	movwf	color_read_Blue@tmp^0,c
  3574   004A28  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3575                           
  3576                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3577   004A2A  0E00               	movlw	0
  3578   004A2C  EC4C  F025         	call	_I2C_2_Master_Read
  3579   004A30  6E07               	movwf	??_color_read_Blue^0,c
  3580   004A32  5007               	movf	??_color_read_Blue^0,w,c
  3581   004A34  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3582   004A36  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3583   004A38  500A               	movf	color_read_Blue@tmp^0,w,c
  3584   004A3A  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3585   004A3C  6E0A               	movwf	color_read_Blue@tmp^0,c
  3586   004A3E  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3587   004A40  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3588   004A42  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3589                           
  3590                           ;color.c: 84:  I2C_2_Master_Stop();
  3591   004A44  EC11  F026         	call	_I2C_2_Master_Stop	;wreg free
  3592   004A48                     
  3593                           ;color.c: 85:  return tmp;
  3594   004A48  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3595   004A4C  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3596   004A50  0012               	return		;funcret
  3597   004A52                     __end_of_color_read_Blue:
  3598                           	callstack 0
  3599                           
  3600 ;; *************** function _I2C_2_Master_Write *****************
  3601 ;; Defined at:
  3602 ;;		line 45 in file "i2c.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  data_byte       1    wreg     unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  data_byte       1    1[COMRAM] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;Total ram usage:        1 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 1
  3623 ;; This function calls:
  3624 ;;		_I2C_2_Master_Idle
  3625 ;; This function is called by:
  3626 ;;		_color_writetoaddr
  3627 ;;		_color_read_Red
  3628 ;;		_color_read_Green
  3629 ;;		_color_read_Blue
  3630 ;;		_color_read_Clear
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text11
  3635   004C16                     __ptext11:
  3636                           	callstack 0
  3637   004C16                     _I2C_2_Master_Write:
  3638                           	callstack 26
  3639                           
  3640                           ;incstack = 0
  3641                           ;I2C_2_Master_Write@data_byte stored from wreg
  3642   004C16  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3643   004C18                     
  3644                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3645   004C18  ECD4  F025         	call	_I2C_2_Master_Idle	;wreg free
  3646   004C1C                     
  3647                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3648   004C1C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3649   004C20  0012               	return		;funcret
  3650   004C22                     __end_of_I2C_2_Master_Write:
  3651                           	callstack 0
  3652                           
  3653 ;; *************** function _I2C_2_Master_Stop *****************
  3654 ;; Defined at:
  3655 ;;		line 39 in file "i2c.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used: 1
  3675 ;; Hardware stack levels required when called: 1
  3676 ;; This function calls:
  3677 ;;		_I2C_2_Master_Idle
  3678 ;; This function is called by:
  3679 ;;		_color_writetoaddr
  3680 ;;		_color_read_Red
  3681 ;;		_color_read_Green
  3682 ;;		_color_read_Blue
  3683 ;;		_color_read_Clear
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text12
  3688   004C22                     __ptext12:
  3689                           	callstack 0
  3690   004C22                     _I2C_2_Master_Stop:
  3691                           	callstack 26
  3692   004C22                     
  3693                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3694   004C22  ECD4  F025         	call	_I2C_2_Master_Idle	;wreg free
  3695   004C26                     
  3696                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3697   004C26  010E               	movlb	14	; () banked
  3698   004C28  85DA               	bsf	218,2,b	;volatile
  3699   004C2A                     
  3700                           ; BSR set to: 14
  3701   004C2A  0012               	return		;funcret
  3702   004C2C                     __end_of_I2C_2_Master_Stop:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _I2C_2_Master_Start *****************
  3706 ;; Defined at:
  3707 ;;		line 27 in file "i2c.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 1
  3728 ;; This function calls:
  3729 ;;		_I2C_2_Master_Idle
  3730 ;; This function is called by:
  3731 ;;		_color_writetoaddr
  3732 ;;		_color_read_Red
  3733 ;;		_color_read_Green
  3734 ;;		_color_read_Blue
  3735 ;;		_color_read_Clear
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text13
  3740   004C2C                     __ptext13:
  3741                           	callstack 0
  3742   004C2C                     _I2C_2_Master_Start:
  3743                           	callstack 26
  3744   004C2C                     
  3745                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3746   004C2C  ECD4  F025         	call	_I2C_2_Master_Idle	;wreg free
  3747   004C30                     
  3748                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3749   004C30  010E               	movlb	14	; () banked
  3750   004C32  81DA               	bsf	218,0,b	;volatile
  3751   004C34                     
  3752                           ; BSR set to: 14
  3753   004C34  0012               	return		;funcret
  3754   004C36                     __end_of_I2C_2_Master_Start:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _I2C_2_Master_RepStart *****************
  3758 ;; Defined at:
  3759 ;;		line 33 in file "i2c.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3777 ;;Total ram usage:        0 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; Hardware stack levels required when called: 1
  3780 ;; This function calls:
  3781 ;;		_I2C_2_Master_Idle
  3782 ;; This function is called by:
  3783 ;;		_color_read_Red
  3784 ;;		_color_read_Green
  3785 ;;		_color_read_Blue
  3786 ;;		_color_read_Clear
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text14
  3791   004C36                     __ptext14:
  3792                           	callstack 0
  3793   004C36                     _I2C_2_Master_RepStart:
  3794                           	callstack 26
  3795   004C36                     
  3796                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3797   004C36  ECD4  F025         	call	_I2C_2_Master_Idle	;wreg free
  3798   004C3A                     
  3799                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3800   004C3A  010E               	movlb	14	; () banked
  3801   004C3C  83DA               	bsf	218,1,b	;volatile
  3802   004C3E                     
  3803                           ; BSR set to: 14
  3804   004C3E  0012               	return		;funcret
  3805   004C40                     __end_of_I2C_2_Master_RepStart:
  3806                           	callstack 0
  3807                           
  3808 ;; *************** function _I2C_2_Master_Read *****************
  3809 ;; Defined at:
  3810 ;;		line 51 in file "i2c.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  ack             1    wreg     unsigned char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  ack             1    2[COMRAM] unsigned char 
  3815 ;;  tmp             1    3[COMRAM] unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      unsigned char 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;Total ram usage:        3 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 1
  3832 ;; This function calls:
  3833 ;;		_I2C_2_Master_Idle
  3834 ;; This function is called by:
  3835 ;;		_color_read_Red
  3836 ;;		_color_read_Green
  3837 ;;		_color_read_Blue
  3838 ;;		_color_read_Clear
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text15
  3843   004A98                     __ptext15:
  3844                           	callstack 0
  3845   004A98                     _I2C_2_Master_Read:
  3846                           	callstack 26
  3847                           
  3848                           ; BSR set to: 14
  3849                           ;incstack = 0
  3850                           ;I2C_2_Master_Read@ack stored from wreg
  3851   004A98  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3852   004A9A                     
  3853                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3854   004A9A  ECD4  F025         	call	_I2C_2_Master_Idle	;wreg free
  3855   004A9E                     
  3856                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3857   004A9E  010E               	movlb	14	; () banked
  3858   004AA0  87DA               	bsf	218,3,b	;volatile
  3859                           
  3860                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3861   004AA2  ECD4  F025         	call	_I2C_2_Master_Idle	;wreg free
  3862   004AA6                     
  3863                           ;i2c.c: 57:   tmp = SSP2BUF;
  3864   004AA6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3865                           
  3866                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3867   004AAA  ECD4  F025         	call	_I2C_2_Master_Idle	;wreg free
  3868   004AAE                     
  3869                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3870   004AAE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3871   004AB0  B4D8               	btfsc	status,2,c
  3872   004AB2  EF5D  F025         	goto	u3621
  3873   004AB6  EF61  F025         	goto	u3620
  3874   004ABA                     u3621:
  3875   004ABA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3876   004ABC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3877   004ABE  EF62  F025         	goto	u3638
  3878   004AC2                     u3620:
  3879   004AC2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3880   004AC4                     u3638:
  3881   004AC4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3882   004AC6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3883   004AC8  010E               	movlb	14	; () banked
  3884   004ACA  51DA               	movf	218,w,b	;volatile
  3885   004ACC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3886   004ACE  0BDF               	andlw	-33
  3887   004AD0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3888   004AD2  6FDA               	movwf	218,b	;volatile
  3889   004AD4                     
  3890                           ; BSR set to: 14
  3891                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3892   004AD4  89DA               	bsf	218,4,b	;volatile
  3893   004AD6                     
  3894                           ; BSR set to: 14
  3895                           ;i2c.c: 61:   return tmp;
  3896   004AD6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3897   004AD8                     
  3898                           ; BSR set to: 14
  3899   004AD8  0012               	return		;funcret
  3900   004ADA                     __end_of_I2C_2_Master_Read:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function _I2C_2_Master_Idle *****************
  3904 ;; Defined at:
  3905 ;;		line 22 in file "i2c.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2, status,0
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;Total ram usage:        1 bytes
  3924 ;; Hardware stack levels used: 1
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_I2C_2_Master_Start
  3929 ;;		_I2C_2_Master_RepStart
  3930 ;;		_I2C_2_Master_Stop
  3931 ;;		_I2C_2_Master_Write
  3932 ;;		_I2C_2_Master_Read
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text16
  3937   004BA8                     __ptext16:
  3938                           	callstack 0
  3939   004BA8                     _I2C_2_Master_Idle:
  3940                           	callstack 26
  3941   004BA8                     l135:
  3942   004BA8  010E               	movlb	14	; () banked
  3943   004BAA  B5D8               	btfsc	216,2,b	;volatile
  3944   004BAC  EFDA  F025         	goto	u2981
  3945   004BB0  EFDC  F025         	goto	u2980
  3946   004BB4                     u2981:
  3947   004BB4  EFD4  F025         	goto	l135
  3948   004BB8                     u2980:
  3949   004BB8                     
  3950                           ; BSR set to: 14
  3951   004BB8  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3952   004BBC  0E1F               	movlw	31
  3953   004BBE  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3954   004BC0  A4D8               	btfss	status,2,c
  3955   004BC2  EFE5  F025         	goto	u2991
  3956   004BC6  EFE7  F025         	goto	u2990
  3957   004BCA                     u2991:
  3958   004BCA  EFD4  F025         	goto	l135
  3959   004BCE                     u2990:
  3960   004BCE                     
  3961                           ; BSR set to: 14
  3962   004BCE  0012               	return		;funcret
  3963   004BD0                     __end_of_I2C_2_Master_Idle:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _RGB_to_HSV *****************
  3967 ;; Defined at:
  3968 ;;		line 125 in file "color.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  R               4   10[BANK0 ] float 
  3971 ;;  G               4   14[BANK0 ] float 
  3972 ;;  B               4   18[BANK0 ] float 
  3973 ;;  C               4   22[BANK0 ] float 
  3974 ;;  H               1   26[BANK0 ] PTR float 
  3975 ;;		 -> color_cardCheck@H(4), 
  3976 ;;  S               1   27[BANK0 ] PTR float 
  3977 ;;		 -> color_cardCheck@S(4), 
  3978 ;;  V               1   28[BANK0 ] PTR float 
  3979 ;;		 -> color_cardCheck@V(4), 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  b               4   81[BANK0 ] float 
  3982 ;;  g               4   77[BANK0 ] float 
  3983 ;;  r               4   73[BANK0 ] float 
  3984 ;;  maxRGB          4   69[BANK0 ] float 
  3985 ;;  deltaRGB        4   65[BANK0 ] float 
  3986 ;;  H_temp          4   61[BANK0 ] float 
  3987 ;;  minRGB          4   45[BANK0 ] float 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3997 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Totals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;Total ram usage:       75 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 3
  4004 ;; This function calls:
  4005 ;;		___fladd
  4006 ;;		___fldiv
  4007 ;;		___fleq
  4008 ;;		___flge
  4009 ;;		___flmul
  4010 ;;		___flsub
  4011 ;;		_custom_floatmodulo
  4012 ;; This function is called by:
  4013 ;;		_color_cardCheck
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text17
  4018   00183A                     __ptext17:
  4019                           	callstack 0
  4020   00183A                     _RGB_to_HSV:
  4021                           	callstack 25
  4022   00183A                     
  4023                           ;color.c: 128:     float r = R/C;
  4024   00183A  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  4025   00183E  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  4026   001842  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  4027   001846  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  4028   00184A  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4029   00184E  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4030   001852  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4031   001856  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4032   00185A  ECC7  F018         	call	___fldiv	;wreg free
  4033   00185E  C022  F0A9         	movff	?___fldiv,RGB_to_HSV@r
  4034   001862  C023  F0AA         	movff	?___fldiv+1,RGB_to_HSV@r+1
  4035   001866  C024  F0AB         	movff	?___fldiv+2,RGB_to_HSV@r+2
  4036   00186A  C025  F0AC         	movff	?___fldiv+3,RGB_to_HSV@r+3
  4037                           
  4038                           ;color.c: 129:     float g = G/C;
  4039   00186E  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  4040   001872  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  4041   001876  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  4042   00187A  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  4043   00187E  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4044   001882  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4045   001886  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4046   00188A  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4047   00188E  ECC7  F018         	call	___fldiv	;wreg free
  4048   001892  C022  F0AD         	movff	?___fldiv,RGB_to_HSV@g
  4049   001896  C023  F0AE         	movff	?___fldiv+1,RGB_to_HSV@g+1
  4050   00189A  C024  F0AF         	movff	?___fldiv+2,RGB_to_HSV@g+2
  4051   00189E  C025  F0B0         	movff	?___fldiv+3,RGB_to_HSV@g+3
  4052                           
  4053                           ;color.c: 130:     float b = B/C;
  4054   0018A2  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  4055   0018A6  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  4056   0018AA  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  4057   0018AE  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  4058   0018B2  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4059   0018B6  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4060   0018BA  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4061   0018BE  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4062   0018C2  ECC7  F018         	call	___fldiv	;wreg free
  4063   0018C6  C022  F0B1         	movff	?___fldiv,RGB_to_HSV@b
  4064   0018CA  C023  F0B2         	movff	?___fldiv+1,RGB_to_HSV@b+1
  4065   0018CE  C024  F0B3         	movff	?___fldiv+2,RGB_to_HSV@b+2
  4066   0018D2  C025  F0B4         	movff	?___fldiv+3,RGB_to_HSV@b+3
  4067                           
  4068                           ;color.c: 133:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  4069   0018D6  C0AD  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4070   0018DA  C0AE  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4071   0018DE  C0AF  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4072   0018E2  C0B0  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4073   0018E6  C0A9  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4074   0018EA  C0AA  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4075   0018EE  C0AB  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4076   0018F2  C0AC  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4077   0018F6  ECE1  F021         	call	___flge	;wreg free
  4078   0018FA  A0D8               	btfss	status,0,c
  4079   0018FC  EF82  F00C         	goto	u3731
  4080   001900  EF84  F00C         	goto	u3730
  4081   001904                     u3731:
  4082   001904  EFB9  F00C         	goto	l3670
  4083   001908                     u3730:
  4084   001908  C0B1  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4085   00190C  C0B2  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4086   001910  C0B3  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4087   001914  C0B4  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4088   001918  C0AD  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4089   00191C  C0AE  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4090   001920  C0AF  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4091   001924  C0B0  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4092   001928  ECE1  F021         	call	___flge	;wreg free
  4093   00192C  A0D8               	btfss	status,0,c
  4094   00192E  EF9B  F00C         	goto	u3741
  4095   001932  EF9D  F00C         	goto	u3740
  4096   001936                     u3741:
  4097   001936  EFA7  F00C         	goto	l58
  4098   00193A                     u3740:
  4099   00193A  C0B1  F085         	movff	RGB_to_HSV@b,_RGB_to_HSV$317
  4100   00193E  C0B2  F086         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$317+1
  4101   001942  C0B3  F087         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$317+2
  4102   001946  C0B4  F088         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$317+3
  4103   00194A  EFAF  F00C         	goto	l60
  4104   00194E                     l58:
  4105   00194E  C0AD  F085         	movff	RGB_to_HSV@g,_RGB_to_HSV$317
  4106   001952  C0AE  F086         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$317+1
  4107   001956  C0AF  F087         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$317+2
  4108   00195A  C0B0  F088         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$317+3
  4109   00195E                     l60:
  4110   00195E  C085  F0A5         	movff	_RGB_to_HSV$317,RGB_to_HSV@maxRGB
  4111   001962  C086  F0A6         	movff	_RGB_to_HSV$317+1,RGB_to_HSV@maxRGB+1
  4112   001966  C087  F0A7         	movff	_RGB_to_HSV$317+2,RGB_to_HSV@maxRGB+2
  4113   00196A  C088  F0A8         	movff	_RGB_to_HSV$317+3,RGB_to_HSV@maxRGB+3
  4114   00196E  EFEC  F00C         	goto	l3674
  4115   001972                     l3670:
  4116   001972  C0B1  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4117   001976  C0B2  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4118   00197A  C0B3  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4119   00197E  C0B4  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4120   001982  C0A9  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4121   001986  C0AA  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4122   00198A  C0AB  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4123   00198E  C0AC  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4124   001992  ECE1  F021         	call	___flge	;wreg free
  4125   001996  A0D8               	btfss	status,0,c
  4126   001998  EFD0  F00C         	goto	u3751
  4127   00199C  EFD2  F00C         	goto	u3750
  4128   0019A0                     u3751:
  4129   0019A0  EFDC  F00C         	goto	l62
  4130   0019A4                     u3750:
  4131   0019A4  C0B1  F089         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  4132   0019A8  C0B2  F08A         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  4133   0019AC  C0B3  F08B         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  4134   0019B0  C0B4  F08C         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  4135   0019B4  EFE4  F00C         	goto	l64
  4136   0019B8                     l62:
  4137   0019B8  C0A9  F089         	movff	RGB_to_HSV@r,_RGB_to_HSV$318
  4138   0019BC  C0AA  F08A         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$318+1
  4139   0019C0  C0AB  F08B         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$318+2
  4140   0019C4  C0AC  F08C         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$318+3
  4141   0019C8                     l64:
  4142   0019C8  C089  F0A5         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  4143   0019CC  C08A  F0A6         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  4144   0019D0  C08B  F0A7         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  4145   0019D4  C08C  F0A8         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  4146   0019D8                     l3674:
  4147                           
  4148                           ;color.c: 134:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  4149   0019D8  C0A9  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4150   0019DC  C0AA  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4151   0019E0  C0AB  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4152   0019E4  C0AC  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4153   0019E8  C0AD  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4154   0019EC  C0AE  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4155   0019F0  C0AF  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4156   0019F4  C0B0  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4157   0019F8  ECE1  F021         	call	___flge	;wreg free
  4158   0019FC  A0D8               	btfss	status,0,c
  4159   0019FE  EF03  F00D         	goto	u3761
  4160   001A02  EF05  F00D         	goto	u3760
  4161   001A06                     u3761:
  4162   001A06  EF3A  F00D         	goto	l3680
  4163   001A0A                     u3760:
  4164   001A0A  C0AD  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4165   001A0E  C0AE  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4166   001A12  C0AF  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4167   001A16  C0B0  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4168   001A1A  C0B1  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4169   001A1E  C0B2  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4170   001A22  C0B3  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4171   001A26  C0B4  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4172   001A2A  ECE1  F021         	call	___flge	;wreg free
  4173   001A2E  A0D8               	btfss	status,0,c
  4174   001A30  EF1C  F00D         	goto	u3771
  4175   001A34  EF1E  F00D         	goto	u3770
  4176   001A38                     u3771:
  4177   001A38  EF28  F00D         	goto	l70
  4178   001A3C                     u3770:
  4179   001A3C  C0B1  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$320
  4180   001A40  C0B2  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$320+1
  4181   001A44  C0B3  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$320+2
  4182   001A48  C0B4  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$320+3
  4183   001A4C  EF30  F00D         	goto	l72
  4184   001A50                     l70:
  4185   001A50  C0AD  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$320
  4186   001A54  C0AE  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$320+1
  4187   001A58  C0AF  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$320+2
  4188   001A5C  C0B0  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$320+3
  4189   001A60                     l72:
  4190   001A60  C091  F08D         	movff	_RGB_to_HSV$320,RGB_to_HSV@minRGB
  4191   001A64  C092  F08E         	movff	_RGB_to_HSV$320+1,RGB_to_HSV@minRGB+1
  4192   001A68  C093  F08F         	movff	_RGB_to_HSV$320+2,RGB_to_HSV@minRGB+2
  4193   001A6C  C094  F090         	movff	_RGB_to_HSV$320+3,RGB_to_HSV@minRGB+3
  4194   001A70  EF6D  F00D         	goto	l3684
  4195   001A74                     l3680:
  4196   001A74  C0A9  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4197   001A78  C0AA  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4198   001A7C  C0AB  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4199   001A80  C0AC  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4200   001A84  C0B1  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4201   001A88  C0B2  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4202   001A8C  C0B3  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4203   001A90  C0B4  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4204   001A94  ECE1  F021         	call	___flge	;wreg free
  4205   001A98  A0D8               	btfss	status,0,c
  4206   001A9A  EF51  F00D         	goto	u3781
  4207   001A9E  EF53  F00D         	goto	u3780
  4208   001AA2                     u3781:
  4209   001AA2  EF5D  F00D         	goto	l74
  4210   001AA6                     u3780:
  4211   001AA6  C0B1  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  4212   001AAA  C0B2  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  4213   001AAE  C0B3  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  4214   001AB2  C0B4  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  4215   001AB6  EF65  F00D         	goto	l76
  4216   001ABA                     l74:
  4217   001ABA  C0A9  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$321
  4218   001ABE  C0AA  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$321+1
  4219   001AC2  C0AB  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$321+2
  4220   001AC6  C0AC  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$321+3
  4221   001ACA                     l76:
  4222   001ACA  C095  F08D         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  4223   001ACE  C096  F08E         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  4224   001AD2  C097  F08F         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  4225   001AD6  C098  F090         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  4226   001ADA                     l3684:
  4227                           
  4228                           ;color.c: 135:     float deltaRGB = maxRGB - minRGB;
  4229   001ADA  C0A5  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  4230   001ADE  C0A6  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  4231   001AE2  C0A7  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  4232   001AE6  C0A8  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  4233   001AEA  C08D  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  4234   001AEE  C08E  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  4235   001AF2  C08F  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  4236   001AF6  C090  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  4237   001AFA  EC29  F025         	call	___flsub	;wreg free
  4238   001AFE  C01A  F0A1         	movff	?___flsub,RGB_to_HSV@deltaRGB
  4239   001B02  C01B  F0A2         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  4240   001B06  C01C  F0A3         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  4241   001B0A  C01D  F0A4         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  4242                           
  4243                           ;color.c: 140:     float H_temp;;color.c: 142:     if (deltaRGB == 0) {H_temp = 0;}
  4244   001B0E  C0A1  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  4245   001B12  C0A2  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  4246   001B16  C0A3  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  4247   001B1A  C0A4  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  4248   001B1E  0E00               	movlw	0
  4249   001B20  6E05               	movwf	___fleq@ff2^0,c
  4250   001B22  0E00               	movlw	0
  4251   001B24  6E06               	movwf	(___fleq@ff2+1)^0,c
  4252   001B26  0E00               	movlw	0
  4253   001B28  6E07               	movwf	(___fleq@ff2+2)^0,c
  4254   001B2A  0E00               	movlw	0
  4255   001B2C  6E08               	movwf	(___fleq@ff2+3)^0,c
  4256   001B2E  EC81  F023         	call	___fleq	;wreg free
  4257   001B32  A0D8               	btfss	status,0,c
  4258   001B34  EF9E  F00D         	goto	u3791
  4259   001B38  EFA0  F00D         	goto	u3790
  4260   001B3C                     u3791:
  4261   001B3C  EFAB  F00D         	goto	l3688
  4262   001B40                     u3790:
  4263   001B40  0E00               	movlw	0
  4264   001B42  0100               	movlb	0	; () banked
  4265   001B44  6F9D               	movwf	RGB_to_HSV@H_temp& (0+255),b
  4266   001B46  0E00               	movlw	0
  4267   001B48  6F9E               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  4268   001B4A  0E00               	movlw	0
  4269   001B4C  6F9F               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  4270   001B4E  0E00               	movlw	0
  4271   001B50  6FA0               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  4272   001B52  EF0C  F00F         	goto	l3708
  4273   001B56                     l3688:
  4274   001B56  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4275   001B5A  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4276   001B5E  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4277   001B62  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4278   001B66  C0A9  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  4279   001B6A  C0AA  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  4280   001B6E  C0AB  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  4281   001B72  C0AC  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  4282   001B76  EC81  F023         	call	___fleq	;wreg free
  4283   001B7A  A0D8               	btfss	status,0,c
  4284   001B7C  EFC2  F00D         	goto	u3801
  4285   001B80  EFC4  F00D         	goto	u3800
  4286   001B84                     u3801:
  4287   001B84  EF26  F00E         	goto	l3696
  4288   001B88                     u3800:
  4289   001B88  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4290   001B8C  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4291   001B90  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4292   001B94  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4293   001B98  C0B1  F01E         	movff	RGB_to_HSV@b,___flsub@a
  4294   001B9C  C0B2  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  4295   001BA0  C0B3  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  4296   001BA4  C0B4  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  4297   001BA8  C0AD  F01A         	movff	RGB_to_HSV@g,___flsub@b
  4298   001BAC  C0AE  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  4299   001BB0  C0AF  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  4300   001BB4  C0B0  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  4301   001BB8  EC29  F025         	call	___flsub	;wreg free
  4302   001BBC  C01A  F022         	movff	?___flsub,___fldiv@b
  4303   001BC0  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4304   001BC4  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4305   001BC8  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4306   001BCC  ECC7  F018         	call	___fldiv	;wreg free
  4307   001BD0  C022  F07D         	movff	?___fldiv,_RGB_to_HSV$2715
  4308   001BD4  C023  F07E         	movff	?___fldiv+1,_RGB_to_HSV$2715+1
  4309   001BD8  C024  F07F         	movff	?___fldiv+2,_RGB_to_HSV$2715+2
  4310   001BDC  C025  F080         	movff	?___fldiv+3,_RGB_to_HSV$2715+3
  4311   001BE0  0E00               	movlw	0
  4312   001BE2  6E58               	movwf	custom_floatmodulo@y^0,c
  4313   001BE4  0E00               	movlw	0
  4314   001BE6  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  4315   001BE8  0EC0               	movlw	192
  4316   001BEA  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  4317   001BEC  0E40               	movlw	64
  4318   001BEE  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  4319   001BF0  C07D  F054         	movff	_RGB_to_HSV$2715,custom_floatmodulo@x
  4320   001BF4  C07E  F055         	movff	_RGB_to_HSV$2715+1,custom_floatmodulo@x+1
  4321   001BF8  C07F  F056         	movff	_RGB_to_HSV$2715+2,custom_floatmodulo@x+2
  4322   001BFC  C080  F057         	movff	_RGB_to_HSV$2715+3,custom_floatmodulo@x+3
  4323   001C00  ECD2  F020         	call	_custom_floatmodulo	;wreg free
  4324   001C04  C054  F081         	movff	?_custom_floatmodulo,_RGB_to_HSV$2716
  4325   001C08  C055  F082         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2716+1
  4326   001C0C  C056  F083         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2716+2
  4327   001C10  C057  F084         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2716+3
  4328   001C14  C081  F03B         	movff	_RGB_to_HSV$2716,___flmul@b
  4329   001C18  C082  F03C         	movff	_RGB_to_HSV$2716+1,___flmul@b+1
  4330   001C1C  C083  F03D         	movff	_RGB_to_HSV$2716+2,___flmul@b+2
  4331   001C20  C084  F03E         	movff	_RGB_to_HSV$2716+3,___flmul@b+3
  4332   001C24  0E00               	movlw	0
  4333   001C26  6E3F               	movwf	___flmul@a^0,c
  4334   001C28  0E00               	movlw	0
  4335   001C2A  6E40               	movwf	(___flmul@a+1)^0,c
  4336   001C2C  0E70               	movlw	112
  4337   001C2E  6E41               	movwf	(___flmul@a+2)^0,c
  4338   001C30  0E42               	movlw	66
  4339   001C32  6E42               	movwf	(___flmul@a+3)^0,c
  4340   001C34  ECB2  F016         	call	___flmul	;wreg free
  4341   001C38  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4342   001C3C  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4343   001C40  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4344   001C44  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4345   001C48  EF0C  F00F         	goto	l3708
  4346   001C4C                     l3696:
  4347   001C4C  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4348   001C50  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4349   001C54  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4350   001C58  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4351   001C5C  C0AD  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  4352   001C60  C0AE  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  4353   001C64  C0AF  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  4354   001C68  C0B0  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  4355   001C6C  EC81  F023         	call	___fleq	;wreg free
  4356   001C70  A0D8               	btfss	status,0,c
  4357   001C72  EF3D  F00E         	goto	u3811
  4358   001C76  EF3F  F00E         	goto	u3810
  4359   001C7A                     u3811:
  4360   001C7A  EF99  F00E         	goto	l3702
  4361   001C7E                     u3810:
  4362   001C7E  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4363   001C82  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4364   001C86  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4365   001C8A  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4366   001C8E  C0A9  F01E         	movff	RGB_to_HSV@r,___flsub@a
  4367   001C92  C0AA  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  4368   001C96  C0AB  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  4369   001C9A  C0AC  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  4370   001C9E  C0B1  F01A         	movff	RGB_to_HSV@b,___flsub@b
  4371   001CA2  C0B2  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  4372   001CA6  C0B3  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  4373   001CAA  C0B4  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  4374   001CAE  EC29  F025         	call	___flsub	;wreg free
  4375   001CB2  C01A  F022         	movff	?___flsub,___fldiv@b
  4376   001CB6  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4377   001CBA  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4378   001CBE  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4379   001CC2  ECC7  F018         	call	___fldiv	;wreg free
  4380   001CC6  C022  F099         	movff	?___fldiv,_RGB_to_HSV$2717
  4381   001CCA  C023  F09A         	movff	?___fldiv+1,_RGB_to_HSV$2717+1
  4382   001CCE  C024  F09B         	movff	?___fldiv+2,_RGB_to_HSV$2717+2
  4383   001CD2  C025  F09C         	movff	?___fldiv+3,_RGB_to_HSV$2717+3
  4384   001CD6  0E00               	movlw	0
  4385   001CD8  6E05               	movwf	___fladd@a^0,c
  4386   001CDA  0E00               	movlw	0
  4387   001CDC  6E06               	movwf	(___fladd@a+1)^0,c
  4388   001CDE  0E00               	movlw	0
  4389   001CE0  6E07               	movwf	(___fladd@a+2)^0,c
  4390   001CE2  0E40               	movlw	64
  4391   001CE4  6E08               	movwf	(___fladd@a+3)^0,c
  4392   001CE6  C099  F001         	movff	_RGB_to_HSV$2717,___fladd@b
  4393   001CEA  C09A  F002         	movff	_RGB_to_HSV$2717+1,___fladd@b+1
  4394   001CEE  C09B  F003         	movff	_RGB_to_HSV$2717+2,___fladd@b+2
  4395   001CF2  C09C  F004         	movff	_RGB_to_HSV$2717+3,___fladd@b+3
  4396   001CF6  EC11  F012         	call	___fladd	;wreg free
  4397   001CFA  C001  F03B         	movff	?___fladd,___flmul@b
  4398   001CFE  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4399   001D02  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4400   001D06  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4401   001D0A  0E00               	movlw	0
  4402   001D0C  6E3F               	movwf	___flmul@a^0,c
  4403   001D0E  0E00               	movlw	0
  4404   001D10  6E40               	movwf	(___flmul@a+1)^0,c
  4405   001D12  0E70               	movlw	112
  4406   001D14  6E41               	movwf	(___flmul@a+2)^0,c
  4407   001D16  0E42               	movlw	66
  4408   001D18  6E42               	movwf	(___flmul@a+3)^0,c
  4409   001D1A  ECB2  F016         	call	___flmul	;wreg free
  4410   001D1E  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4411   001D22  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4412   001D26  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4413   001D2A  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4414   001D2E  EF0C  F00F         	goto	l3708
  4415   001D32                     l3702:
  4416   001D32  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4417   001D36  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4418   001D3A  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4419   001D3E  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4420   001D42  C0B1  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  4421   001D46  C0B2  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  4422   001D4A  C0B3  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  4423   001D4E  C0B4  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  4424   001D52  EC81  F023         	call	___fleq	;wreg free
  4425   001D56  A0D8               	btfss	status,0,c
  4426   001D58  EFB0  F00E         	goto	u3821
  4427   001D5C  EFB2  F00E         	goto	u3820
  4428   001D60                     u3821:
  4429   001D60  EF0C  F00F         	goto	l80
  4430   001D64                     u3820:
  4431   001D64  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4432   001D68  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4433   001D6C  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4434   001D70  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4435   001D74  C0AD  F01E         	movff	RGB_to_HSV@g,___flsub@a
  4436   001D78  C0AE  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  4437   001D7C  C0AF  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  4438   001D80  C0B0  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  4439   001D84  C0A9  F01A         	movff	RGB_to_HSV@r,___flsub@b
  4440   001D88  C0AA  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  4441   001D8C  C0AB  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  4442   001D90  C0AC  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  4443   001D94  EC29  F025         	call	___flsub	;wreg free
  4444   001D98  C01A  F022         	movff	?___flsub,___fldiv@b
  4445   001D9C  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4446   001DA0  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4447   001DA4  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4448   001DA8  ECC7  F018         	call	___fldiv	;wreg free
  4449   001DAC  C022  F099         	movff	?___fldiv,_RGB_to_HSV$2717
  4450   001DB0  C023  F09A         	movff	?___fldiv+1,_RGB_to_HSV$2717+1
  4451   001DB4  C024  F09B         	movff	?___fldiv+2,_RGB_to_HSV$2717+2
  4452   001DB8  C025  F09C         	movff	?___fldiv+3,_RGB_to_HSV$2717+3
  4453   001DBC  0E00               	movlw	0
  4454   001DBE  6E05               	movwf	___fladd@a^0,c
  4455   001DC0  0E00               	movlw	0
  4456   001DC2  6E06               	movwf	(___fladd@a+1)^0,c
  4457   001DC4  0E80               	movlw	128
  4458   001DC6  6E07               	movwf	(___fladd@a+2)^0,c
  4459   001DC8  0E40               	movlw	64
  4460   001DCA  6E08               	movwf	(___fladd@a+3)^0,c
  4461   001DCC  C099  F001         	movff	_RGB_to_HSV$2717,___fladd@b
  4462   001DD0  C09A  F002         	movff	_RGB_to_HSV$2717+1,___fladd@b+1
  4463   001DD4  C09B  F003         	movff	_RGB_to_HSV$2717+2,___fladd@b+2
  4464   001DD8  C09C  F004         	movff	_RGB_to_HSV$2717+3,___fladd@b+3
  4465   001DDC  EC11  F012         	call	___fladd	;wreg free
  4466   001DE0  C001  F03B         	movff	?___fladd,___flmul@b
  4467   001DE4  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4468   001DE8  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4469   001DEC  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4470   001DF0  0E00               	movlw	0
  4471   001DF2  6E3F               	movwf	___flmul@a^0,c
  4472   001DF4  0E00               	movlw	0
  4473   001DF6  6E40               	movwf	(___flmul@a+1)^0,c
  4474   001DF8  0E70               	movlw	112
  4475   001DFA  6E41               	movwf	(___flmul@a+2)^0,c
  4476   001DFC  0E42               	movlw	66
  4477   001DFE  6E42               	movwf	(___flmul@a+3)^0,c
  4478   001E00  ECB2  F016         	call	___flmul	;wreg free
  4479   001E04  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4480   001E08  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4481   001E0C  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4482   001E10  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4483   001E14  EF0C  F00F         	goto	l3708
  4484   001E18                     l80:
  4485   001E18                     l3708:
  4486                           
  4487                           ;color.c: 150:     if (H_temp < 0) {H_temp = H_temp + 360;}
  4488   001E18  0100               	movlb	0	; () banked
  4489   001E1A  BFA0               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  4490   001E1C  EF14  F00F         	goto	u3830
  4491   001E20  EF12  F00F         	goto	u3831
  4492   001E24                     u3831:
  4493   001E24  EF2E  F00F         	goto	l3712
  4494   001E28                     u3830:
  4495   001E28                     
  4496                           ; BSR set to: 0
  4497   001E28  C09D  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  4498   001E2C  C09E  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  4499   001E30  C09F  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  4500   001E34  C0A0  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  4501   001E38  0E00               	movlw	0
  4502   001E3A  6E05               	movwf	___fladd@a^0,c
  4503   001E3C  0E00               	movlw	0
  4504   001E3E  6E06               	movwf	(___fladd@a+1)^0,c
  4505   001E40  0EB4               	movlw	180
  4506   001E42  6E07               	movwf	(___fladd@a+2)^0,c
  4507   001E44  0E43               	movlw	67
  4508   001E46  6E08               	movwf	(___fladd@a+3)^0,c
  4509   001E48  EC11  F012         	call	___fladd	;wreg free
  4510   001E4C  C001  F09D         	movff	?___fladd,RGB_to_HSV@H_temp
  4511   001E50  C002  F09E         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  4512   001E54  C003  F09F         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  4513   001E58  C004  F0A0         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  4514   001E5C                     l3712:
  4515                           
  4516                           ;color.c: 153:     *H = H_temp;
  4517   001E5C  0100               	movlb	0	; () banked
  4518   001E5E  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  4519   001E60  6ED9               	movwf	fsr2l,c
  4520   001E62  6ADA               	clrf	fsr2h,c
  4521   001E64  C09D  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  4522   001E68  C09E  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  4523   001E6C  C09F  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  4524   001E70  C0A0  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  4525   001E74                     
  4526                           ; BSR set to: 0
  4527                           ;color.c: 156:     if (maxRGB == 0) {*S = 0;}
  4528   001E74  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4529   001E78  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4530   001E7C  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4531   001E80  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4532   001E84  0E00               	movlw	0
  4533   001E86  6E05               	movwf	___fleq@ff2^0,c
  4534   001E88  0E00               	movlw	0
  4535   001E8A  6E06               	movwf	(___fleq@ff2+1)^0,c
  4536   001E8C  0E00               	movlw	0
  4537   001E8E  6E07               	movwf	(___fleq@ff2+2)^0,c
  4538   001E90  0E00               	movlw	0
  4539   001E92  6E08               	movwf	(___fleq@ff2+3)^0,c
  4540   001E94  EC81  F023         	call	___fleq	;wreg free
  4541   001E98  A0D8               	btfss	status,0,c
  4542   001E9A  EF51  F00F         	goto	u3841
  4543   001E9E  EF53  F00F         	goto	u3840
  4544   001EA2                     u3841:
  4545   001EA2  EF61  F00F         	goto	l3718
  4546   001EA6                     u3840:
  4547   001EA6  0100               	movlb	0	; () banked
  4548   001EA8  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4549   001EAA  6ED9               	movwf	fsr2l,c
  4550   001EAC  6ADA               	clrf	fsr2h,c
  4551   001EAE  0E00               	movlw	0
  4552   001EB0  6EDE               	movwf	postinc2,c
  4553   001EB2  0E00               	movlw	0
  4554   001EB4  6EDE               	movwf	postinc2,c
  4555   001EB6  0E00               	movlw	0
  4556   001EB8  6EDE               	movwf	postinc2,c
  4557   001EBA  0E00               	movlw	0
  4558   001EBC  6EDD               	movwf	postdec2,c
  4559   001EBE  EF91  F00F         	goto	l86
  4560   001EC2                     l3718:
  4561                           
  4562                           ;color.c: 159:         *S = (deltaRGB/maxRGB) * 100;
  4563   001EC2  C0A5  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  4564   001EC6  C0A6  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  4565   001ECA  C0A7  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  4566   001ECE  C0A8  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  4567   001ED2  C0A1  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  4568   001ED6  C0A2  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  4569   001EDA  C0A3  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  4570   001EDE  C0A4  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  4571   001EE2  ECC7  F018         	call	___fldiv	;wreg free
  4572   001EE6  C022  F03B         	movff	?___fldiv,___flmul@b
  4573   001EEA  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  4574   001EEE  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  4575   001EF2  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  4576   001EF6  0E00               	movlw	0
  4577   001EF8  6E3F               	movwf	___flmul@a^0,c
  4578   001EFA  0E00               	movlw	0
  4579   001EFC  6E40               	movwf	(___flmul@a+1)^0,c
  4580   001EFE  0EC8               	movlw	200
  4581   001F00  6E41               	movwf	(___flmul@a+2)^0,c
  4582   001F02  0E42               	movlw	66
  4583   001F04  6E42               	movwf	(___flmul@a+3)^0,c
  4584   001F06  ECB2  F016         	call	___flmul	;wreg free
  4585   001F0A  0100               	movlb	0	; () banked
  4586   001F0C  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4587   001F0E  6ED9               	movwf	fsr2l,c
  4588   001F10  6ADA               	clrf	fsr2h,c
  4589   001F12  C03B  FFDE         	movff	?___flmul,postinc2
  4590   001F16  C03C  FFDE         	movff	?___flmul+1,postinc2
  4591   001F1A  C03D  FFDE         	movff	?___flmul+2,postinc2
  4592   001F1E  C03E  FFDE         	movff	?___flmul+3,postinc2
  4593   001F22                     l86:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;color.c: 163:     *V = maxRGB * 100;
  4597   001F22  C0A5  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  4598   001F26  C0A6  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  4599   001F2A  C0A7  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  4600   001F2E  C0A8  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  4601   001F32  0E00               	movlw	0
  4602   001F34  6E3F               	movwf	___flmul@a^0,c
  4603   001F36  0E00               	movlw	0
  4604   001F38  6E40               	movwf	(___flmul@a+1)^0,c
  4605   001F3A  0EC8               	movlw	200
  4606   001F3C  6E41               	movwf	(___flmul@a+2)^0,c
  4607   001F3E  0E42               	movlw	66
  4608   001F40  6E42               	movwf	(___flmul@a+3)^0,c
  4609   001F42  ECB2  F016         	call	___flmul	;wreg free
  4610   001F46  0100               	movlb	0	; () banked
  4611   001F48  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  4612   001F4A  6ED9               	movwf	fsr2l,c
  4613   001F4C  6ADA               	clrf	fsr2h,c
  4614   001F4E  C03B  FFDE         	movff	?___flmul,postinc2
  4615   001F52  C03C  FFDE         	movff	?___flmul+1,postinc2
  4616   001F56  C03D  FFDE         	movff	?___flmul+2,postinc2
  4617   001F5A  C03E  FFDE         	movff	?___flmul+3,postinc2
  4618   001F5E                     
  4619                           ; BSR set to: 0
  4620   001F5E  0012               	return		;funcret
  4621   001F60                     __end_of_RGB_to_HSV:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _custom_floatmodulo *****************
  4625 ;; Defined at:
  4626 ;;		line 106 in file "color.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  x               4   83[COMRAM] float 
  4629 ;;  y               4   87[COMRAM] float 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  remainder       4    4[BANK0 ] float 
  4632 ;;  quotient        4    0[BANK0 ] float 
  4633 ;;  intPart         2    8[BANK0 ] int 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  4   83[COMRAM] float 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4643 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;Total ram usage:       18 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 2
  4650 ;; This function calls:
  4651 ;;		___fldiv
  4652 ;;		___fleq
  4653 ;;		___flmul
  4654 ;;		___flsub
  4655 ;;		___fltol
  4656 ;;		___xxtofl
  4657 ;; This function is called by:
  4658 ;;		_RGB_to_HSV
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text18
  4663   0041A4                     __ptext18:
  4664                           	callstack 0
  4665   0041A4                     _custom_floatmodulo:
  4666                           	callstack 25
  4667   0041A4                     
  4668                           ;color.c: 108:     if (y == 0.0) {
  4669   0041A4  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  4670   0041A8  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  4671   0041AC  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  4672   0041B0  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  4673   0041B4  0E00               	movlw	0
  4674   0041B6  6E05               	movwf	___fleq@ff2^0,c
  4675   0041B8  0E00               	movlw	0
  4676   0041BA  6E06               	movwf	(___fleq@ff2+1)^0,c
  4677   0041BC  0E00               	movlw	0
  4678   0041BE  6E07               	movwf	(___fleq@ff2+2)^0,c
  4679   0041C0  0E00               	movlw	0
  4680   0041C2  6E08               	movwf	(___fleq@ff2+3)^0,c
  4681   0041C4  EC81  F023         	call	___fleq	;wreg free
  4682   0041C8  A0D8               	btfss	status,0,c
  4683   0041CA  EFE9  F020         	goto	u3641
  4684   0041CE  EFEB  F020         	goto	u3640
  4685   0041D2                     u3641:
  4686   0041D2  EFF5  F020         	goto	l3568
  4687   0041D6                     u3640:
  4688   0041D6                     
  4689                           ;color.c: 109:         return 0.0;
  4690   0041D6  0E00               	movlw	0
  4691   0041D8  6E54               	movwf	?_custom_floatmodulo^0,c
  4692   0041DA  0E00               	movlw	0
  4693   0041DC  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  4694   0041DE  0E00               	movlw	0
  4695   0041E0  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  4696   0041E2  0E00               	movlw	0
  4697   0041E4  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  4698   0041E6  EF5D  F021         	goto	l50
  4699   0041EA                     l3568:
  4700                           
  4701                           ;color.c: 113:     float quotient = x / y;
  4702   0041EA  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  4703   0041EE  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  4704   0041F2  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  4705   0041F6  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  4706   0041FA  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  4707   0041FE  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  4708   004202  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  4709   004206  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  4710   00420A  ECC7  F018         	call	___fldiv	;wreg free
  4711   00420E  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  4712   004212  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  4713   004216  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  4714   00421A  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  4715                           
  4716                           ;color.c: 116:     int intPart = (int)quotient;
  4717   00421E  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  4718   004222  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  4719   004226  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  4720   00422A  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  4721   00422E  EC5E  F021         	call	___fltol	;wreg free
  4722   004232  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  4723   004236  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  4724   00423A                     
  4725                           ;color.c: 119:     float remainder = x - intPart * y;
  4726   00423A  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  4727   00423E  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  4728   004242  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  4729   004246  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  4730   00424A  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  4731   00424E  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  4732   004252  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  4733   004256  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  4734   00425A  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  4735   00425E  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  4736   004262  0E00               	movlw	0
  4737   004264  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  4738   004266  0EFF               	movlw	-1
  4739   004268  6E0E               	movwf	(___xxtofl@val+2)^0,c
  4740   00426A  6E0F               	movwf	(___xxtofl@val+3)^0,c
  4741   00426C  0E01               	movlw	1
  4742   00426E  ECAB  F01B         	call	___xxtofl
  4743   004272  C00C  F03B         	movff	?___xxtofl,___flmul@b
  4744   004276  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  4745   00427A  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  4746   00427E  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  4747   004282  ECB2  F016         	call	___flmul	;wreg free
  4748   004286  C03B  F01E         	movff	?___flmul,___flsub@a
  4749   00428A  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  4750   00428E  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  4751   004292  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  4752   004296  EC29  F025         	call	___flsub	;wreg free
  4753   00429A  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  4754   00429E  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  4755   0042A2  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  4756   0042A6  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  4757   0042AA                     
  4758                           ;color.c: 121:     return remainder;
  4759   0042AA  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  4760   0042AE  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  4761   0042B2  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  4762   0042B6  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  4763   0042BA                     l50:
  4764   0042BA  0012               	return		;funcret
  4765   0042BC                     __end_of_custom_floatmodulo:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function ___xxtofl *****************
  4769 ;; Defined at:
  4770 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  sign            1    wreg     unsigned char 
  4773 ;;  val             4   11[COMRAM] long 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  sign            1   19[COMRAM] unsigned char 
  4776 ;;  arg             4   21[COMRAM] unsigned long 
  4777 ;;  exp             1   20[COMRAM] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  4   11[COMRAM] unsigned char 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;Total ram usage:       14 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_custom_floatmodulo
  4797 ;;		_color_cardCheck
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text19
  4802   003756                     __ptext19:
  4803                           	callstack 0
  4804   003756                     ___xxtofl:
  4805                           	callstack 28
  4806                           
  4807                           ;incstack = 0
  4808                           ;___xxtofl@sign stored from wreg
  4809   003756  6E14               	movwf	___xxtofl@sign^0,c
  4810   003758  5014               	movf	___xxtofl@sign^0,w,c
  4811   00375A  B4D8               	btfsc	status,2,c
  4812   00375C  EFB2  F01B         	goto	u3521
  4813   003760  EFB4  F01B         	goto	u3520
  4814   003764                     u3521:
  4815   003764  EFD6  F01B         	goto	l1254
  4816   003768                     u3520:
  4817   003768  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4818   00376A  EFBB  F01B         	goto	u3530
  4819   00376E  EFB9  F01B         	goto	u3531
  4820   003772                     u3531:
  4821   003772  EFD6  F01B         	goto	l1254
  4822   003776                     u3530:
  4823   003776  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  4824   00377A  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  4825   00377E  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  4826   003782  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  4827   003786  1E10               	comf	??___xxtofl^0,f,c
  4828   003788  1E11               	comf	(??___xxtofl+1)^0,f,c
  4829   00378A  1E12               	comf	(??___xxtofl+2)^0,f,c
  4830   00378C  1E13               	comf	(??___xxtofl+3)^0,f,c
  4831   00378E  2A10               	incf	??___xxtofl^0,f,c
  4832   003790  0E00               	movlw	0
  4833   003792  2211               	addwfc	(??___xxtofl+1)^0,f,c
  4834   003794  2212               	addwfc	(??___xxtofl+2)^0,f,c
  4835   003796  2213               	addwfc	(??___xxtofl+3)^0,f,c
  4836   003798  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  4837   00379C  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  4838   0037A0  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  4839   0037A4  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  4840   0037A8  EFDE  F01B         	goto	l3492
  4841   0037AC                     l1254:
  4842   0037AC  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  4843   0037B0  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4844   0037B4  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4845   0037B8  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4846   0037BC                     l3492:
  4847   0037BC  500C               	movf	___xxtofl@val^0,w,c
  4848   0037BE  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  4849   0037C0  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  4850   0037C2  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  4851   0037C4  A4D8               	btfss	status,2,c
  4852   0037C6  EFE7  F01B         	goto	u3541
  4853   0037CA  EFE9  F01B         	goto	u3540
  4854   0037CE                     u3541:
  4855   0037CE  EFF3  F01B         	goto	l3498
  4856   0037D2                     u3540:
  4857   0037D2  0E00               	movlw	0
  4858   0037D4  6E0C               	movwf	?___xxtofl^0,c
  4859   0037D6  0E00               	movlw	0
  4860   0037D8  6E0D               	movwf	(?___xxtofl+1)^0,c
  4861   0037DA  0E00               	movlw	0
  4862   0037DC  6E0E               	movwf	(?___xxtofl+2)^0,c
  4863   0037DE  0E00               	movlw	0
  4864   0037E0  6E0F               	movwf	(?___xxtofl+3)^0,c
  4865   0037E2  EF84  F01C         	goto	l1257
  4866   0037E6                     l3498:
  4867   0037E6  0E96               	movlw	150
  4868   0037E8  6E15               	movwf	___xxtofl@exp^0,c
  4869   0037EA  EFFD  F01B         	goto	l3502
  4870   0037EE                     l3500:
  4871   0037EE  2A15               	incf	___xxtofl@exp^0,f,c
  4872   0037F0  90D8               	bcf	status,0,c
  4873   0037F2  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4874   0037F4  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4875   0037F6  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4876   0037F8  3216               	rrcf	___xxtofl@arg^0,f,c
  4877   0037FA                     l3502:
  4878   0037FA  0E00               	movlw	0
  4879   0037FC  1416               	andwf	___xxtofl@arg^0,w,c
  4880   0037FE  6E10               	movwf	??___xxtofl^0,c
  4881   003800  0E00               	movlw	0
  4882   003802  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4883   003804  6E11               	movwf	(??___xxtofl+1)^0,c
  4884   003806  0E00               	movlw	0
  4885   003808  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4886   00380A  6E12               	movwf	(??___xxtofl+2)^0,c
  4887   00380C  0EFE               	movlw	254
  4888   00380E  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4889   003810  6E13               	movwf	(??___xxtofl+3)^0,c
  4890   003812  5010               	movf	??___xxtofl^0,w,c
  4891   003814  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4892   003816  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4893   003818  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4894   00381A  A4D8               	btfss	status,2,c
  4895   00381C  EF12  F01C         	goto	u3551
  4896   003820  EF14  F01C         	goto	u3550
  4897   003824                     u3551:
  4898   003824  EFF7  F01B         	goto	l3500
  4899   003828                     u3550:
  4900   003828  EF22  F01C         	goto	l1261
  4901   00382C                     l3504:
  4902   00382C  2A15               	incf	___xxtofl@exp^0,f,c
  4903   00382E  0E01               	movlw	1
  4904   003830  2616               	addwf	___xxtofl@arg^0,f,c
  4905   003832  0E00               	movlw	0
  4906   003834  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  4907   003836  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  4908   003838  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  4909   00383A  90D8               	bcf	status,0,c
  4910   00383C  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4911   00383E  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4912   003840  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4913   003842  3216               	rrcf	___xxtofl@arg^0,f,c
  4914   003844                     l1261:
  4915   003844  0E00               	movlw	0
  4916   003846  1416               	andwf	___xxtofl@arg^0,w,c
  4917   003848  6E10               	movwf	??___xxtofl^0,c
  4918   00384A  0E00               	movlw	0
  4919   00384C  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4920   00384E  6E11               	movwf	(??___xxtofl+1)^0,c
  4921   003850  0E00               	movlw	0
  4922   003852  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4923   003854  6E12               	movwf	(??___xxtofl+2)^0,c
  4924   003856  0EFF               	movlw	255
  4925   003858  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4926   00385A  6E13               	movwf	(??___xxtofl+3)^0,c
  4927   00385C  5010               	movf	??___xxtofl^0,w,c
  4928   00385E  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4929   003860  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4930   003862  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4931   003864  A4D8               	btfss	status,2,c
  4932   003866  EF37  F01C         	goto	u3561
  4933   00386A  EF39  F01C         	goto	u3560
  4934   00386E                     u3561:
  4935   00386E  EF16  F01C         	goto	l3504
  4936   003872                     u3560:
  4937   003872  EF41  F01C         	goto	l3512
  4938   003876                     l3510:
  4939   003876  0615               	decf	___xxtofl@exp^0,f,c
  4940   003878  90D8               	bcf	status,0,c
  4941   00387A  3616               	rlcf	___xxtofl@arg^0,f,c
  4942   00387C  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  4943   00387E  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  4944   003880  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  4945   003882                     l3512:
  4946   003882  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  4947   003884  EF46  F01C         	goto	u3571
  4948   003888  EF48  F01C         	goto	u3570
  4949   00388C                     u3571:
  4950   00388C  EF50  F01C         	goto	l1268
  4951   003890                     u3570:
  4952   003890  0E02               	movlw	2
  4953   003892  6015               	cpfslt	___xxtofl@exp^0,c
  4954   003894  EF4E  F01C         	goto	u3581
  4955   003898  EF50  F01C         	goto	u3580
  4956   00389C                     u3581:
  4957   00389C  EF3B  F01C         	goto	l3510
  4958   0038A0                     u3580:
  4959   0038A0                     l1268:
  4960   0038A0  B015               	btfsc	___xxtofl@exp^0,0,c
  4961   0038A2  EF55  F01C         	goto	u3591
  4962   0038A6  EF57  F01C         	goto	u3590
  4963   0038AA                     u3591:
  4964   0038AA  EF58  F01C         	goto	l3518
  4965   0038AE                     u3590:
  4966   0038AE  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  4967   0038B0                     l3518:
  4968   0038B0  90D8               	bcf	status,0,c
  4969   0038B2  3215               	rrcf	___xxtofl@exp^0,f,c
  4970   0038B4  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  4971   0038B8  6A11               	clrf	(??___xxtofl+1)^0,c
  4972   0038BA  6A12               	clrf	(??___xxtofl+2)^0,c
  4973   0038BC  6A13               	clrf	(??___xxtofl+3)^0,c
  4974   0038BE  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  4975   0038C2  6A12               	clrf	(??___xxtofl+2)^0,c
  4976   0038C4  6A11               	clrf	(??___xxtofl+1)^0,c
  4977   0038C6  6A10               	clrf	??___xxtofl^0,c
  4978   0038C8  5010               	movf	??___xxtofl^0,w,c
  4979   0038CA  1216               	iorwf	___xxtofl@arg^0,f,c
  4980   0038CC  5011               	movf	(??___xxtofl+1)^0,w,c
  4981   0038CE  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  4982   0038D0  5012               	movf	(??___xxtofl+2)^0,w,c
  4983   0038D2  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  4984   0038D4  5013               	movf	(??___xxtofl+3)^0,w,c
  4985   0038D6  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  4986   0038D8  5014               	movf	___xxtofl@sign^0,w,c
  4987   0038DA  B4D8               	btfsc	status,2,c
  4988   0038DC  EF72  F01C         	goto	u3601
  4989   0038E0  EF74  F01C         	goto	u3600
  4990   0038E4                     u3601:
  4991   0038E4  EF7C  F01C         	goto	l3528
  4992   0038E8                     u3600:
  4993   0038E8  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4994   0038EA  EF7B  F01C         	goto	u3610
  4995   0038EE  EF79  F01C         	goto	u3611
  4996   0038F2                     u3611:
  4997   0038F2  EF7C  F01C         	goto	l3528
  4998   0038F6                     u3610:
  4999   0038F6  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  5000   0038F8                     l3528:
  5001   0038F8  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  5002   0038FC  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5003   003900  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5004   003904  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5005   003908                     l1257:
  5006   003908  0012               	return		;funcret
  5007   00390A                     __end_of___xxtofl:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function ___fltol *****************
  5011 ;; Defined at:
  5012 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  f1              4    0[COMRAM] unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  exp1            1    9[COMRAM] unsigned char 
  5017 ;;  sign1           1    8[COMRAM] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  4    0[COMRAM] long 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5030 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;Total ram usage:       10 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_custom_floatmodulo
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text20
  5041   0042BC                     __ptext20:
  5042                           	callstack 0
  5043   0042BC                     ___fltol:
  5044                           	callstack 26
  5045   0042BC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5046   0042BE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5047   0042C0  6E0A               	movwf	___fltol@exp1^0,c
  5048   0042C2  500A               	movf	___fltol@exp1^0,w,c
  5049   0042C4  A4D8               	btfss	status,2,c
  5050   0042C6  EF67  F021         	goto	u3451
  5051   0042CA  EF69  F021         	goto	u3450
  5052   0042CE                     u3451:
  5053   0042CE  EF73  F021         	goto	l3448
  5054   0042D2                     u3450:
  5055   0042D2                     l3444:
  5056   0042D2  0E00               	movlw	0
  5057   0042D4  6E01               	movwf	?___fltol^0,c
  5058   0042D6  0E00               	movlw	0
  5059   0042D8  6E02               	movwf	(?___fltol+1)^0,c
  5060   0042DA  0E00               	movlw	0
  5061   0042DC  6E03               	movwf	(?___fltol+2)^0,c
  5062   0042DE  0E00               	movlw	0
  5063   0042E0  6E04               	movwf	(?___fltol+3)^0,c
  5064   0042E2  EFE0  F021         	goto	l896
  5065   0042E6                     l3448:
  5066   0042E6  C001  F005         	movff	___fltol@f1,??___fltol
  5067   0042EA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5068   0042EE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5069   0042F2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5070   0042F6  0E20               	movlw	32
  5071   0042F8  EF83  F021         	goto	u3460
  5072   0042FC                     u3465:
  5073   0042FC  90D8               	bcf	status,0,c
  5074   0042FE  3208               	rrcf	(??___fltol+3)^0,f,c
  5075   004300  3207               	rrcf	(??___fltol+2)^0,f,c
  5076   004302  3206               	rrcf	(??___fltol+1)^0,f,c
  5077   004304  3205               	rrcf	??___fltol^0,f,c
  5078   004306                     u3460:
  5079   004306  2EE8               	decfsz	wreg,f,c
  5080   004308  EF7E  F021         	goto	u3465
  5081   00430C  5005               	movf	??___fltol^0,w,c
  5082   00430E  6E09               	movwf	___fltol@sign1^0,c
  5083   004310  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5084   004312  0EFF               	movlw	255
  5085   004314  1601               	andwf	___fltol@f1^0,f,c
  5086   004316  0EFF               	movlw	255
  5087   004318  1602               	andwf	(___fltol@f1+1)^0,f,c
  5088   00431A  0EFF               	movlw	255
  5089   00431C  1603               	andwf	(___fltol@f1+2)^0,f,c
  5090   00431E  0E00               	movlw	0
  5091   004320  1604               	andwf	(___fltol@f1+3)^0,f,c
  5092   004322  0E96               	movlw	150
  5093   004324  5E0A               	subwf	___fltol@exp1^0,f,c
  5094   004326  BE0A               	btfsc	___fltol@exp1^0,7,c
  5095   004328  EF9A  F021         	goto	u3470
  5096   00432C  EF98  F021         	goto	u3471
  5097   004330                     u3471:
  5098   004330  EFB0  F021         	goto	l3468
  5099   004334                     u3470:
  5100   004334  500A               	movf	___fltol@exp1^0,w,c
  5101   004336  0A80               	xorlw	128
  5102   004338  0F97               	addlw	151
  5103   00433A  B0D8               	btfsc	status,0,c
  5104   00433C  EFA2  F021         	goto	u3481
  5105   004340  EFA4  F021         	goto	u3480
  5106   004344                     u3481:
  5107   004344  EFA6  F021         	goto	l3464
  5108   004348                     u3480:
  5109   004348  EF69  F021         	goto	l3444
  5110   00434C                     l3464:
  5111   00434C  90D8               	bcf	status,0,c
  5112   00434E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5113   004350  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5114   004352  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5115   004354  3201               	rrcf	___fltol@f1^0,f,c
  5116   004356  3E0A               	incfsz	___fltol@exp1^0,f,c
  5117   004358  EFA6  F021         	goto	l3464
  5118   00435C  EFC8  F021         	goto	l3478
  5119   004360                     l3468:
  5120   004360  0E1F               	movlw	31
  5121   004362  640A               	cpfsgt	___fltol@exp1^0,c
  5122   004364  EFB6  F021         	goto	u3491
  5123   004368  EFB8  F021         	goto	u3490
  5124   00436C                     u3491:
  5125   00436C  EFC0  F021         	goto	l3476
  5126   004370                     u3490:
  5127   004370  EF69  F021         	goto	l3444
  5128   004374                     l3474:
  5129   004374  90D8               	bcf	status,0,c
  5130   004376  3601               	rlcf	___fltol@f1^0,f,c
  5131   004378  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5132   00437A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5133   00437C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5134   00437E  060A               	decf	___fltol@exp1^0,f,c
  5135   004380                     l3476:
  5136   004380  500A               	movf	___fltol@exp1^0,w,c
  5137   004382  A4D8               	btfss	status,2,c
  5138   004384  EFC6  F021         	goto	u3501
  5139   004388  EFC8  F021         	goto	u3500
  5140   00438C                     u3501:
  5141   00438C  EFBA  F021         	goto	l3474
  5142   004390                     u3500:
  5143   004390                     l3478:
  5144   004390  5009               	movf	___fltol@sign1^0,w,c
  5145   004392  B4D8               	btfsc	status,2,c
  5146   004394  EFCE  F021         	goto	u3511
  5147   004398  EFD0  F021         	goto	u3510
  5148   00439C                     u3511:
  5149   00439C  EFD8  F021         	goto	l3482
  5150   0043A0                     u3510:
  5151   0043A0  1E04               	comf	(___fltol@f1+3)^0,f,c
  5152   0043A2  1E03               	comf	(___fltol@f1+2)^0,f,c
  5153   0043A4  1E02               	comf	(___fltol@f1+1)^0,f,c
  5154   0043A6  6C01               	negf	___fltol@f1^0,c
  5155   0043A8  0E00               	movlw	0
  5156   0043AA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5157   0043AC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5158   0043AE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5159   0043B0                     l3482:
  5160   0043B0  C001  F001         	movff	___fltol@f1,?___fltol
  5161   0043B4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5162   0043B8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5163   0043BC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5164   0043C0                     l896:
  5165   0043C0  0012               	return		;funcret
  5166   0043C2                     __end_of___fltol:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function ___flsub *****************
  5170 ;; Defined at:
  5171 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  b               4   25[COMRAM] long 
  5174 ;;  a               4   29[COMRAM] long 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  4   25[COMRAM] long 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5186 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5189 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5190 ;;Total ram usage:        8 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; Hardware stack levels required when called: 1
  5193 ;; This function calls:
  5194 ;;		___fladd
  5195 ;; This function is called by:
  5196 ;;		_custom_floatmodulo
  5197 ;;		_RGB_to_HSV
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text21
  5202   004A52                     __ptext21:
  5203                           	callstack 0
  5204   004A52                     ___flsub:
  5205                           	callstack 25
  5206   004A52  0E00               	movlw	0
  5207   004A54  1A1E               	xorwf	___flsub@a^0,f,c
  5208   004A56  0E00               	movlw	0
  5209   004A58  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5210   004A5A  0E00               	movlw	0
  5211   004A5C  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5212   004A5E  0E80               	movlw	128
  5213   004A60  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5214   004A62  C01A  F001         	movff	___flsub@b,___fladd@b
  5215   004A66  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5216   004A6A  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5217   004A6E  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5218   004A72  C01E  F005         	movff	___flsub@a,___fladd@a
  5219   004A76  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5220   004A7A  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5221   004A7E  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5222   004A82  EC11  F012         	call	___fladd	;wreg free
  5223   004A86  C001  F01A         	movff	?___fladd,?___flsub
  5224   004A8A  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5225   004A8E  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5226   004A92  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5227   004A96  0012               	return		;funcret
  5228   004A98                     __end_of___flsub:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function ___fladd *****************
  5232 ;; Defined at:
  5233 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  b               4    0[COMRAM] long 
  5236 ;;  a               4    4[COMRAM] long 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  grs             1   15[COMRAM] unsigned char 
  5239 ;;  bexp            1   14[COMRAM] unsigned char 
  5240 ;;  aexp            1   13[COMRAM] unsigned char 
  5241 ;;  signs           1   12[COMRAM] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  4    0[COMRAM] unsigned char 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;Total ram usage:       16 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_RGB_to_HSV
  5261 ;;		___flsub
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text22
  5266   002422                     __ptext22:
  5267                           	callstack 0
  5268   002422                     ___fladd:
  5269                           	callstack 25
  5270   002422  5004               	movf	(___fladd@b+3)^0,w,c
  5271   002424  0B80               	andlw	128
  5272   002426  6E0D               	movwf	___fladd@signs^0,c
  5273   002428  5004               	movf	(___fladd@b+3)^0,w,c
  5274   00242A  2404               	addwf	(___fladd@b+3)^0,w,c
  5275   00242C  6E0F               	movwf	___fladd@bexp^0,c
  5276   00242E  AE03               	btfss	(___fladd@b+2)^0,7,c
  5277   002430  EF1C  F012         	goto	u2591
  5278   002434  EF1E  F012         	goto	u2590
  5279   002438                     u2591:
  5280   002438  EF1F  F012         	goto	l2952
  5281   00243C                     u2590:
  5282   00243C  800F               	bsf	___fladd@bexp^0,0,c
  5283   00243E                     l2952:
  5284   00243E  500F               	movf	___fladd@bexp^0,w,c
  5285   002440  B4D8               	btfsc	status,2,c
  5286   002442  EF25  F012         	goto	u2601
  5287   002446  EF27  F012         	goto	u2600
  5288   00244A                     u2601:
  5289   00244A  EF3C  F012         	goto	l2962
  5290   00244E                     u2600:
  5291   00244E  280F               	incf	___fladd@bexp^0,w,c
  5292   002450  A4D8               	btfss	status,2,c
  5293   002452  EF2D  F012         	goto	u2611
  5294   002456  EF2F  F012         	goto	u2610
  5295   00245A                     u2611:
  5296   00245A  EF37  F012         	goto	l2958
  5297   00245E                     u2610:
  5298   00245E  0E00               	movlw	0
  5299   002460  6E01               	movwf	___fladd@b^0,c
  5300   002462  0E00               	movlw	0
  5301   002464  6E02               	movwf	(___fladd@b+1)^0,c
  5302   002466  0E00               	movlw	0
  5303   002468  6E03               	movwf	(___fladd@b+2)^0,c
  5304   00246A  0E00               	movlw	0
  5305   00246C  6E04               	movwf	(___fladd@b+3)^0,c
  5306   00246E                     l2958:
  5307   00246E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5308   002470  0E00               	movlw	0
  5309   002472  6E04               	movwf	(___fladd@b+3)^0,c
  5310   002474  EF44  F012         	goto	l2964
  5311   002478                     l2962:
  5312   002478  0E00               	movlw	0
  5313   00247A  6E01               	movwf	___fladd@b^0,c
  5314   00247C  0E00               	movlw	0
  5315   00247E  6E02               	movwf	(___fladd@b+1)^0,c
  5316   002480  0E00               	movlw	0
  5317   002482  6E03               	movwf	(___fladd@b+2)^0,c
  5318   002484  0E00               	movlw	0
  5319   002486  6E04               	movwf	(___fladd@b+3)^0,c
  5320   002488                     l2964:
  5321   002488  5008               	movf	(___fladd@a+3)^0,w,c
  5322   00248A  0B80               	andlw	128
  5323   00248C  6E0E               	movwf	___fladd@aexp^0,c
  5324   00248E  500D               	movf	___fladd@signs^0,w,c
  5325   002490  180E               	xorwf	___fladd@aexp^0,w,c
  5326   002492  B4D8               	btfsc	status,2,c
  5327   002494  EF4E  F012         	goto	u2621
  5328   002498  EF50  F012         	goto	u2620
  5329   00249C                     u2621:
  5330   00249C  EF51  F012         	goto	l2970
  5331   0024A0                     u2620:
  5332   0024A0  8C0D               	bsf	___fladd@signs^0,6,c
  5333   0024A2                     l2970:
  5334   0024A2  5008               	movf	(___fladd@a+3)^0,w,c
  5335   0024A4  2408               	addwf	(___fladd@a+3)^0,w,c
  5336   0024A6  6E0E               	movwf	___fladd@aexp^0,c
  5337   0024A8  AE07               	btfss	(___fladd@a+2)^0,7,c
  5338   0024AA  EF59  F012         	goto	u2631
  5339   0024AE  EF5B  F012         	goto	u2630
  5340   0024B2                     u2631:
  5341   0024B2  EF5C  F012         	goto	l2976
  5342   0024B6                     u2630:
  5343   0024B6  800E               	bsf	___fladd@aexp^0,0,c
  5344   0024B8                     l2976:
  5345   0024B8  500E               	movf	___fladd@aexp^0,w,c
  5346   0024BA  B4D8               	btfsc	status,2,c
  5347   0024BC  EF62  F012         	goto	u2641
  5348   0024C0  EF64  F012         	goto	u2640
  5349   0024C4                     u2641:
  5350   0024C4  EF79  F012         	goto	l2986
  5351   0024C8                     u2640:
  5352   0024C8  280E               	incf	___fladd@aexp^0,w,c
  5353   0024CA  A4D8               	btfss	status,2,c
  5354   0024CC  EF6A  F012         	goto	u2651
  5355   0024D0  EF6C  F012         	goto	u2650
  5356   0024D4                     u2651:
  5357   0024D4  EF74  F012         	goto	l2982
  5358   0024D8                     u2650:
  5359   0024D8  0E00               	movlw	0
  5360   0024DA  6E05               	movwf	___fladd@a^0,c
  5361   0024DC  0E00               	movlw	0
  5362   0024DE  6E06               	movwf	(___fladd@a+1)^0,c
  5363   0024E0  0E00               	movlw	0
  5364   0024E2  6E07               	movwf	(___fladd@a+2)^0,c
  5365   0024E4  0E00               	movlw	0
  5366   0024E6  6E08               	movwf	(___fladd@a+3)^0,c
  5367   0024E8                     l2982:
  5368   0024E8  8E07               	bsf	(___fladd@a+2)^0,7,c
  5369   0024EA  0E00               	movlw	0
  5370   0024EC  6E08               	movwf	(___fladd@a+3)^0,c
  5371   0024EE  EF81  F012         	goto	l2988
  5372   0024F2                     l2986:
  5373   0024F2  0E00               	movlw	0
  5374   0024F4  6E05               	movwf	___fladd@a^0,c
  5375   0024F6  0E00               	movlw	0
  5376   0024F8  6E06               	movwf	(___fladd@a+1)^0,c
  5377   0024FA  0E00               	movlw	0
  5378   0024FC  6E07               	movwf	(___fladd@a+2)^0,c
  5379   0024FE  0E00               	movlw	0
  5380   002500  6E08               	movwf	(___fladd@a+3)^0,c
  5381   002502                     l2988:
  5382   002502  500F               	movf	___fladd@bexp^0,w,c
  5383   002504  5C0E               	subwf	___fladd@aexp^0,w,c
  5384   002506  B0D8               	btfsc	status,0,c
  5385   002508  EF88  F012         	goto	u2661
  5386   00250C  EF8A  F012         	goto	u2660
  5387   002510                     u2661:
  5388   002510  EFB1  F012         	goto	l3024
  5389   002514                     u2660:
  5390   002514  AC0D               	btfss	___fladd@signs^0,6,c
  5391   002516  EF8F  F012         	goto	u2671
  5392   00251A  EF91  F012         	goto	u2670
  5393   00251E                     u2671:
  5394   00251E  EF93  F012         	goto	l2994
  5395   002522                     u2670:
  5396   002522  0E80               	movlw	128
  5397   002524  1A0D               	xorwf	___fladd@signs^0,f,c
  5398   002526                     l2994:
  5399   002526  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5400   00252A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5401   00252E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5402   002532  C001  F010         	movff	___fladd@b,___fladd@grs
  5403   002536  C005  F001         	movff	___fladd@a,___fladd@b
  5404   00253A  C010  F005         	movff	___fladd@grs,___fladd@a
  5405   00253E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5406   002542  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5407   002546  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5408   00254A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5409   00254E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5410   002552  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5411   002556  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5412   00255A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5413   00255E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5414   002562                     l3024:
  5415   002562  0E00               	movlw	0
  5416   002564  6E10               	movwf	___fladd@grs^0,c
  5417   002566  500F               	movf	___fladd@bexp^0,w,c
  5418   002568  C00E  F009         	movff	___fladd@aexp,??___fladd
  5419   00256C  6A0A               	clrf	(??___fladd+1)^0,c
  5420   00256E  5E09               	subwf	??___fladd^0,f,c
  5421   002570  0E00               	movlw	0
  5422   002572  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5423   002574  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5424   002576  EFC6  F012         	goto	u2681
  5425   00257A  500A               	movf	(??___fladd+1)^0,w,c
  5426   00257C  E109               	bnz	u2680
  5427   00257E  0E1A               	movlw	26
  5428   002580  5C09               	subwf	??___fladd^0,w,c
  5429   002582  A0D8               	btfss	status,0,c
  5430   002584  EFC6  F012         	goto	u2681
  5431   002588  EFC8  F012         	goto	u2680
  5432   00258C                     u2681:
  5433   00258C  EFFF  F012         	goto	l1128
  5434   002590                     u2680:
  5435   002590  5001               	movf	___fladd@b^0,w,c
  5436   002592  1002               	iorwf	(___fladd@b+1)^0,w,c
  5437   002594  1003               	iorwf	(___fladd@b+2)^0,w,c
  5438   002596  1004               	iorwf	(___fladd@b+3)^0,w,c
  5439   002598  A4D8               	btfss	status,2,c
  5440   00259A  EFD1  F012         	goto	u2691
  5441   00259E  EFD4  F012         	goto	u2690
  5442   0025A2                     u2691:
  5443   0025A2  0E01               	movlw	1
  5444   0025A4  EFD5  F012         	goto	u2700
  5445   0025A8                     u2690:
  5446   0025A8  0E00               	movlw	0
  5447   0025AA                     u2700:
  5448   0025AA  6E10               	movwf	___fladd@grs^0,c
  5449   0025AC  0E00               	movlw	0
  5450   0025AE  6E01               	movwf	___fladd@b^0,c
  5451   0025B0  0E00               	movlw	0
  5452   0025B2  6E02               	movwf	(___fladd@b+1)^0,c
  5453   0025B4  0E00               	movlw	0
  5454   0025B6  6E03               	movwf	(___fladd@b+2)^0,c
  5455   0025B8  0E00               	movlw	0
  5456   0025BA  6E04               	movwf	(___fladd@b+3)^0,c
  5457   0025BC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5458   0025C0  EF08  F013         	goto	l1127
  5459   0025C4                     l1129:
  5460   0025C4  A010               	btfss	___fladd@grs^0,0,c
  5461   0025C6  EFE7  F012         	goto	u2711
  5462   0025CA  EFE9  F012         	goto	u2710
  5463   0025CE                     u2711:
  5464   0025CE  EFEF  F012         	goto	l3036
  5465   0025D2                     u2710:
  5466   0025D2  90D8               	bcf	status,0,c
  5467   0025D4  3010               	rrcf	___fladd@grs^0,w,c
  5468   0025D6  0901               	iorlw	1
  5469   0025D8  6E10               	movwf	___fladd@grs^0,c
  5470   0025DA  EFF1  F012         	goto	l3038
  5471   0025DE                     l3036:
  5472   0025DE  90D8               	bcf	status,0,c
  5473   0025E0  3210               	rrcf	___fladd@grs^0,f,c
  5474   0025E2                     l3038:
  5475   0025E2  A001               	btfss	___fladd@b^0,0,c
  5476   0025E4  EFF6  F012         	goto	u2721
  5477   0025E8  EFF8  F012         	goto	u2720
  5478   0025EC                     u2721:
  5479   0025EC  EFF9  F012         	goto	l3042
  5480   0025F0                     u2720:
  5481   0025F0  8E10               	bsf	___fladd@grs^0,7,c
  5482   0025F2                     l3042:
  5483   0025F2  3404               	rlcf	(___fladd@b+3)^0,w,c
  5484   0025F4  3204               	rrcf	(___fladd@b+3)^0,f,c
  5485   0025F6  3203               	rrcf	(___fladd@b+2)^0,f,c
  5486   0025F8  3202               	rrcf	(___fladd@b+1)^0,f,c
  5487   0025FA  3201               	rrcf	___fladd@b^0,f,c
  5488   0025FC  2A0F               	incf	___fladd@bexp^0,f,c
  5489   0025FE                     l1128:
  5490   0025FE  500E               	movf	___fladd@aexp^0,w,c
  5491   002600  5C0F               	subwf	___fladd@bexp^0,w,c
  5492   002602  A0D8               	btfss	status,0,c
  5493   002604  EF06  F013         	goto	u2731
  5494   002608  EF08  F013         	goto	u2730
  5495   00260C                     u2731:
  5496   00260C  EFE2  F012         	goto	l1129
  5497   002610                     u2730:
  5498   002610                     l1127:
  5499   002610  BC0D               	btfsc	___fladd@signs^0,6,c
  5500   002612  EF0D  F013         	goto	u2741
  5501   002616  EF0F  F013         	goto	u2740
  5502   00261A                     u2741:
  5503   00261A  EF4F  F013         	goto	l3070
  5504   00261E                     u2740:
  5505   00261E  500F               	movf	___fladd@bexp^0,w,c
  5506   002620  A4D8               	btfss	status,2,c
  5507   002622  EF15  F013         	goto	u2751
  5508   002626  EF17  F013         	goto	u2750
  5509   00262A                     u2751:
  5510   00262A  EF21  F013         	goto	l3052
  5511   00262E                     u2750:
  5512   00262E  0E00               	movlw	0
  5513   002630  6E01               	movwf	?___fladd^0,c
  5514   002632  0E00               	movlw	0
  5515   002634  6E02               	movwf	(?___fladd+1)^0,c
  5516   002636  0E00               	movlw	0
  5517   002638  6E03               	movwf	(?___fladd+2)^0,c
  5518   00263A  0E00               	movlw	0
  5519   00263C  6E04               	movwf	(?___fladd+3)^0,c
  5520   00263E  EF70  F014         	goto	l1136
  5521   002642                     l3052:
  5522   002642  5005               	movf	___fladd@a^0,w,c
  5523   002644  2601               	addwf	___fladd@b^0,f,c
  5524   002646  5006               	movf	(___fladd@a+1)^0,w,c
  5525   002648  2202               	addwfc	(___fladd@b+1)^0,f,c
  5526   00264A  5007               	movf	(___fladd@a+2)^0,w,c
  5527   00264C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5528   00264E  5008               	movf	(___fladd@a+3)^0,w,c
  5529   002650  2204               	addwfc	(___fladd@b+3)^0,f,c
  5530   002652  A004               	btfss	(___fladd@b+3)^0,0,c
  5531   002654  EF2E  F013         	goto	u2761
  5532   002658  EF30  F013         	goto	u2760
  5533   00265C                     u2761:
  5534   00265C  EFDC  F013         	goto	l3106
  5535   002660                     u2760:
  5536   002660  A010               	btfss	___fladd@grs^0,0,c
  5537   002662  EF35  F013         	goto	u2771
  5538   002666  EF37  F013         	goto	u2770
  5539   00266A                     u2771:
  5540   00266A  EF3D  F013         	goto	l3060
  5541   00266E                     u2770:
  5542   00266E  90D8               	bcf	status,0,c
  5543   002670  3010               	rrcf	___fladd@grs^0,w,c
  5544   002672  0901               	iorlw	1
  5545   002674  6E10               	movwf	___fladd@grs^0,c
  5546   002676  EF3F  F013         	goto	l3062
  5547   00267A                     l3060:
  5548   00267A  90D8               	bcf	status,0,c
  5549   00267C  3210               	rrcf	___fladd@grs^0,f,c
  5550   00267E                     l3062:
  5551   00267E  A001               	btfss	___fladd@b^0,0,c
  5552   002680  EF44  F013         	goto	u2781
  5553   002684  EF46  F013         	goto	u2780
  5554   002688                     u2781:
  5555   002688  EF47  F013         	goto	l3066
  5556   00268C                     u2780:
  5557   00268C  8E10               	bsf	___fladd@grs^0,7,c
  5558   00268E                     l3066:
  5559   00268E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5560   002690  3204               	rrcf	(___fladd@b+3)^0,f,c
  5561   002692  3203               	rrcf	(___fladd@b+2)^0,f,c
  5562   002694  3202               	rrcf	(___fladd@b+1)^0,f,c
  5563   002696  3201               	rrcf	___fladd@b^0,f,c
  5564   002698  2A0F               	incf	___fladd@bexp^0,f,c
  5565   00269A  EFDC  F013         	goto	l3106
  5566   00269E                     l3070:
  5567   00269E  5005               	movf	___fladd@a^0,w,c
  5568   0026A0  5C01               	subwf	___fladd@b^0,w,c
  5569   0026A2  5006               	movf	(___fladd@a+1)^0,w,c
  5570   0026A4  5802               	subwfb	(___fladd@b+1)^0,w,c
  5571   0026A6  5007               	movf	(___fladd@a+2)^0,w,c
  5572   0026A8  5803               	subwfb	(___fladd@b+2)^0,w,c
  5573   0026AA  5004               	movf	(___fladd@b+3)^0,w,c
  5574   0026AC  0A80               	xorlw	128
  5575   0026AE  6E09               	movwf	??___fladd^0,c
  5576   0026B0  5008               	movf	(___fladd@a+3)^0,w,c
  5577   0026B2  0A80               	xorlw	128
  5578   0026B4  5809               	subwfb	??___fladd^0,w,c
  5579   0026B6  B0D8               	btfsc	status,0,c
  5580   0026B8  EF60  F013         	goto	u2791
  5581   0026BC  EF62  F013         	goto	u2790
  5582   0026C0                     u2791:
  5583   0026C0  EF8D  F013         	goto	l3080
  5584   0026C4                     u2790:
  5585   0026C4  5001               	movf	___fladd@b^0,w,c
  5586   0026C6  5C05               	subwf	___fladd@a^0,w,c
  5587   0026C8  6E09               	movwf	??___fladd^0,c
  5588   0026CA  5002               	movf	(___fladd@b+1)^0,w,c
  5589   0026CC  5806               	subwfb	(___fladd@a+1)^0,w,c
  5590   0026CE  6E0A               	movwf	(??___fladd+1)^0,c
  5591   0026D0  5003               	movf	(___fladd@b+2)^0,w,c
  5592   0026D2  5807               	subwfb	(___fladd@a+2)^0,w,c
  5593   0026D4  6E0B               	movwf	(??___fladd+2)^0,c
  5594   0026D6  5004               	movf	(___fladd@b+3)^0,w,c
  5595   0026D8  5808               	subwfb	(___fladd@a+3)^0,w,c
  5596   0026DA  6E0C               	movwf	(??___fladd+3)^0,c
  5597   0026DC  0EFF               	movlw	255
  5598   0026DE  2409               	addwf	??___fladd^0,w,c
  5599   0026E0  6E01               	movwf	___fladd@b^0,c
  5600   0026E2  0EFF               	movlw	255
  5601   0026E4  200A               	addwfc	(??___fladd+1)^0,w,c
  5602   0026E6  6E02               	movwf	(___fladd@b+1)^0,c
  5603   0026E8  0EFF               	movlw	255
  5604   0026EA  200B               	addwfc	(??___fladd+2)^0,w,c
  5605   0026EC  6E03               	movwf	(___fladd@b+2)^0,c
  5606   0026EE  0EFF               	movlw	255
  5607   0026F0  200C               	addwfc	(??___fladd+3)^0,w,c
  5608   0026F2  6E04               	movwf	(___fladd@b+3)^0,c
  5609   0026F4  0E80               	movlw	128
  5610   0026F6  1A0D               	xorwf	___fladd@signs^0,f,c
  5611   0026F8  6C10               	negf	___fladd@grs^0,c
  5612   0026FA  5010               	movf	___fladd@grs^0,w,c
  5613   0026FC  A4D8               	btfss	status,2,c
  5614   0026FE  EF83  F013         	goto	u2801
  5615   002702  EF85  F013         	goto	u2800
  5616   002706                     u2801:
  5617   002706  EF95  F013         	goto	l1144
  5618   00270A                     u2800:
  5619   00270A  0E01               	movlw	1
  5620   00270C  2601               	addwf	___fladd@b^0,f,c
  5621   00270E  0E00               	movlw	0
  5622   002710  2202               	addwfc	(___fladd@b+1)^0,f,c
  5623   002712  2203               	addwfc	(___fladd@b+2)^0,f,c
  5624   002714  2204               	addwfc	(___fladd@b+3)^0,f,c
  5625   002716  EF95  F013         	goto	l1144
  5626   00271A                     l3080:
  5627   00271A  5005               	movf	___fladd@a^0,w,c
  5628   00271C  5E01               	subwf	___fladd@b^0,f,c
  5629   00271E  5006               	movf	(___fladd@a+1)^0,w,c
  5630   002720  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5631   002722  5007               	movf	(___fladd@a+2)^0,w,c
  5632   002724  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5633   002726  5008               	movf	(___fladd@a+3)^0,w,c
  5634   002728  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5635   00272A                     l1144:
  5636   00272A  5001               	movf	___fladd@b^0,w,c
  5637   00272C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5638   00272E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5639   002730  1004               	iorwf	(___fladd@b+3)^0,w,c
  5640   002732  A4D8               	btfss	status,2,c
  5641   002734  EF9E  F013         	goto	u2811
  5642   002738  EFA0  F013         	goto	u2810
  5643   00273C                     u2811:
  5644   00273C  EFD5  F013         	goto	l3104
  5645   002740                     u2810:
  5646   002740  5010               	movf	___fladd@grs^0,w,c
  5647   002742  A4D8               	btfss	status,2,c
  5648   002744  EFA6  F013         	goto	u2821
  5649   002748  EFA8  F013         	goto	u2820
  5650   00274C                     u2821:
  5651   00274C  EFD5  F013         	goto	l3104
  5652   002750                     u2820:
  5653   002750  0E00               	movlw	0
  5654   002752  6E01               	movwf	?___fladd^0,c
  5655   002754  0E00               	movlw	0
  5656   002756  6E02               	movwf	(?___fladd+1)^0,c
  5657   002758  0E00               	movlw	0
  5658   00275A  6E03               	movwf	(?___fladd+2)^0,c
  5659   00275C  0E00               	movlw	0
  5660   00275E  6E04               	movwf	(?___fladd+3)^0,c
  5661   002760  EF70  F014         	goto	l1136
  5662   002764                     l3088:
  5663   002764  90D8               	bcf	status,0,c
  5664   002766  3601               	rlcf	___fladd@b^0,f,c
  5665   002768  3602               	rlcf	(___fladd@b+1)^0,f,c
  5666   00276A  3603               	rlcf	(___fladd@b+2)^0,f,c
  5667   00276C  3604               	rlcf	(___fladd@b+3)^0,f,c
  5668   00276E  AE10               	btfss	___fladd@grs^0,7,c
  5669   002770  EFBC  F013         	goto	u2831
  5670   002774  EFBE  F013         	goto	u2830
  5671   002778                     u2831:
  5672   002778  EFBF  F013         	goto	l3094
  5673   00277C                     u2830:
  5674   00277C  8001               	bsf	___fladd@b^0,0,c
  5675   00277E                     l3094:
  5676   00277E  A010               	btfss	___fladd@grs^0,0,c
  5677   002780  EFC4  F013         	goto	u2841
  5678   002784  EFC6  F013         	goto	u2840
  5679   002788                     u2841:
  5680   002788  EFCA  F013         	goto	l3098
  5681   00278C                     u2840:
  5682   00278C  80D8               	bsf	status,0,c
  5683   00278E  3610               	rlcf	___fladd@grs^0,f,c
  5684   002790  EFCC  F013         	goto	l3100
  5685   002794                     l3098:
  5686   002794  90D8               	bcf	status,0,c
  5687   002796  3610               	rlcf	___fladd@grs^0,f,c
  5688   002798                     l3100:
  5689   002798  500F               	movf	___fladd@bexp^0,w,c
  5690   00279A  B4D8               	btfsc	status,2,c
  5691   00279C  EFD2  F013         	goto	u2851
  5692   0027A0  EFD4  F013         	goto	u2850
  5693   0027A4                     u2851:
  5694   0027A4  EFD5  F013         	goto	l3104
  5695   0027A8                     u2850:
  5696   0027A8  060F               	decf	___fladd@bexp^0,f,c
  5697   0027AA                     l3104:
  5698   0027AA  AE03               	btfss	(___fladd@b+2)^0,7,c
  5699   0027AC  EFDA  F013         	goto	u2861
  5700   0027B0  EFDC  F013         	goto	u2860
  5701   0027B4                     u2861:
  5702   0027B4  EFB2  F013         	goto	l3088
  5703   0027B8                     u2860:
  5704   0027B8                     l3106:
  5705   0027B8  0E00               	movlw	0
  5706   0027BA  6E0E               	movwf	___fladd@aexp^0,c
  5707   0027BC  AE10               	btfss	___fladd@grs^0,7,c
  5708   0027BE  EFE3  F013         	goto	u2871
  5709   0027C2  EFE5  F013         	goto	u2870
  5710   0027C6                     u2871:
  5711   0027C6  EFFD  F013         	goto	l1153
  5712   0027CA                     u2870:
  5713   0027CA  C010  F009         	movff	___fladd@grs,??___fladd
  5714   0027CE  0E7F               	movlw	127
  5715   0027D0  1609               	andwf	??___fladd^0,f,c
  5716   0027D2  B4D8               	btfsc	status,2,c
  5717   0027D4  EFEE  F013         	goto	u2881
  5718   0027D8  EFF0  F013         	goto	u2880
  5719   0027DC                     u2881:
  5720   0027DC  EFF4  F013         	goto	l1154
  5721   0027E0                     u2880:
  5722   0027E0                     l3112:
  5723   0027E0  0E01               	movlw	1
  5724   0027E2  6E0E               	movwf	___fladd@aexp^0,c
  5725   0027E4  EFFD  F013         	goto	l1153
  5726   0027E8                     l1154:
  5727   0027E8  A001               	btfss	___fladd@b^0,0,c
  5728   0027EA  EFF9  F013         	goto	u2891
  5729   0027EE  EFFB  F013         	goto	u2890
  5730   0027F2                     u2891:
  5731   0027F2  EFFD  F013         	goto	l1153
  5732   0027F6                     u2890:
  5733   0027F6  EFF0  F013         	goto	l3112
  5734   0027FA                     l1153:
  5735   0027FA  500E               	movf	___fladd@aexp^0,w,c
  5736   0027FC  B4D8               	btfsc	status,2,c
  5737   0027FE  EF03  F014         	goto	u2901
  5738   002802  EF05  F014         	goto	u2900
  5739   002806                     u2901:
  5740   002806  EF30  F014         	goto	l3124
  5741   00280A                     u2900:
  5742   00280A  0E01               	movlw	1
  5743   00280C  2601               	addwf	___fladd@b^0,f,c
  5744   00280E  0E00               	movlw	0
  5745   002810  2202               	addwfc	(___fladd@b+1)^0,f,c
  5746   002812  2203               	addwfc	(___fladd@b+2)^0,f,c
  5747   002814  2204               	addwfc	(___fladd@b+3)^0,f,c
  5748   002816  A004               	btfss	(___fladd@b+3)^0,0,c
  5749   002818  EF10  F014         	goto	u2911
  5750   00281C  EF12  F014         	goto	u2910
  5751   002820                     u2911:
  5752   002820  EF30  F014         	goto	l3124
  5753   002824                     u2910:
  5754   002824  C001  F009         	movff	___fladd@b,??___fladd
  5755   002828  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5756   00282C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5757   002830  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5758   002834  340C               	rlcf	(??___fladd+3)^0,w,c
  5759   002836  320C               	rrcf	(??___fladd+3)^0,f,c
  5760   002838  320B               	rrcf	(??___fladd+2)^0,f,c
  5761   00283A  320A               	rrcf	(??___fladd+1)^0,f,c
  5762   00283C  3209               	rrcf	??___fladd^0,f,c
  5763   00283E  C009  F001         	movff	??___fladd,___fladd@b
  5764   002842  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5765   002846  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5766   00284A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5767   00284E  280F               	incf	___fladd@bexp^0,w,c
  5768   002850  B4D8               	btfsc	status,2,c
  5769   002852  EF2D  F014         	goto	u2921
  5770   002856  EF2F  F014         	goto	u2920
  5771   00285A                     u2921:
  5772   00285A  EF30  F014         	goto	l3124
  5773   00285E                     u2920:
  5774   00285E  2A0F               	incf	___fladd@bexp^0,f,c
  5775   002860                     l3124:
  5776   002860  280F               	incf	___fladd@bexp^0,w,c
  5777   002862  B4D8               	btfsc	status,2,c
  5778   002864  EF36  F014         	goto	u2931
  5779   002868  EF38  F014         	goto	u2930
  5780   00286C                     u2931:
  5781   00286C  EF40  F014         	goto	l3128
  5782   002870                     u2930:
  5783   002870  500F               	movf	___fladd@bexp^0,w,c
  5784   002872  A4D8               	btfss	status,2,c
  5785   002874  EF3E  F014         	goto	u2941
  5786   002878  EF40  F014         	goto	u2940
  5787   00287C                     u2941:
  5788   00287C  EF52  F014         	goto	l3132
  5789   002880                     u2940:
  5790   002880                     l3128:
  5791   002880  0E00               	movlw	0
  5792   002882  6E01               	movwf	___fladd@b^0,c
  5793   002884  0E00               	movlw	0
  5794   002886  6E02               	movwf	(___fladd@b+1)^0,c
  5795   002888  0E00               	movlw	0
  5796   00288A  6E03               	movwf	(___fladd@b+2)^0,c
  5797   00288C  0E00               	movlw	0
  5798   00288E  6E04               	movwf	(___fladd@b+3)^0,c
  5799   002890  500F               	movf	___fladd@bexp^0,w,c
  5800   002892  A4D8               	btfss	status,2,c
  5801   002894  EF4E  F014         	goto	u2951
  5802   002898  EF50  F014         	goto	u2950
  5803   00289C                     u2951:
  5804   00289C  EF52  F014         	goto	l3132
  5805   0028A0                     u2950:
  5806   0028A0  0E00               	movlw	0
  5807   0028A2  6E0D               	movwf	___fladd@signs^0,c
  5808   0028A4                     l3132:
  5809   0028A4  A00F               	btfss	___fladd@bexp^0,0,c
  5810   0028A6  EF57  F014         	goto	u2961
  5811   0028AA  EF59  F014         	goto	u2960
  5812   0028AE                     u2961:
  5813   0028AE  EF5C  F014         	goto	l3136
  5814   0028B2                     u2960:
  5815   0028B2  8E03               	bsf	(___fladd@b+2)^0,7,c
  5816   0028B4  EF5D  F014         	goto	l3138
  5817   0028B8                     l3136:
  5818   0028B8  9E03               	bcf	(___fladd@b+2)^0,7,c
  5819   0028BA                     l3138:
  5820   0028BA  90D8               	bcf	status,0,c
  5821   0028BC  300F               	rrcf	___fladd@bexp^0,w,c
  5822   0028BE  6E04               	movwf	(___fladd@b+3)^0,c
  5823   0028C0  AE0D               	btfss	___fladd@signs^0,7,c
  5824   0028C2  EF65  F014         	goto	u2971
  5825   0028C6  EF67  F014         	goto	u2970
  5826   0028CA                     u2971:
  5827   0028CA  EF68  F014         	goto	l3144
  5828   0028CE                     u2970:
  5829   0028CE  8E04               	bsf	(___fladd@b+3)^0,7,c
  5830   0028D0                     l3144:
  5831   0028D0  C001  F001         	movff	___fladd@b,?___fladd
  5832   0028D4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5833   0028D8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5834   0028DC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5835   0028E0                     l1136:
  5836   0028E0  0012               	return		;funcret
  5837   0028E2                     __end_of___fladd:
  5838                           	callstack 0
  5839                           
  5840 ;; *************** function ___flmul *****************
  5841 ;; Defined at:
  5842 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  b               4   58[COMRAM] unsigned char 
  5845 ;;  a               4   62[COMRAM] unsigned char 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  prod            4   77[COMRAM] struct .
  5848 ;;  grs             4   71[COMRAM] unsigned long 
  5849 ;;  temp            2   81[COMRAM] struct .
  5850 ;;  bexp            1   76[COMRAM] unsigned char 
  5851 ;;  aexp            1   75[COMRAM] unsigned char 
  5852 ;;  sign            1   70[COMRAM] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  4   58[COMRAM] unsigned char 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0, prodl, prodh
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5862 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5863 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;Total ram usage:       25 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_custom_floatmodulo
  5872 ;;		_RGB_to_HSV
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text23
  5877   002D64                     __ptext23:
  5878                           	callstack 0
  5879   002D64                     ___flmul:
  5880                           	callstack 26
  5881   002D64  503E               	movf	(___flmul@b+3)^0,w,c
  5882   002D66  0B80               	andlw	128
  5883   002D68  6E47               	movwf	___flmul@sign^0,c
  5884   002D6A  503E               	movf	(___flmul@b+3)^0,w,c
  5885   002D6C  243E               	addwf	(___flmul@b+3)^0,w,c
  5886   002D6E  6E4D               	movwf	___flmul@bexp^0,c
  5887   002D70  AE3D               	btfss	(___flmul@b+2)^0,7,c
  5888   002D72  EFBD  F016         	goto	u3231
  5889   002D76  EFBF  F016         	goto	u3230
  5890   002D7A                     u3231:
  5891   002D7A  EFC0  F016         	goto	l3296
  5892   002D7E                     u3230:
  5893   002D7E  804D               	bsf	___flmul@bexp^0,0,c
  5894   002D80                     l3296:
  5895   002D80  504D               	movf	___flmul@bexp^0,w,c
  5896   002D82  B4D8               	btfsc	status,2,c
  5897   002D84  EFC6  F016         	goto	u3241
  5898   002D88  EFC8  F016         	goto	u3240
  5899   002D8C                     u3241:
  5900   002D8C  EFDB  F016         	goto	l3304
  5901   002D90                     u3240:
  5902   002D90  284D               	incf	___flmul@bexp^0,w,c
  5903   002D92  A4D8               	btfss	status,2,c
  5904   002D94  EFCE  F016         	goto	u3251
  5905   002D98  EFD0  F016         	goto	u3250
  5906   002D9C                     u3251:
  5907   002D9C  EFD8  F016         	goto	l3302
  5908   002DA0                     u3250:
  5909   002DA0  0E00               	movlw	0
  5910   002DA2  6E3B               	movwf	___flmul@b^0,c
  5911   002DA4  0E00               	movlw	0
  5912   002DA6  6E3C               	movwf	(___flmul@b+1)^0,c
  5913   002DA8  0E00               	movlw	0
  5914   002DAA  6E3D               	movwf	(___flmul@b+2)^0,c
  5915   002DAC  0E00               	movlw	0
  5916   002DAE  6E3E               	movwf	(___flmul@b+3)^0,c
  5917   002DB0                     l3302:
  5918   002DB0  8E3D               	bsf	(___flmul@b+2)^0,7,c
  5919   002DB2  EFE3  F016         	goto	l3306
  5920   002DB6                     l3304:
  5921   002DB6  0E00               	movlw	0
  5922   002DB8  6E3B               	movwf	___flmul@b^0,c
  5923   002DBA  0E00               	movlw	0
  5924   002DBC  6E3C               	movwf	(___flmul@b+1)^0,c
  5925   002DBE  0E00               	movlw	0
  5926   002DC0  6E3D               	movwf	(___flmul@b+2)^0,c
  5927   002DC2  0E00               	movlw	0
  5928   002DC4  6E3E               	movwf	(___flmul@b+3)^0,c
  5929   002DC6                     l3306:
  5930   002DC6  5042               	movf	(___flmul@a+3)^0,w,c
  5931   002DC8  0B80               	andlw	128
  5932   002DCA  1A47               	xorwf	___flmul@sign^0,f,c
  5933   002DCC  5042               	movf	(___flmul@a+3)^0,w,c
  5934   002DCE  2442               	addwf	(___flmul@a+3)^0,w,c
  5935   002DD0  6E4C               	movwf	___flmul@aexp^0,c
  5936   002DD2  AE41               	btfss	(___flmul@a+2)^0,7,c
  5937   002DD4  EFEE  F016         	goto	u3261
  5938   002DD8  EFF0  F016         	goto	u3260
  5939   002DDC                     u3261:
  5940   002DDC  EFF1  F016         	goto	l3314
  5941   002DE0                     u3260:
  5942   002DE0  804C               	bsf	___flmul@aexp^0,0,c
  5943   002DE2                     l3314:
  5944   002DE2  504C               	movf	___flmul@aexp^0,w,c
  5945   002DE4  B4D8               	btfsc	status,2,c
  5946   002DE6  EFF7  F016         	goto	u3271
  5947   002DEA  EFF9  F016         	goto	u3270
  5948   002DEE                     u3271:
  5949   002DEE  EF0C  F017         	goto	l3322
  5950   002DF2                     u3270:
  5951   002DF2  284C               	incf	___flmul@aexp^0,w,c
  5952   002DF4  A4D8               	btfss	status,2,c
  5953   002DF6  EFFF  F016         	goto	u3281
  5954   002DFA  EF01  F017         	goto	u3280
  5955   002DFE                     u3281:
  5956   002DFE  EF09  F017         	goto	l3320
  5957   002E02                     u3280:
  5958   002E02  0E00               	movlw	0
  5959   002E04  6E3F               	movwf	___flmul@a^0,c
  5960   002E06  0E00               	movlw	0
  5961   002E08  6E40               	movwf	(___flmul@a+1)^0,c
  5962   002E0A  0E00               	movlw	0
  5963   002E0C  6E41               	movwf	(___flmul@a+2)^0,c
  5964   002E0E  0E00               	movlw	0
  5965   002E10  6E42               	movwf	(___flmul@a+3)^0,c
  5966   002E12                     l3320:
  5967   002E12  8E41               	bsf	(___flmul@a+2)^0,7,c
  5968   002E14  EF14  F017         	goto	l1213
  5969   002E18                     l3322:
  5970   002E18  0E00               	movlw	0
  5971   002E1A  6E3F               	movwf	___flmul@a^0,c
  5972   002E1C  0E00               	movlw	0
  5973   002E1E  6E40               	movwf	(___flmul@a+1)^0,c
  5974   002E20  0E00               	movlw	0
  5975   002E22  6E41               	movwf	(___flmul@a+2)^0,c
  5976   002E24  0E00               	movlw	0
  5977   002E26  6E42               	movwf	(___flmul@a+3)^0,c
  5978   002E28                     l1213:
  5979   002E28  504C               	movf	___flmul@aexp^0,w,c
  5980   002E2A  B4D8               	btfsc	status,2,c
  5981   002E2C  EF1A  F017         	goto	u3291
  5982   002E30  EF1C  F017         	goto	u3290
  5983   002E34                     u3291:
  5984   002E34  EF24  F017         	goto	l3326
  5985   002E38                     u3290:
  5986   002E38  504D               	movf	___flmul@bexp^0,w,c
  5987   002E3A  A4D8               	btfss	status,2,c
  5988   002E3C  EF22  F017         	goto	u3301
  5989   002E40  EF24  F017         	goto	u3300
  5990   002E44                     u3301:
  5991   002E44  EF2E  F017         	goto	l3330
  5992   002E48                     u3300:
  5993   002E48                     l3326:
  5994   002E48  0E00               	movlw	0
  5995   002E4A  6E3B               	movwf	?___flmul^0,c
  5996   002E4C  0E00               	movlw	0
  5997   002E4E  6E3C               	movwf	(?___flmul+1)^0,c
  5998   002E50  0E00               	movlw	0
  5999   002E52  6E3D               	movwf	(?___flmul+2)^0,c
  6000   002E54  0E00               	movlw	0
  6001   002E56  6E3E               	movwf	(?___flmul+3)^0,c
  6002   002E58  EFC6  F018         	goto	l1217
  6003   002E5C                     l3330:
  6004   002E5C  5041               	movf	(___flmul@a+2)^0,w,c
  6005   002E5E  023B               	mulwf	___flmul@b^0,c
  6006   002E60  CFF3 F052          	movff	prodl,___flmul@temp
  6007   002E64  CFF4 F053          	movff	prodh,___flmul@temp+1
  6008   002E68  5052               	movf	___flmul@temp^0,w,c
  6009   002E6A  6E48               	movwf	___flmul@grs^0,c
  6010   002E6C  6A49               	clrf	(___flmul@grs+1)^0,c
  6011   002E6E  6A4A               	clrf	(___flmul@grs+2)^0,c
  6012   002E70  6A4B               	clrf	(___flmul@grs+3)^0,c
  6013   002E72  5053               	movf	(___flmul@temp+1)^0,w,c
  6014   002E74  6E4E               	movwf	___flmul@prod^0,c
  6015   002E76  6A4F               	clrf	(___flmul@prod+1)^0,c
  6016   002E78  6A50               	clrf	(___flmul@prod+2)^0,c
  6017   002E7A  6A51               	clrf	(___flmul@prod+3)^0,c
  6018   002E7C  5040               	movf	(___flmul@a+1)^0,w,c
  6019   002E7E  023C               	mulwf	(___flmul@b+1)^0,c
  6020   002E80  CFF3 F052          	movff	prodl,___flmul@temp
  6021   002E84  CFF4 F053          	movff	prodh,___flmul@temp+1
  6022   002E88  5052               	movf	___flmul@temp^0,w,c
  6023   002E8A  2648               	addwf	___flmul@grs^0,f,c
  6024   002E8C  0E00               	movlw	0
  6025   002E8E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6026   002E90  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6027   002E92  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6028   002E94  5053               	movf	(___flmul@temp+1)^0,w,c
  6029   002E96  264E               	addwf	___flmul@prod^0,f,c
  6030   002E98  0E00               	movlw	0
  6031   002E9A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6032   002E9C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6033   002E9E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6034   002EA0  503F               	movf	___flmul@a^0,w,c
  6035   002EA2  023D               	mulwf	(___flmul@b+2)^0,c
  6036   002EA4  CFF3 F052          	movff	prodl,___flmul@temp
  6037   002EA8  CFF4 F053          	movff	prodh,___flmul@temp+1
  6038   002EAC  5052               	movf	___flmul@temp^0,w,c
  6039   002EAE  2648               	addwf	___flmul@grs^0,f,c
  6040   002EB0  0E00               	movlw	0
  6041   002EB2  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6042   002EB4  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6043   002EB6  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6044   002EB8  5053               	movf	(___flmul@temp+1)^0,w,c
  6045   002EBA  264E               	addwf	___flmul@prod^0,f,c
  6046   002EBC  0E00               	movlw	0
  6047   002EBE  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6048   002EC0  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6049   002EC2  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6050   002EC4  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6051   002EC8  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6052   002ECC  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6053   002ED0  6A48               	clrf	___flmul@grs^0,c
  6054   002ED2  503F               	movf	___flmul@a^0,w,c
  6055   002ED4  023C               	mulwf	(___flmul@b+1)^0,c
  6056   002ED6  CFF3 F052          	movff	prodl,___flmul@temp
  6057   002EDA  CFF4 F053          	movff	prodh,___flmul@temp+1
  6058   002EDE  5052               	movf	___flmul@temp^0,w,c
  6059   002EE0  2648               	addwf	___flmul@grs^0,f,c
  6060   002EE2  5053               	movf	(___flmul@temp+1)^0,w,c
  6061   002EE4  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6062   002EE6  0E00               	movlw	0
  6063   002EE8  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6064   002EEA  0E00               	movlw	0
  6065   002EEC  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6066   002EEE  5040               	movf	(___flmul@a+1)^0,w,c
  6067   002EF0  023B               	mulwf	___flmul@b^0,c
  6068   002EF2  CFF3 F052          	movff	prodl,___flmul@temp
  6069   002EF6  CFF4 F053          	movff	prodh,___flmul@temp+1
  6070   002EFA  5052               	movf	___flmul@temp^0,w,c
  6071   002EFC  2648               	addwf	___flmul@grs^0,f,c
  6072   002EFE  5053               	movf	(___flmul@temp+1)^0,w,c
  6073   002F00  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6074   002F02  0E00               	movlw	0
  6075   002F04  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6076   002F06  0E00               	movlw	0
  6077   002F08  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6078   002F0A  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6079   002F0E  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6080   002F12  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6081   002F16  6A48               	clrf	___flmul@grs^0,c
  6082   002F18  503F               	movf	___flmul@a^0,w,c
  6083   002F1A  023B               	mulwf	___flmul@b^0,c
  6084   002F1C  CFF3 F052          	movff	prodl,___flmul@temp
  6085   002F20  CFF4 F053          	movff	prodh,___flmul@temp+1
  6086   002F24  5052               	movf	___flmul@temp^0,w,c
  6087   002F26  2648               	addwf	___flmul@grs^0,f,c
  6088   002F28  5053               	movf	(___flmul@temp+1)^0,w,c
  6089   002F2A  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6090   002F2C  0E00               	movlw	0
  6091   002F2E  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6092   002F30  0E00               	movlw	0
  6093   002F32  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6094   002F34  5041               	movf	(___flmul@a+2)^0,w,c
  6095   002F36  023C               	mulwf	(___flmul@b+1)^0,c
  6096   002F38  CFF3 F052          	movff	prodl,___flmul@temp
  6097   002F3C  CFF4 F053          	movff	prodh,___flmul@temp+1
  6098   002F40  5052               	movf	___flmul@temp^0,w,c
  6099   002F42  264E               	addwf	___flmul@prod^0,f,c
  6100   002F44  5053               	movf	(___flmul@temp+1)^0,w,c
  6101   002F46  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6102   002F48  0E00               	movlw	0
  6103   002F4A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6104   002F4C  0E00               	movlw	0
  6105   002F4E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6106   002F50  5040               	movf	(___flmul@a+1)^0,w,c
  6107   002F52  023D               	mulwf	(___flmul@b+2)^0,c
  6108   002F54  CFF3 F052          	movff	prodl,___flmul@temp
  6109   002F58  CFF4 F053          	movff	prodh,___flmul@temp+1
  6110   002F5C  5052               	movf	___flmul@temp^0,w,c
  6111   002F5E  264E               	addwf	___flmul@prod^0,f,c
  6112   002F60  5053               	movf	(___flmul@temp+1)^0,w,c
  6113   002F62  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6114   002F64  0E00               	movlw	0
  6115   002F66  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6116   002F68  0E00               	movlw	0
  6117   002F6A  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6118   002F6C  5041               	movf	(___flmul@a+2)^0,w,c
  6119   002F6E  023D               	mulwf	(___flmul@b+2)^0,c
  6120   002F70  CFF3 F052          	movff	prodl,___flmul@temp
  6121   002F74  CFF4 F053          	movff	prodh,___flmul@temp+1
  6122   002F78  5052               	movf	___flmul@temp^0,w,c
  6123   002F7A  6E43               	movwf	??___flmul^0,c
  6124   002F7C  5053               	movf	(___flmul@temp+1)^0,w,c
  6125   002F7E  6E44               	movwf	(??___flmul+1)^0,c
  6126   002F80  6A45               	clrf	(??___flmul+2)^0,c
  6127   002F82  6A46               	clrf	(??___flmul+3)^0,c
  6128   002F84  C045  F046         	movff	??___flmul+2,??___flmul+3
  6129   002F88  C044  F045         	movff	??___flmul+1,??___flmul+2
  6130   002F8C  C043  F044         	movff	??___flmul,??___flmul+1
  6131   002F90  6A43               	clrf	??___flmul^0,c
  6132   002F92  5043               	movf	??___flmul^0,w,c
  6133   002F94  264E               	addwf	___flmul@prod^0,f,c
  6134   002F96  5044               	movf	(??___flmul+1)^0,w,c
  6135   002F98  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6136   002F9A  5045               	movf	(??___flmul+2)^0,w,c
  6137   002F9C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6138   002F9E  5046               	movf	(??___flmul+3)^0,w,c
  6139   002FA0  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6140   002FA2  C048  F043         	movff	___flmul@grs,??___flmul
  6141   002FA6  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  6142   002FAA  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  6143   002FAE  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  6144   002FB2  0E19               	movlw	25
  6145   002FB4  EFE1  F017         	goto	u3310
  6146   002FB8                     u3315:
  6147   002FB8  90D8               	bcf	status,0,c
  6148   002FBA  3246               	rrcf	(??___flmul+3)^0,f,c
  6149   002FBC  3245               	rrcf	(??___flmul+2)^0,f,c
  6150   002FBE  3244               	rrcf	(??___flmul+1)^0,f,c
  6151   002FC0  3243               	rrcf	??___flmul^0,f,c
  6152   002FC2                     u3310:
  6153   002FC2  2EE8               	decfsz	wreg,f,c
  6154   002FC4  EFDC  F017         	goto	u3315
  6155   002FC8  5043               	movf	??___flmul^0,w,c
  6156   002FCA  264E               	addwf	___flmul@prod^0,f,c
  6157   002FCC  5044               	movf	(??___flmul+1)^0,w,c
  6158   002FCE  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6159   002FD0  5045               	movf	(??___flmul+2)^0,w,c
  6160   002FD2  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6161   002FD4  5046               	movf	(??___flmul+3)^0,w,c
  6162   002FD6  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6163   002FD8  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6164   002FDC  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6165   002FE0  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6166   002FE4  6A48               	clrf	___flmul@grs^0,c
  6167   002FE6  504C               	movf	___flmul@aexp^0,w,c
  6168   002FE8  C04D  F043         	movff	___flmul@bexp,??___flmul
  6169   002FEC  6A44               	clrf	(??___flmul+1)^0,c
  6170   002FEE  2643               	addwf	??___flmul^0,f,c
  6171   002FF0  0E00               	movlw	0
  6172   002FF2  2244               	addwfc	(??___flmul+1)^0,f,c
  6173   002FF4  0E82               	movlw	130
  6174   002FF6  2443               	addwf	??___flmul^0,w,c
  6175   002FF8  6E52               	movwf	___flmul@temp^0,c
  6176   002FFA  0EFF               	movlw	255
  6177   002FFC  2044               	addwfc	(??___flmul+1)^0,w,c
  6178   002FFE  6E53               	movwf	(___flmul@temp+1)^0,c
  6179   003000  EF17  F018         	goto	l3378
  6180   003004                     l3372:
  6181   003004  90D8               	bcf	status,0,c
  6182   003006  364E               	rlcf	___flmul@prod^0,f,c
  6183   003008  364F               	rlcf	(___flmul@prod+1)^0,f,c
  6184   00300A  3650               	rlcf	(___flmul@prod+2)^0,f,c
  6185   00300C  3651               	rlcf	(___flmul@prod+3)^0,f,c
  6186   00300E  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6187   003010  EF0C  F018         	goto	u3321
  6188   003014  EF0E  F018         	goto	u3320
  6189   003018                     u3321:
  6190   003018  EF0F  F018         	goto	l1220
  6191   00301C                     u3320:
  6192   00301C  804E               	bsf	___flmul@prod^0,0,c
  6193   00301E                     l1220:
  6194   00301E  90D8               	bcf	status,0,c
  6195   003020  3648               	rlcf	___flmul@grs^0,f,c
  6196   003022  3649               	rlcf	(___flmul@grs+1)^0,f,c
  6197   003024  364A               	rlcf	(___flmul@grs+2)^0,f,c
  6198   003026  364B               	rlcf	(___flmul@grs+3)^0,f,c
  6199   003028  0652               	decf	___flmul@temp^0,f,c
  6200   00302A  A0D8               	btfss	status,0,c
  6201   00302C  0653               	decf	(___flmul@temp+1)^0,f,c
  6202   00302E                     l3378:
  6203   00302E  AE50               	btfss	(___flmul@prod+2)^0,7,c
  6204   003030  EF1C  F018         	goto	u3331
  6205   003034  EF1E  F018         	goto	u3330
  6206   003038                     u3331:
  6207   003038  EF02  F018         	goto	l3372
  6208   00303C                     u3330:
  6209   00303C  0E00               	movlw	0
  6210   00303E  6E4C               	movwf	___flmul@aexp^0,c
  6211   003040  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6212   003042  EF25  F018         	goto	u3341
  6213   003046  EF27  F018         	goto	u3340
  6214   00304A                     u3341:
  6215   00304A  EF4B  F018         	goto	l1222
  6216   00304E                     u3340:
  6217   00304E  0EFF               	movlw	255
  6218   003050  1448               	andwf	___flmul@grs^0,w,c
  6219   003052  6E43               	movwf	??___flmul^0,c
  6220   003054  0EFF               	movlw	255
  6221   003056  1449               	andwf	(___flmul@grs+1)^0,w,c
  6222   003058  6E44               	movwf	(??___flmul+1)^0,c
  6223   00305A  0EFF               	movlw	255
  6224   00305C  144A               	andwf	(___flmul@grs+2)^0,w,c
  6225   00305E  6E45               	movwf	(??___flmul+2)^0,c
  6226   003060  0E7F               	movlw	127
  6227   003062  144B               	andwf	(___flmul@grs+3)^0,w,c
  6228   003064  6E46               	movwf	(??___flmul+3)^0,c
  6229   003066  5043               	movf	??___flmul^0,w,c
  6230   003068  1044               	iorwf	(??___flmul+1)^0,w,c
  6231   00306A  1045               	iorwf	(??___flmul+2)^0,w,c
  6232   00306C  1046               	iorwf	(??___flmul+3)^0,w,c
  6233   00306E  B4D8               	btfsc	status,2,c
  6234   003070  EF3C  F018         	goto	u3351
  6235   003074  EF3E  F018         	goto	u3350
  6236   003078                     u3351:
  6237   003078  EF42  F018         	goto	l1223
  6238   00307C                     u3350:
  6239   00307C                     l3386:
  6240   00307C  0E01               	movlw	1
  6241   00307E  6E4C               	movwf	___flmul@aexp^0,c
  6242   003080  EF4B  F018         	goto	l1222
  6243   003084                     l1223:
  6244   003084  A04E               	btfss	___flmul@prod^0,0,c
  6245   003086  EF47  F018         	goto	u3361
  6246   00308A  EF49  F018         	goto	u3360
  6247   00308E                     u3361:
  6248   00308E  EF4B  F018         	goto	l1222
  6249   003092                     u3360:
  6250   003092  EF3E  F018         	goto	l3386
  6251   003096                     l1222:
  6252   003096  504C               	movf	___flmul@aexp^0,w,c
  6253   003098  B4D8               	btfsc	status,2,c
  6254   00309A  EF51  F018         	goto	u3371
  6255   00309E  EF53  F018         	goto	u3370
  6256   0030A2                     u3371:
  6257   0030A2  EF77  F018         	goto	l3398
  6258   0030A6                     u3370:
  6259   0030A6  0E01               	movlw	1
  6260   0030A8  264E               	addwf	___flmul@prod^0,f,c
  6261   0030AA  0E00               	movlw	0
  6262   0030AC  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6263   0030AE  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6264   0030B0  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6265   0030B2  A051               	btfss	(___flmul@prod+3)^0,0,c
  6266   0030B4  EF5E  F018         	goto	u3381
  6267   0030B8  EF60  F018         	goto	u3380
  6268   0030BC                     u3381:
  6269   0030BC  EF77  F018         	goto	l3398
  6270   0030C0                     u3380:
  6271   0030C0  C04E  F043         	movff	___flmul@prod,??___flmul
  6272   0030C4  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  6273   0030C8  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  6274   0030CC  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  6275   0030D0  3446               	rlcf	(??___flmul+3)^0,w,c
  6276   0030D2  3246               	rrcf	(??___flmul+3)^0,f,c
  6277   0030D4  3245               	rrcf	(??___flmul+2)^0,f,c
  6278   0030D6  3244               	rrcf	(??___flmul+1)^0,f,c
  6279   0030D8  3243               	rrcf	??___flmul^0,f,c
  6280   0030DA  C043  F04E         	movff	??___flmul,___flmul@prod
  6281   0030DE  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  6282   0030E2  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  6283   0030E6  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  6284   0030EA  4A52               	infsnz	___flmul@temp^0,f,c
  6285   0030EC  2A53               	incf	(___flmul@temp+1)^0,f,c
  6286   0030EE                     l3398:
  6287   0030EE  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6288   0030F0  EF82  F018         	goto	u3391
  6289   0030F4  5053               	movf	(___flmul@temp+1)^0,w,c
  6290   0030F6  E108               	bnz	u3390
  6291   0030F8  2852               	incf	___flmul@temp^0,w,c
  6292   0030FA  A0D8               	btfss	status,0,c
  6293   0030FC  EF82  F018         	goto	u3391
  6294   003100  EF84  F018         	goto	u3390
  6295   003104                     u3391:
  6296   003104  EF8E  F018         	goto	l3402
  6297   003108                     u3390:
  6298   003108  0E00               	movlw	0
  6299   00310A  6E4E               	movwf	___flmul@prod^0,c
  6300   00310C  0E00               	movlw	0
  6301   00310E  6E4F               	movwf	(___flmul@prod+1)^0,c
  6302   003110  0E80               	movlw	128
  6303   003112  6E50               	movwf	(___flmul@prod+2)^0,c
  6304   003114  0E7F               	movlw	127
  6305   003116  6E51               	movwf	(___flmul@prod+3)^0,c
  6306   003118  EFBC  F018         	goto	l3414
  6307   00311C                     l3402:
  6308   00311C  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6309   00311E  EF9B  F018         	goto	u3400
  6310   003122  5053               	movf	(___flmul@temp+1)^0,w,c
  6311   003124  E106               	bnz	u3401
  6312   003126  0452               	decf	___flmul@temp^0,w,c
  6313   003128  B0D8               	btfsc	status,0,c
  6314   00312A  EF99  F018         	goto	u3401
  6315   00312E  EF9B  F018         	goto	u3400
  6316   003132                     u3401:
  6317   003132  EFA7  F018         	goto	l1230
  6318   003136                     u3400:
  6319   003136  0E00               	movlw	0
  6320   003138  6E4E               	movwf	___flmul@prod^0,c
  6321   00313A  0E00               	movlw	0
  6322   00313C  6E4F               	movwf	(___flmul@prod+1)^0,c
  6323   00313E  0E00               	movlw	0
  6324   003140  6E50               	movwf	(___flmul@prod+2)^0,c
  6325   003142  0E00               	movlw	0
  6326   003144  6E51               	movwf	(___flmul@prod+3)^0,c
  6327   003146  0E00               	movlw	0
  6328   003148  6E47               	movwf	___flmul@sign^0,c
  6329   00314A  EFBC  F018         	goto	l3414
  6330   00314E                     l1230:
  6331   00314E  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  6332   003152  0EFF               	movlw	255
  6333   003154  164E               	andwf	___flmul@prod^0,f,c
  6334   003156  0EFF               	movlw	255
  6335   003158  164F               	andwf	(___flmul@prod+1)^0,f,c
  6336   00315A  0E7F               	movlw	127
  6337   00315C  1650               	andwf	(___flmul@prod+2)^0,f,c
  6338   00315E  0E00               	movlw	0
  6339   003160  1651               	andwf	(___flmul@prod+3)^0,f,c
  6340   003162  A04D               	btfss	___flmul@bexp^0,0,c
  6341   003164  EFB6  F018         	goto	u3411
  6342   003168  EFB8  F018         	goto	u3410
  6343   00316C                     u3411:
  6344   00316C  EFB9  F018         	goto	l3412
  6345   003170                     u3410:
  6346   003170  8E50               	bsf	(___flmul@prod+2)^0,7,c
  6347   003172                     l3412:
  6348   003172  90D8               	bcf	status,0,c
  6349   003174  304D               	rrcf	___flmul@bexp^0,w,c
  6350   003176  6E51               	movwf	(___flmul@prod+3)^0,c
  6351   003178                     l3414:
  6352   003178  5047               	movf	___flmul@sign^0,w,c
  6353   00317A  1251               	iorwf	(___flmul@prod+3)^0,f,c
  6354   00317C  C04E  F03B         	movff	___flmul@prod,?___flmul
  6355   003180  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  6356   003184  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  6357   003188  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  6358   00318C                     l1217:
  6359   00318C  0012               	return		;funcret
  6360   00318E                     __end_of___flmul:
  6361                           	callstack 0
  6362                           
  6363 ;; *************** function ___fleq *****************
  6364 ;; Defined at:
  6365 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  ff1             4    0[COMRAM] unsigned char 
  6368 ;;  ff2             4    4[COMRAM] unsigned char 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;		None               void
  6373 ;; Registers used:
  6374 ;;		wreg, status,2, status,0
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6380 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6382 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6383 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6384 ;;Total ram usage:       12 bytes
  6385 ;; Hardware stack levels used: 1
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_custom_floatmodulo
  6390 ;;		_RGB_to_HSV
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text24
  6395   004702                     __ptext24:
  6396                           	callstack 0
  6397   004702                     ___fleq:
  6398                           	callstack 26
  6399   004702  0E00               	movlw	0
  6400   004704  1401               	andwf	___fleq@ff1^0,w,c
  6401   004706  6E09               	movwf	??___fleq^0,c
  6402   004708  0E00               	movlw	0
  6403   00470A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6404   00470C  6E0A               	movwf	(??___fleq+1)^0,c
  6405   00470E  0E80               	movlw	128
  6406   004710  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6407   004712  6E0B               	movwf	(??___fleq+2)^0,c
  6408   004714  0E7F               	movlw	127
  6409   004716  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6410   004718  6E0C               	movwf	(??___fleq+3)^0,c
  6411   00471A  5009               	movf	??___fleq^0,w,c
  6412   00471C  100A               	iorwf	(??___fleq+1)^0,w,c
  6413   00471E  100B               	iorwf	(??___fleq+2)^0,w,c
  6414   004720  100C               	iorwf	(??___fleq+3)^0,w,c
  6415   004722  A4D8               	btfss	status,2,c
  6416   004724  EF96  F023         	goto	u3421
  6417   004728  EF98  F023         	goto	u3420
  6418   00472C                     u3421:
  6419   00472C  EFA0  F023         	goto	l3430
  6420   004730                     u3420:
  6421   004730  0E00               	movlw	0
  6422   004732  6E01               	movwf	___fleq@ff1^0,c
  6423   004734  0E00               	movlw	0
  6424   004736  6E02               	movwf	(___fleq@ff1+1)^0,c
  6425   004738  0E00               	movlw	0
  6426   00473A  6E03               	movwf	(___fleq@ff1+2)^0,c
  6427   00473C  0E00               	movlw	0
  6428   00473E  6E04               	movwf	(___fleq@ff1+3)^0,c
  6429   004740                     l3430:
  6430   004740  0E00               	movlw	0
  6431   004742  1405               	andwf	___fleq@ff2^0,w,c
  6432   004744  6E09               	movwf	??___fleq^0,c
  6433   004746  0E00               	movlw	0
  6434   004748  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6435   00474A  6E0A               	movwf	(??___fleq+1)^0,c
  6436   00474C  0E80               	movlw	128
  6437   00474E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6438   004750  6E0B               	movwf	(??___fleq+2)^0,c
  6439   004752  0E7F               	movlw	127
  6440   004754  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6441   004756  6E0C               	movwf	(??___fleq+3)^0,c
  6442   004758  5009               	movf	??___fleq^0,w,c
  6443   00475A  100A               	iorwf	(??___fleq+1)^0,w,c
  6444   00475C  100B               	iorwf	(??___fleq+2)^0,w,c
  6445   00475E  100C               	iorwf	(??___fleq+3)^0,w,c
  6446   004760  A4D8               	btfss	status,2,c
  6447   004762  EFB5  F023         	goto	u3431
  6448   004766  EFB7  F023         	goto	u3430
  6449   00476A                     u3431:
  6450   00476A  EFBF  F023         	goto	l3434
  6451   00476E                     u3430:
  6452   00476E  0E00               	movlw	0
  6453   004770  6E05               	movwf	___fleq@ff2^0,c
  6454   004772  0E00               	movlw	0
  6455   004774  6E06               	movwf	(___fleq@ff2+1)^0,c
  6456   004776  0E00               	movlw	0
  6457   004778  6E07               	movwf	(___fleq@ff2+2)^0,c
  6458   00477A  0E00               	movlw	0
  6459   00477C  6E08               	movwf	(___fleq@ff2+3)^0,c
  6460   00477E                     l3434:
  6461   00477E  5005               	movf	___fleq@ff2^0,w,c
  6462   004780  1801               	xorwf	___fleq@ff1^0,w,c
  6463   004782  E10F               	bnz	u3440
  6464   004784  5006               	movf	(___fleq@ff2+1)^0,w,c
  6465   004786  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6466   004788  E10C               	bnz	u3440
  6467   00478A  5007               	movf	(___fleq@ff2+2)^0,w,c
  6468   00478C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6469   00478E  E109               	bnz	u3440
  6470   004790  5008               	movf	(___fleq@ff2+3)^0,w,c
  6471   004792  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6472   004794  B4D8               	btfsc	status,2,c
  6473   004796  EFCF  F023         	goto	u3441
  6474   00479A  EFD1  F023         	goto	u3440
  6475   00479E                     u3441:
  6476   00479E  EFD4  F023         	goto	l3438
  6477   0047A2                     u3440:
  6478   0047A2  90D8               	bcf	status,0,c
  6479   0047A4  EFD5  F023         	goto	l858
  6480   0047A8                     l3438:
  6481   0047A8  80D8               	bsf	status,0,c
  6482   0047AA                     l858:
  6483   0047AA  0012               	return		;funcret
  6484   0047AC                     __end_of___fleq:
  6485                           	callstack 0
  6486                           
  6487 ;; *************** function ___fldiv *****************
  6488 ;; Defined at:
  6489 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  b               4   33[COMRAM] unsigned char 
  6492 ;;  a               4   37[COMRAM] unsigned char 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  grs             4   52[COMRAM] unsigned long 
  6495 ;;  rem             4   45[COMRAM] unsigned long 
  6496 ;;  new_exp         2   50[COMRAM] short 
  6497 ;;  aexp            1   57[COMRAM] unsigned char 
  6498 ;;  bexp            1   56[COMRAM] unsigned char 
  6499 ;;  sign            1   49[COMRAM] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  4   33[COMRAM] unsigned char 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6509 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6512 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;Total ram usage:       25 bytes
  6514 ;; Hardware stack levels used: 1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_custom_floatmodulo
  6519 ;;		_RGB_to_HSV
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text25
  6524   00318E                     __ptext25:
  6525                           	callstack 0
  6526   00318E                     ___fldiv:
  6527                           	callstack 26
  6528   00318E  5025               	movf	(___fldiv@b+3)^0,w,c
  6529   003190  0B80               	andlw	128
  6530   003192  6E32               	movwf	___fldiv@sign^0,c
  6531   003194  5025               	movf	(___fldiv@b+3)^0,w,c
  6532   003196  2425               	addwf	(___fldiv@b+3)^0,w,c
  6533   003198  6E39               	movwf	___fldiv@bexp^0,c
  6534   00319A  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6535   00319C  EFD2  F018         	goto	u3001
  6536   0031A0  EFD4  F018         	goto	u3000
  6537   0031A4                     u3001:
  6538   0031A4  EFD5  F018         	goto	l3158
  6539   0031A8                     u3000:
  6540   0031A8  8039               	bsf	___fldiv@bexp^0,0,c
  6541   0031AA                     l3158:
  6542   0031AA  5039               	movf	___fldiv@bexp^0,w,c
  6543   0031AC  B4D8               	btfsc	status,2,c
  6544   0031AE  EFDB  F018         	goto	u3011
  6545   0031B2  EFDD  F018         	goto	u3010
  6546   0031B6                     u3011:
  6547   0031B6  EFF2  F018         	goto	l3168
  6548   0031BA                     u3010:
  6549   0031BA  2839               	incf	___fldiv@bexp^0,w,c
  6550   0031BC  A4D8               	btfss	status,2,c
  6551   0031BE  EFE3  F018         	goto	u3021
  6552   0031C2  EFE5  F018         	goto	u3020
  6553   0031C6                     u3021:
  6554   0031C6  EFED  F018         	goto	l3164
  6555   0031CA                     u3020:
  6556   0031CA  0E00               	movlw	0
  6557   0031CC  6E22               	movwf	___fldiv@b^0,c
  6558   0031CE  0E00               	movlw	0
  6559   0031D0  6E23               	movwf	(___fldiv@b+1)^0,c
  6560   0031D2  0E00               	movlw	0
  6561   0031D4  6E24               	movwf	(___fldiv@b+2)^0,c
  6562   0031D6  0E00               	movlw	0
  6563   0031D8  6E25               	movwf	(___fldiv@b+3)^0,c
  6564   0031DA                     l3164:
  6565   0031DA  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6566   0031DC  0E00               	movlw	0
  6567   0031DE  6E25               	movwf	(___fldiv@b+3)^0,c
  6568   0031E0  EFFA  F018         	goto	l3170
  6569   0031E4                     l3168:
  6570   0031E4  0E00               	movlw	0
  6571   0031E6  6E22               	movwf	___fldiv@b^0,c
  6572   0031E8  0E00               	movlw	0
  6573   0031EA  6E23               	movwf	(___fldiv@b+1)^0,c
  6574   0031EC  0E00               	movlw	0
  6575   0031EE  6E24               	movwf	(___fldiv@b+2)^0,c
  6576   0031F0  0E00               	movlw	0
  6577   0031F2  6E25               	movwf	(___fldiv@b+3)^0,c
  6578   0031F4                     l3170:
  6579   0031F4  5029               	movf	(___fldiv@a+3)^0,w,c
  6580   0031F6  0B80               	andlw	128
  6581   0031F8  1A32               	xorwf	___fldiv@sign^0,f,c
  6582   0031FA  5029               	movf	(___fldiv@a+3)^0,w,c
  6583   0031FC  2429               	addwf	(___fldiv@a+3)^0,w,c
  6584   0031FE  6E3A               	movwf	___fldiv@aexp^0,c
  6585   003200  AE28               	btfss	(___fldiv@a+2)^0,7,c
  6586   003202  EF05  F019         	goto	u3031
  6587   003206  EF07  F019         	goto	u3030
  6588   00320A                     u3031:
  6589   00320A  EF08  F019         	goto	l3178
  6590   00320E                     u3030:
  6591   00320E  803A               	bsf	___fldiv@aexp^0,0,c
  6592   003210                     l3178:
  6593   003210  503A               	movf	___fldiv@aexp^0,w,c
  6594   003212  B4D8               	btfsc	status,2,c
  6595   003214  EF0E  F019         	goto	u3041
  6596   003218  EF10  F019         	goto	u3040
  6597   00321C                     u3041:
  6598   00321C  EF25  F019         	goto	l3188
  6599   003220                     u3040:
  6600   003220  283A               	incf	___fldiv@aexp^0,w,c
  6601   003222  A4D8               	btfss	status,2,c
  6602   003224  EF16  F019         	goto	u3051
  6603   003228  EF18  F019         	goto	u3050
  6604   00322C                     u3051:
  6605   00322C  EF20  F019         	goto	l3184
  6606   003230                     u3050:
  6607   003230  0E00               	movlw	0
  6608   003232  6E26               	movwf	___fldiv@a^0,c
  6609   003234  0E00               	movlw	0
  6610   003236  6E27               	movwf	(___fldiv@a+1)^0,c
  6611   003238  0E00               	movlw	0
  6612   00323A  6E28               	movwf	(___fldiv@a+2)^0,c
  6613   00323C  0E00               	movlw	0
  6614   00323E  6E29               	movwf	(___fldiv@a+3)^0,c
  6615   003240                     l3184:
  6616   003240  8E28               	bsf	(___fldiv@a+2)^0,7,c
  6617   003242  0E00               	movlw	0
  6618   003244  6E29               	movwf	(___fldiv@a+3)^0,c
  6619   003246  EF2D  F019         	goto	l3190
  6620   00324A                     l3188:
  6621   00324A  0E00               	movlw	0
  6622   00324C  6E26               	movwf	___fldiv@a^0,c
  6623   00324E  0E00               	movlw	0
  6624   003250  6E27               	movwf	(___fldiv@a+1)^0,c
  6625   003252  0E00               	movlw	0
  6626   003254  6E28               	movwf	(___fldiv@a+2)^0,c
  6627   003256  0E00               	movlw	0
  6628   003258  6E29               	movwf	(___fldiv@a+3)^0,c
  6629   00325A                     l3190:
  6630   00325A  5026               	movf	___fldiv@a^0,w,c
  6631   00325C  1027               	iorwf	(___fldiv@a+1)^0,w,c
  6632   00325E  1028               	iorwf	(___fldiv@a+2)^0,w,c
  6633   003260  1029               	iorwf	(___fldiv@a+3)^0,w,c
  6634   003262  A4D8               	btfss	status,2,c
  6635   003264  EF36  F019         	goto	u3061
  6636   003268  EF38  F019         	goto	u3060
  6637   00326C                     u3061:
  6638   00326C  EF50  F019         	goto	l3202
  6639   003270                     u3060:
  6640   003270  0E00               	movlw	0
  6641   003272  6E22               	movwf	___fldiv@b^0,c
  6642   003274  0E00               	movlw	0
  6643   003276  6E23               	movwf	(___fldiv@b+1)^0,c
  6644   003278  0E00               	movlw	0
  6645   00327A  6E24               	movwf	(___fldiv@b+2)^0,c
  6646   00327C  0E00               	movlw	0
  6647   00327E  6E25               	movwf	(___fldiv@b+3)^0,c
  6648   003280  0E80               	movlw	128
  6649   003282  1224               	iorwf	(___fldiv@b+2)^0,f,c
  6650   003284  0E7F               	movlw	127
  6651   003286  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6652   003288                     l3196:
  6653   003288  5032               	movf	___fldiv@sign^0,w,c
  6654   00328A  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6655   00328C  C022  F022         	movff	___fldiv@b,?___fldiv
  6656   003290  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  6657   003294  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  6658   003298  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  6659   00329C  EF93  F01A         	goto	l1181
  6660   0032A0                     l3202:
  6661   0032A0  5039               	movf	___fldiv@bexp^0,w,c
  6662   0032A2  A4D8               	btfss	status,2,c
  6663   0032A4  EF56  F019         	goto	u3071
  6664   0032A8  EF58  F019         	goto	u3070
  6665   0032AC                     u3071:
  6666   0032AC  EF62  F019         	goto	l3210
  6667   0032B0                     u3070:
  6668   0032B0  0E00               	movlw	0
  6669   0032B2  6E22               	movwf	?___fldiv^0,c
  6670   0032B4  0E00               	movlw	0
  6671   0032B6  6E23               	movwf	(?___fldiv+1)^0,c
  6672   0032B8  0E00               	movlw	0
  6673   0032BA  6E24               	movwf	(?___fldiv+2)^0,c
  6674   0032BC  0E00               	movlw	0
  6675   0032BE  6E25               	movwf	(?___fldiv+3)^0,c
  6676   0032C0  EF93  F01A         	goto	l1181
  6677   0032C4                     l3210:
  6678   0032C4  503A               	movf	___fldiv@aexp^0,w,c
  6679   0032C6  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  6680   0032CA  6A2B               	clrf	(??___fldiv+1)^0,c
  6681   0032CC  5E2A               	subwf	??___fldiv^0,f,c
  6682   0032CE  0E00               	movlw	0
  6683   0032D0  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  6684   0032D2  0E7F               	movlw	127
  6685   0032D4  242A               	addwf	??___fldiv^0,w,c
  6686   0032D6  6E33               	movwf	___fldiv@new_exp^0,c
  6687   0032D8  0E00               	movlw	0
  6688   0032DA  202B               	addwfc	(??___fldiv+1)^0,w,c
  6689   0032DC  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6690   0032DE  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  6691   0032E2  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  6692   0032E6  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  6693   0032EA  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  6694   0032EE  0E00               	movlw	0
  6695   0032F0  6E22               	movwf	___fldiv@b^0,c
  6696   0032F2  0E00               	movlw	0
  6697   0032F4  6E23               	movwf	(___fldiv@b+1)^0,c
  6698   0032F6  0E00               	movlw	0
  6699   0032F8  6E24               	movwf	(___fldiv@b+2)^0,c
  6700   0032FA  0E00               	movlw	0
  6701   0032FC  6E25               	movwf	(___fldiv@b+3)^0,c
  6702   0032FE  0E00               	movlw	0
  6703   003300  6E35               	movwf	___fldiv@grs^0,c
  6704   003302  0E00               	movlw	0
  6705   003304  6E36               	movwf	(___fldiv@grs+1)^0,c
  6706   003306  0E00               	movlw	0
  6707   003308  6E37               	movwf	(___fldiv@grs+2)^0,c
  6708   00330A  0E00               	movlw	0
  6709   00330C  6E38               	movwf	(___fldiv@grs+3)^0,c
  6710   00330E  0E00               	movlw	0
  6711   003310  6E3A               	movwf	___fldiv@aexp^0,c
  6712   003312  EFC3  F019         	goto	l1183
  6713   003316                     l3220:
  6714   003316  503A               	movf	___fldiv@aexp^0,w,c
  6715   003318  B4D8               	btfsc	status,2,c
  6716   00331A  EF91  F019         	goto	u3081
  6717   00331E  EF93  F019         	goto	u3080
  6718   003322                     u3081:
  6719   003322  EFAA  F019         	goto	l3228
  6720   003326                     u3080:
  6721   003326  90D8               	bcf	status,0,c
  6722   003328  362E               	rlcf	___fldiv@rem^0,f,c
  6723   00332A  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  6724   00332C  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  6725   00332E  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  6726   003330  90D8               	bcf	status,0,c
  6727   003332  3622               	rlcf	___fldiv@b^0,f,c
  6728   003334  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6729   003336  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6730   003338  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6731   00333A  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6732   00333C  EFA2  F019         	goto	u3091
  6733   003340  EFA4  F019         	goto	u3090
  6734   003344                     u3091:
  6735   003344  EFA5  F019         	goto	l1186
  6736   003348                     u3090:
  6737   003348  8022               	bsf	___fldiv@b^0,0,c
  6738   00334A                     l1186:
  6739   00334A  90D8               	bcf	status,0,c
  6740   00334C  3635               	rlcf	___fldiv@grs^0,f,c
  6741   00334E  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6742   003350  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6743   003352  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6744   003354                     l3228:
  6745   003354  5026               	movf	___fldiv@a^0,w,c
  6746   003356  5C2E               	subwf	___fldiv@rem^0,w,c
  6747   003358  5027               	movf	(___fldiv@a+1)^0,w,c
  6748   00335A  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  6749   00335C  5028               	movf	(___fldiv@a+2)^0,w,c
  6750   00335E  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  6751   003360  5029               	movf	(___fldiv@a+3)^0,w,c
  6752   003362  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  6753   003364  A0D8               	btfss	status,0,c
  6754   003366  EFB7  F019         	goto	u3101
  6755   00336A  EFB9  F019         	goto	u3100
  6756   00336E                     u3101:
  6757   00336E  EFC2  F019         	goto	l3234
  6758   003372                     u3100:
  6759   003372  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  6760   003374  5026               	movf	___fldiv@a^0,w,c
  6761   003376  5E2E               	subwf	___fldiv@rem^0,f,c
  6762   003378  5027               	movf	(___fldiv@a+1)^0,w,c
  6763   00337A  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  6764   00337C  5028               	movf	(___fldiv@a+2)^0,w,c
  6765   00337E  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  6766   003380  5029               	movf	(___fldiv@a+3)^0,w,c
  6767   003382  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  6768   003384                     l3234:
  6769   003384  2A3A               	incf	___fldiv@aexp^0,f,c
  6770   003386                     l1183:
  6771   003386  0E19               	movlw	25
  6772   003388  643A               	cpfsgt	___fldiv@aexp^0,c
  6773   00338A  EFC9  F019         	goto	u3111
  6774   00338E  EFCB  F019         	goto	u3110
  6775   003392                     u3111:
  6776   003392  EF8B  F019         	goto	l3220
  6777   003396                     u3110:
  6778   003396  502E               	movf	___fldiv@rem^0,w,c
  6779   003398  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  6780   00339A  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  6781   00339C  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  6782   00339E  B4D8               	btfsc	status,2,c
  6783   0033A0  EFD4  F019         	goto	u3121
  6784   0033A4  EFD6  F019         	goto	u3120
  6785   0033A8                     u3121:
  6786   0033A8  EFEE  F019         	goto	l3246
  6787   0033AC                     u3120:
  6788   0033AC  8035               	bsf	___fldiv@grs^0,0,c
  6789   0033AE  EFEE  F019         	goto	l3246
  6790   0033B2                     l3240:
  6791   0033B2  90D8               	bcf	status,0,c
  6792   0033B4  3622               	rlcf	___fldiv@b^0,f,c
  6793   0033B6  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6794   0033B8  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6795   0033BA  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6796   0033BC  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6797   0033BE  EFE3  F019         	goto	u3131
  6798   0033C2  EFE5  F019         	goto	u3130
  6799   0033C6                     u3131:
  6800   0033C6  EFE6  F019         	goto	l1192
  6801   0033CA                     u3130:
  6802   0033CA  8022               	bsf	___fldiv@b^0,0,c
  6803   0033CC                     l1192:
  6804   0033CC  90D8               	bcf	status,0,c
  6805   0033CE  3635               	rlcf	___fldiv@grs^0,f,c
  6806   0033D0  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6807   0033D2  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6808   0033D4  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6809   0033D6  0633               	decf	___fldiv@new_exp^0,f,c
  6810   0033D8  A0D8               	btfss	status,0,c
  6811   0033DA  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  6812   0033DC                     l3246:
  6813   0033DC  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6814   0033DE  EFF3  F019         	goto	u3141
  6815   0033E2  EFF5  F019         	goto	u3140
  6816   0033E6                     u3141:
  6817   0033E6  EFD9  F019         	goto	l3240
  6818   0033EA                     u3140:
  6819   0033EA  0E00               	movlw	0
  6820   0033EC  6E3A               	movwf	___fldiv@aexp^0,c
  6821   0033EE  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6822   0033F0  EFFC  F019         	goto	u3151
  6823   0033F4  EFFE  F019         	goto	u3150
  6824   0033F8                     u3151:
  6825   0033F8  EF22  F01A         	goto	l1194
  6826   0033FC                     u3150:
  6827   0033FC  0EFF               	movlw	255
  6828   0033FE  1435               	andwf	___fldiv@grs^0,w,c
  6829   003400  6E2A               	movwf	??___fldiv^0,c
  6830   003402  0EFF               	movlw	255
  6831   003404  1436               	andwf	(___fldiv@grs+1)^0,w,c
  6832   003406  6E2B               	movwf	(??___fldiv+1)^0,c
  6833   003408  0EFF               	movlw	255
  6834   00340A  1437               	andwf	(___fldiv@grs+2)^0,w,c
  6835   00340C  6E2C               	movwf	(??___fldiv+2)^0,c
  6836   00340E  0E7F               	movlw	127
  6837   003410  1438               	andwf	(___fldiv@grs+3)^0,w,c
  6838   003412  6E2D               	movwf	(??___fldiv+3)^0,c
  6839   003414  502A               	movf	??___fldiv^0,w,c
  6840   003416  102B               	iorwf	(??___fldiv+1)^0,w,c
  6841   003418  102C               	iorwf	(??___fldiv+2)^0,w,c
  6842   00341A  102D               	iorwf	(??___fldiv+3)^0,w,c
  6843   00341C  B4D8               	btfsc	status,2,c
  6844   00341E  EF13  F01A         	goto	u3161
  6845   003422  EF15  F01A         	goto	u3160
  6846   003426                     u3161:
  6847   003426  EF19  F01A         	goto	l1195
  6848   00342A                     u3160:
  6849   00342A                     l3254:
  6850   00342A  0E01               	movlw	1
  6851   00342C  6E3A               	movwf	___fldiv@aexp^0,c
  6852   00342E  EF22  F01A         	goto	l1194
  6853   003432                     l1195:
  6854   003432  A022               	btfss	___fldiv@b^0,0,c
  6855   003434  EF1E  F01A         	goto	u3171
  6856   003438  EF20  F01A         	goto	u3170
  6857   00343C                     u3171:
  6858   00343C  EF22  F01A         	goto	l1194
  6859   003440                     u3170:
  6860   003440  EF15  F01A         	goto	l3254
  6861   003444                     l1194:
  6862   003444  503A               	movf	___fldiv@aexp^0,w,c
  6863   003446  B4D8               	btfsc	status,2,c
  6864   003448  EF28  F01A         	goto	u3181
  6865   00344C  EF2A  F01A         	goto	u3180
  6866   003450                     u3181:
  6867   003450  EF4E  F01A         	goto	l3266
  6868   003454                     u3180:
  6869   003454  0E01               	movlw	1
  6870   003456  2622               	addwf	___fldiv@b^0,f,c
  6871   003458  0E00               	movlw	0
  6872   00345A  2223               	addwfc	(___fldiv@b+1)^0,f,c
  6873   00345C  2224               	addwfc	(___fldiv@b+2)^0,f,c
  6874   00345E  2225               	addwfc	(___fldiv@b+3)^0,f,c
  6875   003460  A025               	btfss	(___fldiv@b+3)^0,0,c
  6876   003462  EF35  F01A         	goto	u3191
  6877   003466  EF37  F01A         	goto	u3190
  6878   00346A                     u3191:
  6879   00346A  EF4E  F01A         	goto	l3266
  6880   00346E                     u3190:
  6881   00346E  C022  F02A         	movff	___fldiv@b,??___fldiv
  6882   003472  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  6883   003476  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  6884   00347A  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  6885   00347E  342D               	rlcf	(??___fldiv+3)^0,w,c
  6886   003480  322D               	rrcf	(??___fldiv+3)^0,f,c
  6887   003482  322C               	rrcf	(??___fldiv+2)^0,f,c
  6888   003484  322B               	rrcf	(??___fldiv+1)^0,f,c
  6889   003486  322A               	rrcf	??___fldiv^0,f,c
  6890   003488  C02A  F022         	movff	??___fldiv,___fldiv@b
  6891   00348C  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  6892   003490  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  6893   003494  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  6894   003498  4A33               	infsnz	___fldiv@new_exp^0,f,c
  6895   00349A  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  6896   00349C                     l3266:
  6897   00349C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6898   00349E  EF59  F01A         	goto	u3201
  6899   0034A2  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6900   0034A4  E108               	bnz	u3200
  6901   0034A6  2833               	incf	___fldiv@new_exp^0,w,c
  6902   0034A8  A0D8               	btfss	status,0,c
  6903   0034AA  EF59  F01A         	goto	u3201
  6904   0034AE  EF5B  F01A         	goto	u3200
  6905   0034B2                     u3201:
  6906   0034B2  EF66  F01A         	goto	l3270
  6907   0034B6                     u3200:
  6908   0034B6  0E00               	movlw	0
  6909   0034B8  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6910   0034BA  6833               	setf	___fldiv@new_exp^0,c
  6911   0034BC  0E00               	movlw	0
  6912   0034BE  6E22               	movwf	___fldiv@b^0,c
  6913   0034C0  0E00               	movlw	0
  6914   0034C2  6E23               	movwf	(___fldiv@b+1)^0,c
  6915   0034C4  0E00               	movlw	0
  6916   0034C6  6E24               	movwf	(___fldiv@b+2)^0,c
  6917   0034C8  0E00               	movlw	0
  6918   0034CA  6E25               	movwf	(___fldiv@b+3)^0,c
  6919   0034CC                     l3270:
  6920   0034CC  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6921   0034CE  EF73  F01A         	goto	u3210
  6922   0034D2  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6923   0034D4  E106               	bnz	u3211
  6924   0034D6  0433               	decf	___fldiv@new_exp^0,w,c
  6925   0034D8  B0D8               	btfsc	status,0,c
  6926   0034DA  EF71  F01A         	goto	u3211
  6927   0034DE  EF73  F01A         	goto	u3210
  6928   0034E2                     u3211:
  6929   0034E2  EF81  F01A         	goto	l3274
  6930   0034E6                     u3210:
  6931   0034E6  0E00               	movlw	0
  6932   0034E8  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6933   0034EA  0E00               	movlw	0
  6934   0034EC  6E33               	movwf	___fldiv@new_exp^0,c
  6935   0034EE  0E00               	movlw	0
  6936   0034F0  6E22               	movwf	___fldiv@b^0,c
  6937   0034F2  0E00               	movlw	0
  6938   0034F4  6E23               	movwf	(___fldiv@b+1)^0,c
  6939   0034F6  0E00               	movlw	0
  6940   0034F8  6E24               	movwf	(___fldiv@b+2)^0,c
  6941   0034FA  0E00               	movlw	0
  6942   0034FC  6E25               	movwf	(___fldiv@b+3)^0,c
  6943   0034FE  0E00               	movlw	0
  6944   003500  6E32               	movwf	___fldiv@sign^0,c
  6945   003502                     l3274:
  6946   003502  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  6947   003506  A039               	btfss	___fldiv@bexp^0,0,c
  6948   003508  EF88  F01A         	goto	u3221
  6949   00350C  EF8A  F01A         	goto	u3220
  6950   003510                     u3221:
  6951   003510  EF8D  F01A         	goto	l3280
  6952   003514                     u3220:
  6953   003514  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6954   003516  EF8E  F01A         	goto	l3282
  6955   00351A                     l3280:
  6956   00351A  9E24               	bcf	(___fldiv@b+2)^0,7,c
  6957   00351C                     l3282:
  6958   00351C  90D8               	bcf	status,0,c
  6959   00351E  3039               	rrcf	___fldiv@bexp^0,w,c
  6960   003520  6E25               	movwf	(___fldiv@b+3)^0,c
  6961   003522  EF44  F019         	goto	l3196
  6962   003526                     l1181:
  6963   003526  0012               	return		;funcret
  6964   003528                     __end_of___fldiv:
  6965                           	callstack 0
  6966                           
  6967 ;; *************** function ___flge *****************
  6968 ;; Defined at:
  6969 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  ff1             4    0[COMRAM] unsigned char 
  6972 ;;  ff2             4    4[COMRAM] unsigned char 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;		None               void
  6977 ;; Registers used:
  6978 ;;		wreg, status,2, status,0
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6984 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6986 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6987 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6988 ;;Total ram usage:       12 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_RGB_to_HSV
  6994 ;;		_color_cardCheck
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text26
  6999   0043C2                     __ptext26:
  7000                           	callstack 0
  7001   0043C2                     ___flge:
  7002                           	callstack 28
  7003   0043C2  0E00               	movlw	0
  7004   0043C4  1401               	andwf	___flge@ff1^0,w,c
  7005   0043C6  6E09               	movwf	??___flge^0,c
  7006   0043C8  0E00               	movlw	0
  7007   0043CA  1402               	andwf	(___flge@ff1+1)^0,w,c
  7008   0043CC  6E0A               	movwf	(??___flge+1)^0,c
  7009   0043CE  0E80               	movlw	128
  7010   0043D0  1403               	andwf	(___flge@ff1+2)^0,w,c
  7011   0043D2  6E0B               	movwf	(??___flge+2)^0,c
  7012   0043D4  0E7F               	movlw	127
  7013   0043D6  1404               	andwf	(___flge@ff1+3)^0,w,c
  7014   0043D8  6E0C               	movwf	(??___flge+3)^0,c
  7015   0043DA  5009               	movf	??___flge^0,w,c
  7016   0043DC  100A               	iorwf	(??___flge+1)^0,w,c
  7017   0043DE  100B               	iorwf	(??___flge+2)^0,w,c
  7018   0043E0  100C               	iorwf	(??___flge+3)^0,w,c
  7019   0043E2  A4D8               	btfss	status,2,c
  7020   0043E4  EFF6  F021         	goto	u3651
  7021   0043E8  EFF8  F021         	goto	u3650
  7022   0043EC                     u3651:
  7023   0043EC  EF00  F022         	goto	l3586
  7024   0043F0                     u3650:
  7025   0043F0  0E00               	movlw	0
  7026   0043F2  6E01               	movwf	___flge@ff1^0,c
  7027   0043F4  0E00               	movlw	0
  7028   0043F6  6E02               	movwf	(___flge@ff1+1)^0,c
  7029   0043F8  0E00               	movlw	0
  7030   0043FA  6E03               	movwf	(___flge@ff1+2)^0,c
  7031   0043FC  0E00               	movlw	0
  7032   0043FE  6E04               	movwf	(___flge@ff1+3)^0,c
  7033   004400                     l3586:
  7034   004400  0E00               	movlw	0
  7035   004402  1405               	andwf	___flge@ff2^0,w,c
  7036   004404  6E09               	movwf	??___flge^0,c
  7037   004406  0E00               	movlw	0
  7038   004408  1406               	andwf	(___flge@ff2+1)^0,w,c
  7039   00440A  6E0A               	movwf	(??___flge+1)^0,c
  7040   00440C  0E80               	movlw	128
  7041   00440E  1407               	andwf	(___flge@ff2+2)^0,w,c
  7042   004410  6E0B               	movwf	(??___flge+2)^0,c
  7043   004412  0E7F               	movlw	127
  7044   004414  1408               	andwf	(___flge@ff2+3)^0,w,c
  7045   004416  6E0C               	movwf	(??___flge+3)^0,c
  7046   004418  5009               	movf	??___flge^0,w,c
  7047   00441A  100A               	iorwf	(??___flge+1)^0,w,c
  7048   00441C  100B               	iorwf	(??___flge+2)^0,w,c
  7049   00441E  100C               	iorwf	(??___flge+3)^0,w,c
  7050   004420  A4D8               	btfss	status,2,c
  7051   004422  EF15  F022         	goto	u3661
  7052   004426  EF17  F022         	goto	u3660
  7053   00442A                     u3661:
  7054   00442A  EF1F  F022         	goto	l3590
  7055   00442E                     u3660:
  7056   00442E  0E00               	movlw	0
  7057   004430  6E05               	movwf	___flge@ff2^0,c
  7058   004432  0E00               	movlw	0
  7059   004434  6E06               	movwf	(___flge@ff2+1)^0,c
  7060   004436  0E00               	movlw	0
  7061   004438  6E07               	movwf	(___flge@ff2+2)^0,c
  7062   00443A  0E00               	movlw	0
  7063   00443C  6E08               	movwf	(___flge@ff2+3)^0,c
  7064   00443E                     l3590:
  7065   00443E  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7066   004440  EF24  F022         	goto	u3671
  7067   004444  EF26  F022         	goto	u3670
  7068   004448                     u3671:
  7069   004448  EF2F  F022         	goto	l3594
  7070   00444C                     u3670:
  7071   00444C  6C01               	negf	___flge@ff1^0,c
  7072   00444E  1E02               	comf	(___flge@ff1+1)^0,f,c
  7073   004450  B0D8               	btfsc	status,0,c
  7074   004452  2A02               	incf	(___flge@ff1+1)^0,f,c
  7075   004454  1E03               	comf	(___flge@ff1+2)^0,f,c
  7076   004456  B0D8               	btfsc	status,0,c
  7077   004458  2A03               	incf	(___flge@ff1+2)^0,f,c
  7078   00445A  0E80               	movlw	128
  7079   00445C  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7080   00445E                     l3594:
  7081   00445E  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7082   004460  EF34  F022         	goto	u3681
  7083   004464  EF36  F022         	goto	u3680
  7084   004468                     u3681:
  7085   004468  EF3F  F022         	goto	l864
  7086   00446C                     u3680:
  7087   00446C  6C05               	negf	___flge@ff2^0,c
  7088   00446E  1E06               	comf	(___flge@ff2+1)^0,f,c
  7089   004470  B0D8               	btfsc	status,0,c
  7090   004472  2A06               	incf	(___flge@ff2+1)^0,f,c
  7091   004474  1E07               	comf	(___flge@ff2+2)^0,f,c
  7092   004476  B0D8               	btfsc	status,0,c
  7093   004478  2A07               	incf	(___flge@ff2+2)^0,f,c
  7094   00447A  0E80               	movlw	128
  7095   00447C  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7096   00447E                     l864:
  7097   00447E  0E00               	movlw	0
  7098   004480  1A01               	xorwf	___flge@ff1^0,f,c
  7099   004482  0E00               	movlw	0
  7100   004484  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7101   004486  0E00               	movlw	0
  7102   004488  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7103   00448A  0E80               	movlw	128
  7104   00448C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7105   00448E  0E00               	movlw	0
  7106   004490  1A05               	xorwf	___flge@ff2^0,f,c
  7107   004492  0E00               	movlw	0
  7108   004494  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7109   004496  0E00               	movlw	0
  7110   004498  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7111   00449A  0E80               	movlw	128
  7112   00449C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7113   00449E  5005               	movf	___flge@ff2^0,w,c
  7114   0044A0  5C01               	subwf	___flge@ff1^0,w,c
  7115   0044A2  5006               	movf	(___flge@ff2+1)^0,w,c
  7116   0044A4  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7117   0044A6  5007               	movf	(___flge@ff2+2)^0,w,c
  7118   0044A8  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7119   0044AA  5008               	movf	(___flge@ff2+3)^0,w,c
  7120   0044AC  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7121   0044AE  B0D8               	btfsc	status,0,c
  7122   0044B0  EF5C  F022         	goto	u3691
  7123   0044B4  EF5E  F022         	goto	u3690
  7124   0044B8                     u3691:
  7125   0044B8  EF61  F022         	goto	l3600
  7126   0044BC                     u3690:
  7127   0044BC  90D8               	bcf	status,0,c
  7128   0044BE  EF62  F022         	goto	l869
  7129   0044C2                     l3600:
  7130   0044C2  80D8               	bsf	status,0,c
  7131   0044C4                     l869:
  7132   0044C4  0012               	return		;funcret
  7133   0044C6                     __end_of___flge:
  7134                           	callstack 0
  7135                           
  7136 ;; *************** function _maze_return *****************
  7137 ;; Defined at:
  7138 ;;		line 112 in file "pathfinder_file.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  c               1   32[COMRAM] PTR struct calibration_s
  7141 ;;		 -> calibration(9), 
  7142 ;;  mL              1   33[COMRAM] PTR struct DC_motor
  7143 ;;		 -> motorL(9), 
  7144 ;;  mR              1   34[COMRAM] PTR struct DC_motor
  7145 ;;		 -> motorR(9), 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  j               2   38[COMRAM] int 
  7148 ;;  distance_bac    1   40[COMRAM] unsigned char 
  7149 ;;  i               2   41[COMRAM] int 
  7150 ;;  i               2   43[COMRAM] int 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  1    wreg      void 
  7153 ;; Registers used:
  7154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7160 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7161 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7162 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7163 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7164 ;;Total ram usage:       13 bytes
  7165 ;; Hardware stack levels used: 1
  7166 ;; Hardware stack levels required when called: 3
  7167 ;; This function calls:
  7168 ;;		_backward
  7169 ;;		_forward
  7170 ;;		_leftTURN
  7171 ;;		_rightTURN
  7172 ;; This function is called by:
  7173 ;;		_main
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           	psect	text27
  7178   0028E2                     __ptext27:
  7179                           	callstack 0
  7180   0028E2                     _maze_return:
  7181                           	callstack 27
  7182   0028E2  0E00               	movlw	0
  7183   0028E4  6E2D               	movwf	(maze_return@i+1)^0,c
  7184   0028E6  0E32               	movlw	50
  7185   0028E8  6E2C               	movwf	maze_return@i^0,c
  7186   0028EA                     l4396:
  7187                           
  7188                           ;pathfinder_file.c: 119:             if(Operation_History[i] > 10){
  7189   0028EA  0E3C               	movlw	low _Operation_History
  7190   0028EC  242C               	addwf	maze_return@i^0,w,c
  7191   0028EE  6ED9               	movwf	fsr2l,c
  7192   0028F0  0E01               	movlw	high _Operation_History
  7193   0028F2  202D               	addwfc	(maze_return@i+1)^0,w,c
  7194   0028F4  6EDA               	movwf	fsr2h,c
  7195   0028F6  0E0A               	movlw	10
  7196   0028F8  64DF               	cpfsgt	indf2,c
  7197   0028FA  EF81  F014         	goto	u4921
  7198   0028FE  EF83  F014         	goto	u4920
  7199   002902                     u4921:
  7200   002902  EFC3  F014         	goto	l4410
  7201   002906                     u4920:
  7202   002906                     
  7203                           ;pathfinder_file.c: 120:                 unsigned char distance_back = Operation_History
      +                          [i] - 10;
  7204   002906  0E3C               	movlw	low _Operation_History
  7205   002908  242C               	addwf	maze_return@i^0,w,c
  7206   00290A  6ED9               	movwf	fsr2l,c
  7207   00290C  0E01               	movlw	high _Operation_History
  7208   00290E  202D               	addwfc	(maze_return@i+1)^0,w,c
  7209   002910  6EDA               	movwf	fsr2h,c
  7210   002912  50DF               	movf	indf2,w,c
  7211   002914  0FF6               	addlw	246
  7212   002916  6E29               	movwf	maze_return@distance_back^0,c
  7213   002918                     
  7214                           ;pathfinder_file.c: 121:                 for (int j = 0; j < distance_back-1; j++) {
  7215   002918  0E00               	movlw	0
  7216   00291A  6E28               	movwf	(maze_return@j+1)^0,c
  7217   00291C  0E00               	movlw	0
  7218   00291E  6E27               	movwf	maze_return@j^0,c
  7219   002920  EFA0  F014         	goto	l4406
  7220   002924                     l4402:
  7221                           
  7222                           ;pathfinder_file.c: 122:                     forward(c->forward_one, mL, mR);
  7223   002924  C022  F013         	movff	maze_return@mL,forward@mL
  7224   002928  C023  F014         	movff	maze_return@mR,forward@mR
  7225   00292C  5021               	movf	maze_return@c^0,w,c
  7226   00292E  6ED9               	movwf	fsr2l,c
  7227   002930  6ADA               	clrf	fsr2h,c
  7228   002932  0E05               	movlw	5
  7229   002934  26D9               	addwf	fsr2l,f,c
  7230   002936  50DF               	movf	indf2,w,c
  7231   002938  EC85  F01C         	call	_forward
  7232   00293C                     
  7233                           ;pathfinder_file.c: 123:                 }
  7234   00293C  4A27               	infsnz	maze_return@j^0,f,c
  7235   00293E  2A28               	incf	(maze_return@j+1)^0,f,c
  7236   002940                     l4406:
  7237   002940  0EFF               	movlw	255
  7238   002942  2429               	addwf	maze_return@distance_back^0,w,c
  7239   002944  6E24               	movwf	??_maze_return^0,c
  7240   002946  6A25               	clrf	(??_maze_return+1)^0,c
  7241   002948  0EFF               	movlw	255
  7242   00294A  2225               	addwfc	(??_maze_return+1)^0,f,c
  7243   00294C  5024               	movf	??_maze_return^0,w,c
  7244   00294E  5C27               	subwf	maze_return@j^0,w,c
  7245   002950  5028               	movf	(maze_return@j+1)^0,w,c
  7246   002952  0A80               	xorlw	128
  7247   002954  6E26               	movwf	(??_maze_return+2)^0,c
  7248   002956  5025               	movf	(??_maze_return+1)^0,w,c
  7249   002958  0A80               	xorlw	128
  7250   00295A  5826               	subwfb	(??_maze_return+2)^0,w,c
  7251   00295C  A0D8               	btfss	status,0,c
  7252   00295E  EFB3  F014         	goto	u4931
  7253   002962  EFB5  F014         	goto	u4930
  7254   002966                     u4931:
  7255   002966  EF92  F014         	goto	l4402
  7256   00296A                     u4930:
  7257   00296A                     
  7258                           ;pathfinder_file.c: 124:                 forward(c->forward_half, mL, mR);
  7259   00296A  C022  F013         	movff	maze_return@mL,forward@mL
  7260   00296E  C023  F014         	movff	maze_return@mR,forward@mR
  7261   002972  5021               	movf	maze_return@c^0,w,c
  7262   002974  6ED9               	movwf	fsr2l,c
  7263   002976  6ADA               	clrf	fsr2h,c
  7264   002978  0E07               	movlw	7
  7265   00297A  26D9               	addwf	fsr2l,f,c
  7266   00297C  50DF               	movf	indf2,w,c
  7267   00297E  EC85  F01C         	call	_forward
  7268                           
  7269                           ;pathfinder_file.c: 126:             }
  7270   002982  EF89  F016         	goto	l4438
  7271   002986                     l4410:
  7272   002986  0E3C               	movlw	low _Operation_History
  7273   002988  242C               	addwf	maze_return@i^0,w,c
  7274   00298A  6ED9               	movwf	fsr2l,c
  7275   00298C  0E01               	movlw	high _Operation_History
  7276   00298E  202D               	addwfc	(maze_return@i+1)^0,w,c
  7277   002990  6EDA               	movwf	fsr2h,c
  7278   002992  04DE               	decf	postinc2,w,c
  7279   002994  A4D8               	btfss	status,2,c
  7280   002996  EFCF  F014         	goto	u4941
  7281   00299A  EFD1  F014         	goto	u4940
  7282   00299E                     u4941:
  7283   00299E  EFEB  F014         	goto	l4414
  7284   0029A2                     u4940:
  7285   0029A2                     
  7286                           ;pathfinder_file.c: 129:                 leftTURN(c->left_90, mL, mR);
  7287   0029A2  C022  F013         	movff	maze_return@mL,leftTURN@mL
  7288   0029A6  C023  F014         	movff	maze_return@mR,leftTURN@mR
  7289   0029AA  5021               	movf	maze_return@c^0,w,c
  7290   0029AC  6ED9               	movwf	fsr2l,c
  7291   0029AE  6ADA               	clrf	fsr2h,c
  7292   0029B0  0E02               	movlw	2
  7293   0029B2  26D9               	addwf	fsr2l,f,c
  7294   0029B4  50DF               	movf	indf2,w,c
  7295   0029B6  EC04  F01E         	call	_leftTURN
  7296                           
  7297                           ;pathfinder_file.c: 130:                 backward(c->backward_one, mL, mR);
  7298   0029BA  C022  F013         	movff	maze_return@mL,backward@mL
  7299   0029BE  C023  F014         	movff	maze_return@mR,backward@mR
  7300   0029C2  5021               	movf	maze_return@c^0,w,c
  7301   0029C4  6ED9               	movwf	fsr2l,c
  7302   0029C6  6ADA               	clrf	fsr2h,c
  7303   0029C8  0E06               	movlw	6
  7304   0029CA  26D9               	addwf	fsr2l,f,c
  7305   0029CC  50DF               	movf	indf2,w,c
  7306   0029CE  ECC3  F01E         	call	_backward
  7307                           
  7308                           ;pathfinder_file.c: 131:             }
  7309   0029D2  EF89  F016         	goto	l4438
  7310   0029D6                     l4414:
  7311   0029D6  0E3C               	movlw	low _Operation_History
  7312   0029D8  242C               	addwf	maze_return@i^0,w,c
  7313   0029DA  6ED9               	movwf	fsr2l,c
  7314   0029DC  0E01               	movlw	high _Operation_History
  7315   0029DE  202D               	addwfc	(maze_return@i+1)^0,w,c
  7316   0029E0  6EDA               	movwf	fsr2h,c
  7317   0029E2  0E02               	movlw	2
  7318   0029E4  18DE               	xorwf	postinc2,w,c
  7319   0029E6  A4D8               	btfss	status,2,c
  7320   0029E8  EFF8  F014         	goto	u4951
  7321   0029EC  EFFA  F014         	goto	u4950
  7322   0029F0                     u4951:
  7323   0029F0  EF14  F015         	goto	l4418
  7324   0029F4                     u4950:
  7325   0029F4                     
  7326                           ;pathfinder_file.c: 134:                 rightTURN(c->right_90, mL, mR);
  7327   0029F4  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7328   0029F8  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7329   0029FC  5021               	movf	maze_return@c^0,w,c
  7330   0029FE  6ED9               	movwf	fsr2l,c
  7331   002A00  6ADA               	clrf	fsr2h,c
  7332   002A02  0E01               	movlw	1
  7333   002A04  26D9               	addwf	fsr2l,f,c
  7334   002A06  50DF               	movf	indf2,w,c
  7335   002A08  EC45  F01D         	call	_rightTURN
  7336                           
  7337                           ;pathfinder_file.c: 135:                 backward(c->backward_one, mL, mR);
  7338   002A0C  C022  F013         	movff	maze_return@mL,backward@mL
  7339   002A10  C023  F014         	movff	maze_return@mR,backward@mR
  7340   002A14  5021               	movf	maze_return@c^0,w,c
  7341   002A16  6ED9               	movwf	fsr2l,c
  7342   002A18  6ADA               	clrf	fsr2h,c
  7343   002A1A  0E06               	movlw	6
  7344   002A1C  26D9               	addwf	fsr2l,f,c
  7345   002A1E  50DF               	movf	indf2,w,c
  7346   002A20  ECC3  F01E         	call	_backward
  7347                           
  7348                           ;pathfinder_file.c: 136:             }
  7349   002A24  EF89  F016         	goto	l4438
  7350   002A28                     l4418:
  7351   002A28  0E3C               	movlw	low _Operation_History
  7352   002A2A  242C               	addwf	maze_return@i^0,w,c
  7353   002A2C  6ED9               	movwf	fsr2l,c
  7354   002A2E  0E01               	movlw	high _Operation_History
  7355   002A30  202D               	addwfc	(maze_return@i+1)^0,w,c
  7356   002A32  6EDA               	movwf	fsr2h,c
  7357   002A34  0E03               	movlw	3
  7358   002A36  18DE               	xorwf	postinc2,w,c
  7359   002A38  A4D8               	btfss	status,2,c
  7360   002A3A  EF21  F015         	goto	u4961
  7361   002A3E  EF23  F015         	goto	u4960
  7362   002A42                     u4961:
  7363   002A42  EF3D  F015         	goto	l4422
  7364   002A46                     u4960:
  7365   002A46                     
  7366                           ;pathfinder_file.c: 139:                 rightTURN(c->right_90, mL, mR);
  7367   002A46  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7368   002A4A  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7369   002A4E  5021               	movf	maze_return@c^0,w,c
  7370   002A50  6ED9               	movwf	fsr2l,c
  7371   002A52  6ADA               	clrf	fsr2h,c
  7372   002A54  0E01               	movlw	1
  7373   002A56  26D9               	addwf	fsr2l,f,c
  7374   002A58  50DF               	movf	indf2,w,c
  7375   002A5A  EC45  F01D         	call	_rightTURN
  7376                           
  7377                           ;pathfinder_file.c: 140:                 rightTURN(c->right_90, mL, mR);
  7378   002A5E  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7379   002A62  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7380   002A66  5021               	movf	maze_return@c^0,w,c
  7381   002A68  6ED9               	movwf	fsr2l,c
  7382   002A6A  6ADA               	clrf	fsr2h,c
  7383   002A6C  0E01               	movlw	1
  7384   002A6E  26D9               	addwf	fsr2l,f,c
  7385   002A70  50DF               	movf	indf2,w,c
  7386   002A72  EC45  F01D         	call	_rightTURN
  7387                           
  7388                           ;pathfinder_file.c: 141:             }
  7389   002A76  EF89  F016         	goto	l4438
  7390   002A7A                     l4422:
  7391   002A7A  0E3C               	movlw	low _Operation_History
  7392   002A7C  242C               	addwf	maze_return@i^0,w,c
  7393   002A7E  6ED9               	movwf	fsr2l,c
  7394   002A80  0E01               	movlw	high _Operation_History
  7395   002A82  202D               	addwfc	(maze_return@i+1)^0,w,c
  7396   002A84  6EDA               	movwf	fsr2h,c
  7397   002A86  0E04               	movlw	4
  7398   002A88  18DE               	xorwf	postinc2,w,c
  7399   002A8A  A4D8               	btfss	status,2,c
  7400   002A8C  EF4A  F015         	goto	u4971
  7401   002A90  EF4C  F015         	goto	u4970
  7402   002A94                     u4971:
  7403   002A94  EFAE  F015         	goto	l4426
  7404   002A98                     u4970:
  7405   002A98                     
  7406                           ;pathfinder_file.c: 145:                 rightTURN(c->right_90, mL, mR);
  7407   002A98  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7408   002A9C  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7409   002AA0  5021               	movf	maze_return@c^0,w,c
  7410   002AA2  6ED9               	movwf	fsr2l,c
  7411   002AA4  6ADA               	clrf	fsr2h,c
  7412   002AA6  0E01               	movlw	1
  7413   002AA8  26D9               	addwf	fsr2l,f,c
  7414   002AAA  50DF               	movf	indf2,w,c
  7415   002AAC  EC45  F01D         	call	_rightTURN
  7416                           
  7417                           ;pathfinder_file.c: 146:                 forward(c->forward_one, mL, mR);
  7418   002AB0  C022  F013         	movff	maze_return@mL,forward@mL
  7419   002AB4  C023  F014         	movff	maze_return@mR,forward@mR
  7420   002AB8  5021               	movf	maze_return@c^0,w,c
  7421   002ABA  6ED9               	movwf	fsr2l,c
  7422   002ABC  6ADA               	clrf	fsr2h,c
  7423   002ABE  0E05               	movlw	5
  7424   002AC0  26D9               	addwf	fsr2l,f,c
  7425   002AC2  50DF               	movf	indf2,w,c
  7426   002AC4  EC85  F01C         	call	_forward
  7427                           
  7428                           ;pathfinder_file.c: 149:                 forward(c->forward_one, mL, mR);
  7429   002AC8  C022  F013         	movff	maze_return@mL,forward@mL
  7430   002ACC  C023  F014         	movff	maze_return@mR,forward@mR
  7431   002AD0  5021               	movf	maze_return@c^0,w,c
  7432   002AD2  6ED9               	movwf	fsr2l,c
  7433   002AD4  6ADA               	clrf	fsr2h,c
  7434   002AD6  0E05               	movlw	5
  7435   002AD8  26D9               	addwf	fsr2l,f,c
  7436   002ADA  50DF               	movf	indf2,w,c
  7437   002ADC  EC85  F01C         	call	_forward
  7438                           
  7439                           ;pathfinder_file.c: 150:                 backward(c->backward_half, mL, mR);
  7440   002AE0  C022  F013         	movff	maze_return@mL,backward@mL
  7441   002AE4  C023  F014         	movff	maze_return@mR,backward@mR
  7442   002AE8  5021               	movf	maze_return@c^0,w,c
  7443   002AEA  6ED9               	movwf	fsr2l,c
  7444   002AEC  6ADA               	clrf	fsr2h,c
  7445   002AEE  0E08               	movlw	8
  7446   002AF0  26D9               	addwf	fsr2l,f,c
  7447   002AF2  50DF               	movf	indf2,w,c
  7448   002AF4  ECC3  F01E         	call	_backward
  7449                           
  7450                           ;pathfinder_file.c: 151:                 rightTURN(c->right_90, mL, mR);
  7451   002AF8  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7452   002AFC  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7453   002B00  5021               	movf	maze_return@c^0,w,c
  7454   002B02  6ED9               	movwf	fsr2l,c
  7455   002B04  6ADA               	clrf	fsr2h,c
  7456   002B06  0E01               	movlw	1
  7457   002B08  26D9               	addwf	fsr2l,f,c
  7458   002B0A  50DF               	movf	indf2,w,c
  7459   002B0C  EC45  F01D         	call	_rightTURN
  7460                           
  7461                           ;pathfinder_file.c: 152:                 rightTURN(c->right_90, mL, mR);
  7462   002B10  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7463   002B14  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7464   002B18  5021               	movf	maze_return@c^0,w,c
  7465   002B1A  6ED9               	movwf	fsr2l,c
  7466   002B1C  6ADA               	clrf	fsr2h,c
  7467   002B1E  0E01               	movlw	1
  7468   002B20  26D9               	addwf	fsr2l,f,c
  7469   002B22  50DF               	movf	indf2,w,c
  7470   002B24  EC45  F01D         	call	_rightTURN
  7471                           
  7472                           ;pathfinder_file.c: 153:                 backward(c->backward_one, mL, mR);
  7473   002B28  C022  F013         	movff	maze_return@mL,backward@mL
  7474   002B2C  C023  F014         	movff	maze_return@mR,backward@mR
  7475   002B30  5021               	movf	maze_return@c^0,w,c
  7476   002B32  6ED9               	movwf	fsr2l,c
  7477   002B34  6ADA               	clrf	fsr2h,c
  7478   002B36  0E06               	movlw	6
  7479   002B38  26D9               	addwf	fsr2l,f,c
  7480   002B3A  50DF               	movf	indf2,w,c
  7481   002B3C  ECC3  F01E         	call	_backward
  7482                           
  7483                           ;pathfinder_file.c: 154:                 forward(c->forward_half, mL, mR);
  7484   002B40  C022  F013         	movff	maze_return@mL,forward@mL
  7485   002B44  C023  F014         	movff	maze_return@mR,forward@mR
  7486   002B48  5021               	movf	maze_return@c^0,w,c
  7487   002B4A  6ED9               	movwf	fsr2l,c
  7488   002B4C  6ADA               	clrf	fsr2h,c
  7489   002B4E  0E07               	movlw	7
  7490   002B50  26D9               	addwf	fsr2l,f,c
  7491   002B52  50DF               	movf	indf2,w,c
  7492   002B54  EC85  F01C         	call	_forward
  7493                           
  7494                           ;pathfinder_file.c: 155:             }
  7495   002B58  EF89  F016         	goto	l4438
  7496   002B5C                     l4426:
  7497   002B5C  0E3C               	movlw	low _Operation_History
  7498   002B5E  242C               	addwf	maze_return@i^0,w,c
  7499   002B60  6ED9               	movwf	fsr2l,c
  7500   002B62  0E01               	movlw	high _Operation_History
  7501   002B64  202D               	addwfc	(maze_return@i+1)^0,w,c
  7502   002B66  6EDA               	movwf	fsr2h,c
  7503   002B68  0E05               	movlw	5
  7504   002B6A  18DE               	xorwf	postinc2,w,c
  7505   002B6C  A4D8               	btfss	status,2,c
  7506   002B6E  EFBB  F015         	goto	u4981
  7507   002B72  EFBD  F015         	goto	u4980
  7508   002B76                     u4981:
  7509   002B76  EF1F  F016         	goto	l4430
  7510   002B7A                     u4980:
  7511   002B7A                     
  7512                           ;pathfinder_file.c: 158:                 leftTURN(c->right_90, mL, mR);
  7513   002B7A  C022  F013         	movff	maze_return@mL,leftTURN@mL
  7514   002B7E  C023  F014         	movff	maze_return@mR,leftTURN@mR
  7515   002B82  5021               	movf	maze_return@c^0,w,c
  7516   002B84  6ED9               	movwf	fsr2l,c
  7517   002B86  6ADA               	clrf	fsr2h,c
  7518   002B88  0E01               	movlw	1
  7519   002B8A  26D9               	addwf	fsr2l,f,c
  7520   002B8C  50DF               	movf	indf2,w,c
  7521   002B8E  EC04  F01E         	call	_leftTURN
  7522                           
  7523                           ;pathfinder_file.c: 159:                 forward(c->forward_one, mL, mR);
  7524   002B92  C022  F013         	movff	maze_return@mL,forward@mL
  7525   002B96  C023  F014         	movff	maze_return@mR,forward@mR
  7526   002B9A  5021               	movf	maze_return@c^0,w,c
  7527   002B9C  6ED9               	movwf	fsr2l,c
  7528   002B9E  6ADA               	clrf	fsr2h,c
  7529   002BA0  0E05               	movlw	5
  7530   002BA2  26D9               	addwf	fsr2l,f,c
  7531   002BA4  50DF               	movf	indf2,w,c
  7532   002BA6  EC85  F01C         	call	_forward
  7533                           
  7534                           ;pathfinder_file.c: 162:                 forward(c->forward_one, mL, mR);
  7535   002BAA  C022  F013         	movff	maze_return@mL,forward@mL
  7536   002BAE  C023  F014         	movff	maze_return@mR,forward@mR
  7537   002BB2  5021               	movf	maze_return@c^0,w,c
  7538   002BB4  6ED9               	movwf	fsr2l,c
  7539   002BB6  6ADA               	clrf	fsr2h,c
  7540   002BB8  0E05               	movlw	5
  7541   002BBA  26D9               	addwf	fsr2l,f,c
  7542   002BBC  50DF               	movf	indf2,w,c
  7543   002BBE  EC85  F01C         	call	_forward
  7544                           
  7545                           ;pathfinder_file.c: 163:                 backward(c->backward_half, mL, mR);
  7546   002BC2  C022  F013         	movff	maze_return@mL,backward@mL
  7547   002BC6  C023  F014         	movff	maze_return@mR,backward@mR
  7548   002BCA  5021               	movf	maze_return@c^0,w,c
  7549   002BCC  6ED9               	movwf	fsr2l,c
  7550   002BCE  6ADA               	clrf	fsr2h,c
  7551   002BD0  0E08               	movlw	8
  7552   002BD2  26D9               	addwf	fsr2l,f,c
  7553   002BD4  50DF               	movf	indf2,w,c
  7554   002BD6  ECC3  F01E         	call	_backward
  7555                           
  7556                           ;pathfinder_file.c: 164:                 rightTURN(c->right_90, mL, mR);
  7557   002BDA  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7558   002BDE  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7559   002BE2  5021               	movf	maze_return@c^0,w,c
  7560   002BE4  6ED9               	movwf	fsr2l,c
  7561   002BE6  6ADA               	clrf	fsr2h,c
  7562   002BE8  0E01               	movlw	1
  7563   002BEA  26D9               	addwf	fsr2l,f,c
  7564   002BEC  50DF               	movf	indf2,w,c
  7565   002BEE  EC45  F01D         	call	_rightTURN
  7566                           
  7567                           ;pathfinder_file.c: 165:                 rightTURN(c->right_90, mL, mR);
  7568   002BF2  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7569   002BF6  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7570   002BFA  5021               	movf	maze_return@c^0,w,c
  7571   002BFC  6ED9               	movwf	fsr2l,c
  7572   002BFE  6ADA               	clrf	fsr2h,c
  7573   002C00  0E01               	movlw	1
  7574   002C02  26D9               	addwf	fsr2l,f,c
  7575   002C04  50DF               	movf	indf2,w,c
  7576   002C06  EC45  F01D         	call	_rightTURN
  7577                           
  7578                           ;pathfinder_file.c: 166:                 backward(c->backward_one, mL, mR);
  7579   002C0A  C022  F013         	movff	maze_return@mL,backward@mL
  7580   002C0E  C023  F014         	movff	maze_return@mR,backward@mR
  7581   002C12  5021               	movf	maze_return@c^0,w,c
  7582   002C14  6ED9               	movwf	fsr2l,c
  7583   002C16  6ADA               	clrf	fsr2h,c
  7584   002C18  0E06               	movlw	6
  7585   002C1A  26D9               	addwf	fsr2l,f,c
  7586   002C1C  50DF               	movf	indf2,w,c
  7587   002C1E  ECC3  F01E         	call	_backward
  7588                           
  7589                           ;pathfinder_file.c: 167:                 forward(c->forward_half, mL, mR);
  7590   002C22  C022  F013         	movff	maze_return@mL,forward@mL
  7591   002C26  C023  F014         	movff	maze_return@mR,forward@mR
  7592   002C2A  5021               	movf	maze_return@c^0,w,c
  7593   002C2C  6ED9               	movwf	fsr2l,c
  7594   002C2E  6ADA               	clrf	fsr2h,c
  7595   002C30  0E07               	movlw	7
  7596   002C32  26D9               	addwf	fsr2l,f,c
  7597   002C34  50DF               	movf	indf2,w,c
  7598   002C36  EC85  F01C         	call	_forward
  7599                           
  7600                           ;pathfinder_file.c: 169:             }
  7601   002C3A  EF89  F016         	goto	l4438
  7602   002C3E                     l4430:
  7603   002C3E  0E3C               	movlw	low _Operation_History
  7604   002C40  242C               	addwf	maze_return@i^0,w,c
  7605   002C42  6ED9               	movwf	fsr2l,c
  7606   002C44  0E01               	movlw	high _Operation_History
  7607   002C46  202D               	addwfc	(maze_return@i+1)^0,w,c
  7608   002C48  6EDA               	movwf	fsr2h,c
  7609   002C4A  0E06               	movlw	6
  7610   002C4C  18DE               	xorwf	postinc2,w,c
  7611   002C4E  A4D8               	btfss	status,2,c
  7612   002C50  EF2C  F016         	goto	u4991
  7613   002C54  EF2E  F016         	goto	u4990
  7614   002C58                     u4991:
  7615   002C58  EF54  F016         	goto	l4434
  7616   002C5C                     u4990:
  7617   002C5C                     
  7618                           ;pathfinder_file.c: 172:                 leftTURN(c->left_135, mL, mR);
  7619   002C5C  C022  F013         	movff	maze_return@mL,leftTURN@mL
  7620   002C60  C023  F014         	movff	maze_return@mR,leftTURN@mR
  7621   002C64  5021               	movf	maze_return@c^0,w,c
  7622   002C66  6ED9               	movwf	fsr2l,c
  7623   002C68  6ADA               	clrf	fsr2h,c
  7624   002C6A  0E04               	movlw	4
  7625   002C6C  26D9               	addwf	fsr2l,f,c
  7626   002C6E  50DF               	movf	indf2,w,c
  7627   002C70  EC04  F01E         	call	_leftTURN
  7628                           
  7629                           ;pathfinder_file.c: 173:                 backward(c->backward_one, mL, mR);
  7630   002C74  C022  F013         	movff	maze_return@mL,backward@mL
  7631   002C78  C023  F014         	movff	maze_return@mR,backward@mR
  7632   002C7C  5021               	movf	maze_return@c^0,w,c
  7633   002C7E  6ED9               	movwf	fsr2l,c
  7634   002C80  6ADA               	clrf	fsr2h,c
  7635   002C82  0E06               	movlw	6
  7636   002C84  26D9               	addwf	fsr2l,f,c
  7637   002C86  50DF               	movf	indf2,w,c
  7638   002C88  ECC3  F01E         	call	_backward
  7639                           
  7640                           ;pathfinder_file.c: 174:                 forward(c->forward_half, mL, mR);
  7641   002C8C  C022  F013         	movff	maze_return@mL,forward@mL
  7642   002C90  C023  F014         	movff	maze_return@mR,forward@mR
  7643   002C94  5021               	movf	maze_return@c^0,w,c
  7644   002C96  6ED9               	movwf	fsr2l,c
  7645   002C98  6ADA               	clrf	fsr2h,c
  7646   002C9A  0E07               	movlw	7
  7647   002C9C  26D9               	addwf	fsr2l,f,c
  7648   002C9E  50DF               	movf	indf2,w,c
  7649   002CA0  EC85  F01C         	call	_forward
  7650                           
  7651                           ;pathfinder_file.c: 175:             }
  7652   002CA4  EF89  F016         	goto	l4438
  7653   002CA8                     l4434:
  7654   002CA8  0E3C               	movlw	low _Operation_History
  7655   002CAA  242C               	addwf	maze_return@i^0,w,c
  7656   002CAC  6ED9               	movwf	fsr2l,c
  7657   002CAE  0E01               	movlw	high _Operation_History
  7658   002CB0  202D               	addwfc	(maze_return@i+1)^0,w,c
  7659   002CB2  6EDA               	movwf	fsr2h,c
  7660   002CB4  0E07               	movlw	7
  7661   002CB6  18DE               	xorwf	postinc2,w,c
  7662   002CB8  A4D8               	btfss	status,2,c
  7663   002CBA  EF61  F016         	goto	u5001
  7664   002CBE  EF63  F016         	goto	u5000
  7665   002CC2                     u5001:
  7666   002CC2  EF89  F016         	goto	l502
  7667   002CC6                     u5000:
  7668   002CC6                     
  7669                           ;pathfinder_file.c: 178:                 rightTURN(c->right_135, mL, mR);
  7670   002CC6  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7671   002CCA  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7672   002CCE  5021               	movf	maze_return@c^0,w,c
  7673   002CD0  6ED9               	movwf	fsr2l,c
  7674   002CD2  6ADA               	clrf	fsr2h,c
  7675   002CD4  0E03               	movlw	3
  7676   002CD6  26D9               	addwf	fsr2l,f,c
  7677   002CD8  50DF               	movf	indf2,w,c
  7678   002CDA  EC45  F01D         	call	_rightTURN
  7679                           
  7680                           ;pathfinder_file.c: 179:                 backward(c->backward_one, mL, mR);
  7681   002CDE  C022  F013         	movff	maze_return@mL,backward@mL
  7682   002CE2  C023  F014         	movff	maze_return@mR,backward@mR
  7683   002CE6  5021               	movf	maze_return@c^0,w,c
  7684   002CE8  6ED9               	movwf	fsr2l,c
  7685   002CEA  6ADA               	clrf	fsr2h,c
  7686   002CEC  0E06               	movlw	6
  7687   002CEE  26D9               	addwf	fsr2l,f,c
  7688   002CF0  50DF               	movf	indf2,w,c
  7689   002CF2  ECC3  F01E         	call	_backward
  7690                           
  7691                           ;pathfinder_file.c: 180:                 forward(c->forward_half, mL, mR);
  7692   002CF6  C022  F013         	movff	maze_return@mL,forward@mL
  7693   002CFA  C023  F014         	movff	maze_return@mR,forward@mR
  7694   002CFE  5021               	movf	maze_return@c^0,w,c
  7695   002D00  6ED9               	movwf	fsr2l,c
  7696   002D02  6ADA               	clrf	fsr2h,c
  7697   002D04  0E07               	movlw	7
  7698   002D06  26D9               	addwf	fsr2l,f,c
  7699   002D08  50DF               	movf	indf2,w,c
  7700   002D0A  EC85  F01C         	call	_forward
  7701   002D0E  EF89  F016         	goto	l4438
  7702   002D12                     l502:
  7703   002D12                     l4438:
  7704                           
  7705                           ;pathfinder_file.c: 184:         }
  7706   002D12  062C               	decf	maze_return@i^0,f,c
  7707   002D14  A0D8               	btfss	status,0,c
  7708   002D16  062D               	decf	(maze_return@i+1)^0,f,c
  7709   002D18  BE2D               	btfsc	(maze_return@i+1)^0,7,c
  7710   002D1A  EF93  F016         	goto	u5010
  7711   002D1E  EF91  F016         	goto	u5011
  7712   002D22                     u5011:
  7713   002D22  EF75  F014         	goto	l4396
  7714   002D26                     u5010:
  7715   002D26                     
  7716                           ;pathfinder_file.c: 187:         Operation_Count = 0;
  7717   002D26  0E00               	movlw	0
  7718   002D28  0100               	movlb	0	; () banked
  7719   002D2A  6FDB               	movwf	_Operation_Count& (0+255),b
  7720                           
  7721                           ;pathfinder_file.c: 188:         for (int i = 0; i < 50; ++i) {
  7722   002D2C  0E00               	movlw	0
  7723   002D2E  6E2B               	movwf	(maze_return@i_1875+1)^0,c
  7724   002D30  0E00               	movlw	0
  7725   002D32  6E2A               	movwf	maze_return@i_1875^0,c
  7726   002D34                     l4448:
  7727                           
  7728                           ;pathfinder_file.c: 189:             Operation_History[i] = 0;
  7729   002D34  0E3C               	movlw	low _Operation_History
  7730   002D36  242A               	addwf	maze_return@i_1875^0,w,c
  7731   002D38  6ED9               	movwf	fsr2l,c
  7732   002D3A  0E01               	movlw	high _Operation_History
  7733   002D3C  202B               	addwfc	(maze_return@i_1875+1)^0,w,c
  7734   002D3E  6EDA               	movwf	fsr2h,c
  7735   002D40  6ADF               	clrf	indf2,c
  7736   002D42                     
  7737                           ;pathfinder_file.c: 190:         }
  7738   002D42  4A2A               	infsnz	maze_return@i_1875^0,f,c
  7739   002D44  2A2B               	incf	(maze_return@i_1875+1)^0,f,c
  7740   002D46  BE2B               	btfsc	(maze_return@i_1875+1)^0,7,c
  7741   002D48  EFAF  F016         	goto	u5021
  7742   002D4C  502B               	movf	(maze_return@i_1875+1)^0,w,c
  7743   002D4E  E109               	bnz	u5020
  7744   002D50  0E32               	movlw	50
  7745   002D52  5C2A               	subwf	maze_return@i_1875^0,w,c
  7746   002D54  A0D8               	btfss	status,0,c
  7747   002D56  EFAF  F016         	goto	u5021
  7748   002D5A  EFB1  F016         	goto	u5020
  7749   002D5E                     u5021:
  7750   002D5E  EF9A  F016         	goto	l4448
  7751   002D62                     u5020:
  7752   002D62  0012               	return		;funcret
  7753   002D64                     __end_of_maze_return:
  7754                           	callstack 0
  7755                           
  7756 ;; *************** function _initDCmotorsPWM *****************
  7757 ;; Defined at:
  7758 ;;		line 5 in file "dc_motor_v1.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      void 
  7765 ;; Registers used:
  7766 ;;		wreg, status,2
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7776 ;;Total ram usage:        2 bytes
  7777 ;; Hardware stack levels used: 1
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_main
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text28
  7786   0047AC                     __ptext28:
  7787                           	callstack 0
  7788   0047AC                     _initDCmotorsPWM:
  7789                           	callstack 30
  7790   0047AC                     
  7791                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  7792   0047AC  9485               	bcf	133,2,c	;volatile
  7793                           
  7794                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  7795   0047AE  9885               	bcf	133,4,c	;volatile
  7796                           
  7797                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  7798   0047B0  9E83               	bcf	131,7,c	;volatile
  7799                           
  7800                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  7801   0047B2  9C87               	bcf	135,6,c	;volatile
  7802                           
  7803                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  7804   0047B4  947D               	bcf	125,2,c	;volatile
  7805                           
  7806                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  7807   0047B6  987D               	bcf	125,4,c	;volatile
  7808                           
  7809                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  7810   0047B8  9E7B               	bcf	123,7,c	;volatile
  7811                           
  7812                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  7813   0047BA  9C7F               	bcf	127,6,c	;volatile
  7814   0047BC                     
  7815                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  7816   0047BC  0E05               	movlw	5
  7817   0047BE  010E               	movlb	14	; () banked
  7818   0047C0  6F74               	movwf	116,b	;volatile
  7819                           
  7820                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  7821   0047C2  0E06               	movlw	6
  7822   0047C4  6F76               	movwf	118,b	;volatile
  7823                           
  7824                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  7825   0047C6  0E07               	movlw	7
  7826   0047C8  6F69               	movwf	105,b	;volatile
  7827                           
  7828                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  7829   0047CA  0E08               	movlw	8
  7830   0047CC  6F88               	movwf	136,b	;volatile
  7831                           
  7832                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  7833   0047CE  50BD               	movf	189,w,c	;volatile
  7834   0047D0  0B8F               	andlw	-113
  7835   0047D2  0940               	iorlw	64
  7836   0047D4  6EBD               	movwf	189,c	;volatile
  7837                           
  7838                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  7839   0047D6  0EE0               	movlw	-32
  7840   0047D8  16BE               	andwf	190,f,c	;volatile
  7841                           
  7842                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  7843   0047DA  50BF               	movf	191,w,c	;volatile
  7844   0047DC  0BF0               	andlw	-16
  7845   0047DE  0901               	iorlw	1
  7846   0047E0  6EBF               	movwf	191,c	;volatile
  7847   0047E2                     
  7848                           ; BSR set to: 14
  7849                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  7850   0047E2  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7851   0047E6                     
  7852                           ; BSR set to: 14
  7853                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  7854   0047E6  8EBD               	bsf	189,7,c	;volatile
  7855                           
  7856                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  7857   0047E8  0E00               	movlw	0
  7858   0047EA  6EAA               	movwf	170,c	;volatile
  7859                           
  7860                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  7861   0047EC  0E00               	movlw	0
  7862   0047EE  6EA6               	movwf	166,c	;volatile
  7863                           
  7864                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  7865   0047F0  0E00               	movlw	0
  7866   0047F2  010F               	movlb	15	; () banked
  7867   0047F4  6F25               	movwf	37,b	;volatile
  7868                           
  7869                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  7870   0047F6  0E00               	movlw	0
  7871   0047F8  6F21               	movwf	33,b	;volatile
  7872                           
  7873                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7874   0047FA  0EFC               	movlw	-4
  7875   0047FC  16AD               	andwf	173,f,c	;volatile
  7876                           
  7877                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7878   0047FE  0EF3               	movlw	-13
  7879   004800  16AD               	andwf	173,f,c	;volatile
  7880                           
  7881                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7882   004802  0ECF               	movlw	-49
  7883   004804  16AD               	andwf	173,f,c	;volatile
  7884                           
  7885                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7886   004806  0E3F               	movlw	-193
  7887   004808  16AD               	andwf	173,f,c	;volatile
  7888   00480A                     
  7889                           ; BSR set to: 15
  7890                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  7891   00480A  88AB               	bsf	171,4,c	;volatile
  7892                           
  7893                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7894   00480C  50AB               	movf	171,w,c	;volatile
  7895   00480E  0BF0               	andlw	-16
  7896   004810  090C               	iorlw	12
  7897   004812  6EAB               	movwf	171,c	;volatile
  7898   004814                     
  7899                           ; BSR set to: 15
  7900                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  7901   004814  8EAB               	bsf	171,7,c	;volatile
  7902   004816                     
  7903                           ; BSR set to: 15
  7904                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  7905   004816  88A7               	bsf	167,4,c	;volatile
  7906                           
  7907                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7908   004818  50A7               	movf	167,w,c	;volatile
  7909   00481A  0BF0               	andlw	-16
  7910   00481C  090C               	iorlw	12
  7911   00481E  6EA7               	movwf	167,c	;volatile
  7912   004820                     
  7913                           ; BSR set to: 15
  7914                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  7915   004820  8EA7               	bsf	167,7,c	;volatile
  7916   004822                     
  7917                           ; BSR set to: 15
  7918                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  7919   004822  8926               	bsf	38,4,b	;volatile
  7920                           
  7921                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7922   004824  5126               	movf	38,w,b	;volatile
  7923   004826  0BF0               	andlw	-16
  7924   004828  090C               	iorlw	12
  7925   00482A  6F26               	movwf	38,b	;volatile
  7926   00482C                     
  7927                           ; BSR set to: 15
  7928                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  7929   00482C  8F26               	bsf	38,7,b	;volatile
  7930   00482E                     
  7931                           ; BSR set to: 15
  7932                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  7933   00482E  8922               	bsf	34,4,b	;volatile
  7934                           
  7935                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7936   004830  5122               	movf	34,w,b	;volatile
  7937   004832  0BF0               	andlw	-16
  7938   004834  090C               	iorlw	12
  7939   004836  6F22               	movwf	34,b	;volatile
  7940   004838                     
  7941                           ; BSR set to: 15
  7942                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  7943   004838  8F22               	bsf	34,7,b	;volatile
  7944   00483A                     
  7945                           ; BSR set to: 15
  7946                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  7947   00483A  9688               	bcf	136,3,c	;volatile
  7948   00483C                     
  7949                           ; BSR set to: 15
  7950                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  7951   00483C  9680               	bcf	128,3,c	;volatile
  7952   00483E                     
  7953                           ; BSR set to: 15
  7954   00483E  0012               	return		;funcret
  7955   004840                     __end_of_initDCmotorsPWM:
  7956                           	callstack 0
  7957                           
  7958 ;; *************** function _calibration_routine *****************
  7959 ;; Defined at:
  7960 ;;		line 89 in file "calibration.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  c               1   32[COMRAM] PTR struct calibration_s
  7963 ;;		 -> calibration(9), 
  7964 ;;  mL              1   33[COMRAM] PTR struct DC_motor
  7965 ;;		 -> motorL(9), 
  7966 ;;  mR              1   34[COMRAM] PTR struct DC_motor
  7967 ;;		 -> motorR(9), 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      void 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7979 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7983 ;;Total ram usage:        4 bytes
  7984 ;; Hardware stack levels used: 1
  7985 ;; Hardware stack levels required when called: 3
  7986 ;; This function calls:
  7987 ;;		_adjust_calibration
  7988 ;;		_backward
  7989 ;;		_forward
  7990 ;;		_leftTURN
  7991 ;;		_rightTURN
  7992 ;;		_switch_calibration
  7993 ;; This function is called by:
  7994 ;;		_main
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text29
  7999   003528                     __ptext29:
  8000                           	callstack 0
  8001   003528                     _calibration_routine:
  8002                           	callstack 27
  8003   003528                     l206:
  8004   003528                     
  8005                           ;calibration.c: 95:         if(c->index == 1){
  8006   003528  5021               	movf	calibration_routine@c^0,w,c
  8007   00352A  6ED9               	movwf	fsr2l,c
  8008   00352C  6ADA               	clrf	fsr2h,c
  8009   00352E  04DE               	decf	postinc2,w,c
  8010   003530  A4D8               	btfss	status,2,c
  8011   003532  EF9D  F01A         	goto	u4721
  8012   003536  EF9F  F01A         	goto	u4720
  8013   00353A                     u4721:
  8014   00353A  EFB3  F01A         	goto	l4182
  8015   00353E                     u4720:
  8016   00353E                     
  8017                           ;calibration.c: 96:             adjust_calibration(&(c->right_90));
  8018   00353E  2821               	incf	calibration_routine@c^0,w,c
  8019   003540  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8020   003542  EC2B  F020         	call	_adjust_calibration	;wreg free
  8021   003546                     
  8022                           ;calibration.c: 97:             rightTURN(c->right_90, mL, mR);
  8023   003546  C022  F013         	movff	calibration_routine@mL,rightTURN@mL
  8024   00354A  C023  F014         	movff	calibration_routine@mR,rightTURN@mR
  8025   00354E  5021               	movf	calibration_routine@c^0,w,c
  8026   003550  6ED9               	movwf	fsr2l,c
  8027   003552  6ADA               	clrf	fsr2h,c
  8028   003554  0E01               	movlw	1
  8029   003556  26D9               	addwf	fsr2l,f,c
  8030   003558  50DF               	movf	indf2,w,c
  8031   00355A  EC45  F01D         	call	_rightTURN
  8032   00355E                     
  8033                           ;calibration.c: 98:             switch_calibration(&(c->index));
  8034   00355E  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8035   003562  EC2A  F023         	call	_switch_calibration	;wreg free
  8036   003566                     l4182:
  8037                           
  8038                           ;calibration.c: 101:         if(c->index == 2){
  8039   003566  5021               	movf	calibration_routine@c^0,w,c
  8040   003568  6ED9               	movwf	fsr2l,c
  8041   00356A  6ADA               	clrf	fsr2h,c
  8042   00356C  0E02               	movlw	2
  8043   00356E  18DE               	xorwf	postinc2,w,c
  8044   003570  A4D8               	btfss	status,2,c
  8045   003572  EFBD  F01A         	goto	u4731
  8046   003576  EFBF  F01A         	goto	u4730
  8047   00357A                     u4731:
  8048   00357A  EFD4  F01A         	goto	l4190
  8049   00357E                     u4730:
  8050   00357E                     
  8051                           ;calibration.c: 102:             adjust_calibration(&(c->left_90));
  8052   00357E  5021               	movf	calibration_routine@c^0,w,c
  8053   003580  0F02               	addlw	2
  8054   003582  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8055   003584  EC2B  F020         	call	_adjust_calibration	;wreg free
  8056   003588                     
  8057                           ;calibration.c: 103:             leftTURN(c->left_90, mL, mR);
  8058   003588  C022  F013         	movff	calibration_routine@mL,leftTURN@mL
  8059   00358C  C023  F014         	movff	calibration_routine@mR,leftTURN@mR
  8060   003590  5021               	movf	calibration_routine@c^0,w,c
  8061   003592  6ED9               	movwf	fsr2l,c
  8062   003594  6ADA               	clrf	fsr2h,c
  8063   003596  0E02               	movlw	2
  8064   003598  26D9               	addwf	fsr2l,f,c
  8065   00359A  50DF               	movf	indf2,w,c
  8066   00359C  EC04  F01E         	call	_leftTURN
  8067   0035A0                     
  8068                           ;calibration.c: 104:             switch_calibration(&(c->index));
  8069   0035A0  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8070   0035A4  EC2A  F023         	call	_switch_calibration	;wreg free
  8071   0035A8                     l4190:
  8072                           
  8073                           ;calibration.c: 107:         if(c->index == 3){
  8074   0035A8  5021               	movf	calibration_routine@c^0,w,c
  8075   0035AA  6ED9               	movwf	fsr2l,c
  8076   0035AC  6ADA               	clrf	fsr2h,c
  8077   0035AE  0E03               	movlw	3
  8078   0035B0  18DE               	xorwf	postinc2,w,c
  8079   0035B2  A4D8               	btfss	status,2,c
  8080   0035B4  EFDE  F01A         	goto	u4741
  8081   0035B8  EFE0  F01A         	goto	u4740
  8082   0035BC                     u4741:
  8083   0035BC  EFF5  F01A         	goto	l4198
  8084   0035C0                     u4740:
  8085   0035C0                     
  8086                           ;calibration.c: 108:             adjust_calibration(&(c->right_135));
  8087   0035C0  5021               	movf	calibration_routine@c^0,w,c
  8088   0035C2  0F03               	addlw	3
  8089   0035C4  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8090   0035C6  EC2B  F020         	call	_adjust_calibration	;wreg free
  8091   0035CA                     
  8092                           ;calibration.c: 109:             rightTURN(c->right_135, mL, mR);
  8093   0035CA  C022  F013         	movff	calibration_routine@mL,rightTURN@mL
  8094   0035CE  C023  F014         	movff	calibration_routine@mR,rightTURN@mR
  8095   0035D2  5021               	movf	calibration_routine@c^0,w,c
  8096   0035D4  6ED9               	movwf	fsr2l,c
  8097   0035D6  6ADA               	clrf	fsr2h,c
  8098   0035D8  0E03               	movlw	3
  8099   0035DA  26D9               	addwf	fsr2l,f,c
  8100   0035DC  50DF               	movf	indf2,w,c
  8101   0035DE  EC45  F01D         	call	_rightTURN
  8102   0035E2                     
  8103                           ;calibration.c: 110:             switch_calibration(&(c->index));
  8104   0035E2  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8105   0035E6  EC2A  F023         	call	_switch_calibration	;wreg free
  8106   0035EA                     l4198:
  8107                           
  8108                           ;calibration.c: 112:         if(c->index == 4){
  8109   0035EA  5021               	movf	calibration_routine@c^0,w,c
  8110   0035EC  6ED9               	movwf	fsr2l,c
  8111   0035EE  6ADA               	clrf	fsr2h,c
  8112   0035F0  0E04               	movlw	4
  8113   0035F2  18DE               	xorwf	postinc2,w,c
  8114   0035F4  A4D8               	btfss	status,2,c
  8115   0035F6  EFFF  F01A         	goto	u4751
  8116   0035FA  EF01  F01B         	goto	u4750
  8117   0035FE                     u4751:
  8118   0035FE  EF16  F01B         	goto	l4206
  8119   003602                     u4750:
  8120   003602                     
  8121                           ;calibration.c: 113:             adjust_calibration(&(c->left_135));
  8122   003602  5021               	movf	calibration_routine@c^0,w,c
  8123   003604  0F04               	addlw	4
  8124   003606  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8125   003608  EC2B  F020         	call	_adjust_calibration	;wreg free
  8126   00360C                     
  8127                           ;calibration.c: 114:             leftTURN(c->left_135, mL, mR);
  8128   00360C  C022  F013         	movff	calibration_routine@mL,leftTURN@mL
  8129   003610  C023  F014         	movff	calibration_routine@mR,leftTURN@mR
  8130   003614  5021               	movf	calibration_routine@c^0,w,c
  8131   003616  6ED9               	movwf	fsr2l,c
  8132   003618  6ADA               	clrf	fsr2h,c
  8133   00361A  0E04               	movlw	4
  8134   00361C  26D9               	addwf	fsr2l,f,c
  8135   00361E  50DF               	movf	indf2,w,c
  8136   003620  EC04  F01E         	call	_leftTURN
  8137   003624                     
  8138                           ;calibration.c: 115:             switch_calibration(&(c->index));
  8139   003624  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8140   003628  EC2A  F023         	call	_switch_calibration	;wreg free
  8141   00362C                     l4206:
  8142                           
  8143                           ;calibration.c: 118:         if(c->index == 5 ){
  8144   00362C  5021               	movf	calibration_routine@c^0,w,c
  8145   00362E  6ED9               	movwf	fsr2l,c
  8146   003630  6ADA               	clrf	fsr2h,c
  8147   003632  0E05               	movlw	5
  8148   003634  18DE               	xorwf	postinc2,w,c
  8149   003636  A4D8               	btfss	status,2,c
  8150   003638  EF20  F01B         	goto	u4761
  8151   00363C  EF22  F01B         	goto	u4760
  8152   003640                     u4761:
  8153   003640  EF37  F01B         	goto	l4214
  8154   003644                     u4760:
  8155   003644                     
  8156                           ;calibration.c: 119:             adjust_calibration(&(c->forward_one));
  8157   003644  5021               	movf	calibration_routine@c^0,w,c
  8158   003646  0F05               	addlw	5
  8159   003648  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8160   00364A  EC2B  F020         	call	_adjust_calibration	;wreg free
  8161   00364E                     
  8162                           ;calibration.c: 120:             forward(c->forward_one, mL, mR);
  8163   00364E  C022  F013         	movff	calibration_routine@mL,forward@mL
  8164   003652  C023  F014         	movff	calibration_routine@mR,forward@mR
  8165   003656  5021               	movf	calibration_routine@c^0,w,c
  8166   003658  6ED9               	movwf	fsr2l,c
  8167   00365A  6ADA               	clrf	fsr2h,c
  8168   00365C  0E05               	movlw	5
  8169   00365E  26D9               	addwf	fsr2l,f,c
  8170   003660  50DF               	movf	indf2,w,c
  8171   003662  EC85  F01C         	call	_forward
  8172   003666                     
  8173                           ;calibration.c: 121:             switch_calibration(&(c->index));
  8174   003666  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8175   00366A  EC2A  F023         	call	_switch_calibration	;wreg free
  8176   00366E                     l4214:
  8177                           
  8178                           ;calibration.c: 124:         if(c->index == 6){
  8179   00366E  5021               	movf	calibration_routine@c^0,w,c
  8180   003670  6ED9               	movwf	fsr2l,c
  8181   003672  6ADA               	clrf	fsr2h,c
  8182   003674  0E06               	movlw	6
  8183   003676  18DE               	xorwf	postinc2,w,c
  8184   003678  A4D8               	btfss	status,2,c
  8185   00367A  EF41  F01B         	goto	u4771
  8186   00367E  EF43  F01B         	goto	u4770
  8187   003682                     u4771:
  8188   003682  EF58  F01B         	goto	l4222
  8189   003686                     u4770:
  8190   003686                     
  8191                           ;calibration.c: 125:             adjust_calibration(&(c->backward_one));
  8192   003686  5021               	movf	calibration_routine@c^0,w,c
  8193   003688  0F06               	addlw	6
  8194   00368A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8195   00368C  EC2B  F020         	call	_adjust_calibration	;wreg free
  8196   003690                     
  8197                           ;calibration.c: 126:             backward(c->backward_one, mL, mR);
  8198   003690  C022  F013         	movff	calibration_routine@mL,backward@mL
  8199   003694  C023  F014         	movff	calibration_routine@mR,backward@mR
  8200   003698  5021               	movf	calibration_routine@c^0,w,c
  8201   00369A  6ED9               	movwf	fsr2l,c
  8202   00369C  6ADA               	clrf	fsr2h,c
  8203   00369E  0E06               	movlw	6
  8204   0036A0  26D9               	addwf	fsr2l,f,c
  8205   0036A2  50DF               	movf	indf2,w,c
  8206   0036A4  ECC3  F01E         	call	_backward
  8207   0036A8                     
  8208                           ;calibration.c: 127:             switch_calibration(&(c->index));
  8209   0036A8  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8210   0036AC  EC2A  F023         	call	_switch_calibration	;wreg free
  8211   0036B0                     l4222:
  8212                           
  8213                           ;calibration.c: 130:         if(c->index == 7 ){
  8214   0036B0  5021               	movf	calibration_routine@c^0,w,c
  8215   0036B2  6ED9               	movwf	fsr2l,c
  8216   0036B4  6ADA               	clrf	fsr2h,c
  8217   0036B6  0E07               	movlw	7
  8218   0036B8  18DE               	xorwf	postinc2,w,c
  8219   0036BA  A4D8               	btfss	status,2,c
  8220   0036BC  EF62  F01B         	goto	u4781
  8221   0036C0  EF64  F01B         	goto	u4780
  8222   0036C4                     u4781:
  8223   0036C4  EF79  F01B         	goto	l4230
  8224   0036C8                     u4780:
  8225   0036C8                     
  8226                           ;calibration.c: 131:             adjust_calibration(&(c->forward_half));
  8227   0036C8  5021               	movf	calibration_routine@c^0,w,c
  8228   0036CA  0F07               	addlw	7
  8229   0036CC  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8230   0036CE  EC2B  F020         	call	_adjust_calibration	;wreg free
  8231   0036D2                     
  8232                           ;calibration.c: 132:             forward(c->forward_half, mL, mR);
  8233   0036D2  C022  F013         	movff	calibration_routine@mL,forward@mL
  8234   0036D6  C023  F014         	movff	calibration_routine@mR,forward@mR
  8235   0036DA  5021               	movf	calibration_routine@c^0,w,c
  8236   0036DC  6ED9               	movwf	fsr2l,c
  8237   0036DE  6ADA               	clrf	fsr2h,c
  8238   0036E0  0E07               	movlw	7
  8239   0036E2  26D9               	addwf	fsr2l,f,c
  8240   0036E4  50DF               	movf	indf2,w,c
  8241   0036E6  EC85  F01C         	call	_forward
  8242   0036EA                     
  8243                           ;calibration.c: 133:             switch_calibration(&(c->index));
  8244   0036EA  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8245   0036EE  EC2A  F023         	call	_switch_calibration	;wreg free
  8246   0036F2                     l4230:
  8247                           
  8248                           ;calibration.c: 136:         if(c->index == 8){
  8249   0036F2  5021               	movf	calibration_routine@c^0,w,c
  8250   0036F4  6ED9               	movwf	fsr2l,c
  8251   0036F6  6ADA               	clrf	fsr2h,c
  8252   0036F8  0E08               	movlw	8
  8253   0036FA  18DE               	xorwf	postinc2,w,c
  8254   0036FC  A4D8               	btfss	status,2,c
  8255   0036FE  EF83  F01B         	goto	u4791
  8256   003702  EF85  F01B         	goto	u4790
  8257   003706                     u4791:
  8258   003706  EF9A  F01B         	goto	l4238
  8259   00370A                     u4790:
  8260   00370A                     
  8261                           ;calibration.c: 137:             adjust_calibration(&(c->backward_half));
  8262   00370A  5021               	movf	calibration_routine@c^0,w,c
  8263   00370C  0F08               	addlw	8
  8264   00370E  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8265   003710  EC2B  F020         	call	_adjust_calibration	;wreg free
  8266   003714                     
  8267                           ;calibration.c: 138:             backward(c->backward_half, mL, mR);
  8268   003714  C022  F013         	movff	calibration_routine@mL,backward@mL
  8269   003718  C023  F014         	movff	calibration_routine@mR,backward@mR
  8270   00371C  5021               	movf	calibration_routine@c^0,w,c
  8271   00371E  6ED9               	movwf	fsr2l,c
  8272   003720  6ADA               	clrf	fsr2h,c
  8273   003722  0E08               	movlw	8
  8274   003724  26D9               	addwf	fsr2l,f,c
  8275   003726  50DF               	movf	indf2,w,c
  8276   003728  ECC3  F01E         	call	_backward
  8277   00372C                     
  8278                           ;calibration.c: 139:             switch_calibration(&(c->index));
  8279   00372C  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8280   003730  EC2A  F023         	call	_switch_calibration	;wreg free
  8281   003734                     l4238:
  8282                           
  8283                           ;calibration.c: 142:         if(c->index >= 9){
  8284   003734  5021               	movf	calibration_routine@c^0,w,c
  8285   003736  6ED9               	movwf	fsr2l,c
  8286   003738  6ADA               	clrf	fsr2h,c
  8287   00373A  0E08               	movlw	8
  8288   00373C  64DF               	cpfsgt	indf2,c
  8289   00373E  EFA3  F01B         	goto	u4801
  8290   003742  EFA5  F01B         	goto	u4800
  8291   003746                     u4801:
  8292   003746  EF94  F01A         	goto	l206
  8293   00374A                     u4800:
  8294   00374A                     
  8295                           ;calibration.c: 143:             c->index = 1;
  8296   00374A  5021               	movf	calibration_routine@c^0,w,c
  8297   00374C  6ED9               	movwf	fsr2l,c
  8298   00374E  6ADA               	clrf	fsr2h,c
  8299   003750  0E01               	movlw	1
  8300   003752  6EDF               	movwf	indf2,c
  8301   003754  0012               	return		;funcret
  8302   003756                     __end_of_calibration_routine:
  8303                           	callstack 0
  8304                           
  8305 ;; *************** function _switch_calibration *****************
  8306 ;; Defined at:
  8307 ;;		line 64 in file "calibration.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  calibration_    1    0[COMRAM] PTR int 
  8310 ;;		 -> calibration(9), 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8322 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8326 ;;Total ram usage:        3 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_calibration_routine
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text30
  8336   004654                     __ptext30:
  8337                           	callstack 0
  8338   004654                     _switch_calibration:
  8339                           	callstack 29
  8340   004654                     l198:
  8341                           
  8342                           ;calibration.c: 70:         if(!PORTFbits.RF2){
  8343   004654  B48E               	btfsc	142,2,c	;volatile
  8344   004656  EF2F  F023         	goto	u4451
  8345   00465A  EF31  F023         	goto	u4450
  8346   00465E                     u4451:
  8347   00465E  EF5F  F023         	goto	l199
  8348   004662                     u4450:
  8349   004662                     
  8350                           ;calibration.c: 71:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8351   004662  0E11               	movlw	17
  8352   004664  6E03               	movwf	(??_switch_calibration+1)^0,c
  8353   004666  0E3C               	movlw	60
  8354   004668  6E02               	movwf	??_switch_calibration^0,c
  8355   00466A  0ECB               	movlw	203
  8356   00466C                     u5197:
  8357   00466C  2EE8               	decfsz	wreg,f,c
  8358   00466E  D7FE               	bra	u5197
  8359   004670  2E02               	decfsz	??_switch_calibration^0,f,c
  8360   004672  D7FC               	bra	u5197
  8361   004674  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8362   004676  D7FA               	bra	u5197
  8363   004678  0000               	nop	
  8364   00467A                     
  8365                           ;calibration.c: 72:             *calibration_index = *calibration_index + 1;
  8366   00467A  5001               	movf	switch_calibration@calibration_index^0,w,c
  8367   00467C  6ED9               	movwf	fsr2l,c
  8368   00467E  6ADA               	clrf	fsr2h,c
  8369   004680  CFDE F002          	movff	postinc2,??_switch_calibration
  8370   004684  CFDD F003          	movff	postdec2,??_switch_calibration+1
  8371   004688  0E01               	movlw	1
  8372   00468A  2602               	addwf	??_switch_calibration^0,f,c
  8373   00468C  0E00               	movlw	0
  8374   00468E  2203               	addwfc	(??_switch_calibration+1)^0,f,c
  8375   004690  5001               	movf	switch_calibration@calibration_index^0,w,c
  8376   004692  6ED9               	movwf	fsr2l,c
  8377   004694  6ADA               	clrf	fsr2h,c
  8378   004696  C002  FFDE         	movff	??_switch_calibration,postinc2
  8379   00469A  C003  FFDD         	movff	??_switch_calibration+1,postdec2
  8380   00469E                     
  8381                           ;calibration.c: 73:             LATDbits.LATD7 = 1;
  8382   00469E  8E7C               	bsf	124,7,c	;volatile
  8383   0046A0                     
  8384                           ;calibration.c: 74:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8385   0046A0  0E11               	movlw	17
  8386   0046A2  6E03               	movwf	(??_switch_calibration+1)^0,c
  8387   0046A4  0E3C               	movlw	60
  8388   0046A6  6E02               	movwf	??_switch_calibration^0,c
  8389   0046A8  0ECB               	movlw	203
  8390   0046AA                     u5207:
  8391   0046AA  2EE8               	decfsz	wreg,f,c
  8392   0046AC  D7FE               	bra	u5207
  8393   0046AE  2E02               	decfsz	??_switch_calibration^0,f,c
  8394   0046B0  D7FC               	bra	u5207
  8395   0046B2  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8396   0046B4  D7FA               	bra	u5207
  8397   0046B6  0000               	nop	
  8398   0046B8                     
  8399                           ;calibration.c: 75:             LATDbits.LATD7 = 0;
  8400   0046B8  9E7C               	bcf	124,7,c	;volatile
  8401                           
  8402                           ;calibration.c: 76:             break;
  8403   0046BA  EF80  F023         	goto	l203
  8404   0046BE                     l199:
  8405                           
  8406                           ;calibration.c: 79:         if(!PORTFbits.RF3){
  8407   0046BE  B68E               	btfsc	142,3,c	;volatile
  8408   0046C0  EF64  F023         	goto	u4461
  8409   0046C4  EF66  F023         	goto	u4460
  8410   0046C8                     u4461:
  8411   0046C8  EF2A  F023         	goto	l198
  8412   0046CC                     u4460:
  8413   0046CC                     
  8414                           ;calibration.c: 80:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8415   0046CC  0E11               	movlw	17
  8416   0046CE  6E03               	movwf	(??_switch_calibration+1)^0,c
  8417   0046D0  0E3C               	movlw	60
  8418   0046D2  6E02               	movwf	??_switch_calibration^0,c
  8419   0046D4  0ECB               	movlw	203
  8420   0046D6                     u5217:
  8421   0046D6  2EE8               	decfsz	wreg,f,c
  8422   0046D8  D7FE               	bra	u5217
  8423   0046DA  2E02               	decfsz	??_switch_calibration^0,f,c
  8424   0046DC  D7FC               	bra	u5217
  8425   0046DE  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8426   0046E0  D7FA               	bra	u5217
  8427   0046E2  0000               	nop	
  8428   0046E4                     
  8429                           ;calibration.c: 81:             LATHbits.LATH3 = 1;
  8430   0046E4  8680               	bsf	128,3,c	;volatile
  8431                           
  8432                           ;calibration.c: 82:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8433   0046E6  0E11               	movlw	17
  8434   0046E8  6E03               	movwf	(??_switch_calibration+1)^0,c
  8435   0046EA  0E3C               	movlw	60
  8436   0046EC  6E02               	movwf	??_switch_calibration^0,c
  8437   0046EE  0ECB               	movlw	203
  8438   0046F0                     u5227:
  8439   0046F0  2EE8               	decfsz	wreg,f,c
  8440   0046F2  D7FE               	bra	u5227
  8441   0046F4  2E02               	decfsz	??_switch_calibration^0,f,c
  8442   0046F6  D7FC               	bra	u5227
  8443   0046F8  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8444   0046FA  D7FA               	bra	u5227
  8445   0046FC  0000               	nop	
  8446   0046FE                     
  8447                           ;calibration.c: 83:             LATHbits.LATH3 = 0;
  8448   0046FE  9680               	bcf	128,3,c	;volatile
  8449   004700                     l203:
  8450   004700  0012               	return		;funcret
  8451   004702                     __end_of_switch_calibration:
  8452                           	callstack 0
  8453                           
  8454 ;; *************** function _rightTURN *****************
  8455 ;; Defined at:
  8456 ;;		line 254 in file "dc_motor_v1.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  rotation_cal    1    wreg     unsigned char 
  8459 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8460 ;;		 -> motorL(9), 
  8461 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8462 ;;		 -> motorR(9), 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8465 ;;  j               2   26[COMRAM] int 
  8466 ;;  i               2   24[COMRAM] int 
  8467 ;;  delay_time      2   30[COMRAM] int 
  8468 ;;  max_power       2   28[COMRAM] int 
  8469 ;;  acceleration    2    0        int 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  1    wreg      void 
  8472 ;; Registers used:
  8473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8480 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8481 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8482 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8483 ;;Total ram usage:       14 bytes
  8484 ;; Hardware stack levels used: 1
  8485 ;; Hardware stack levels required when called: 2
  8486 ;; This function calls:
  8487 ;;		___awdiv
  8488 ;;		_delay_ms_function
  8489 ;;		_setMotorPWM
  8490 ;; This function is called by:
  8491 ;;		_calibration_routine
  8492 ;;		_maze_search
  8493 ;;		_maze_return
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text31
  8498   003A8A                     __ptext31:
  8499                           	callstack 0
  8500   003A8A                     _rightTURN:
  8501                           	callstack 27
  8502                           
  8503                           ;incstack = 0
  8504                           ;rightTURN@rotation_calibration stored from wreg
  8505   003A8A  6E18               	movwf	rightTURN@rotation_calibration^0,c
  8506   003A8C                     
  8507                           ;dc_motor_v1.c: 255:     mL->direction = 1;
  8508   003A8C  5013               	movf	rightTURN@mL^0,w,c
  8509   003A8E  6ED9               	movwf	fsr2l,c
  8510   003A90  6ADA               	clrf	fsr2h,c
  8511   003A92  0E01               	movlw	1
  8512   003A94  26D9               	addwf	fsr2l,f,c
  8513   003A96  0E01               	movlw	1
  8514   003A98  6EDF               	movwf	indf2,c
  8515                           
  8516                           ;dc_motor_v1.c: 256:     mR->direction = 0;
  8517   003A9A  5014               	movf	rightTURN@mR^0,w,c
  8518   003A9C  6ED9               	movwf	fsr2l,c
  8519   003A9E  6ADA               	clrf	fsr2h,c
  8520   003AA0  0E01               	movlw	1
  8521   003AA2  26D9               	addwf	fsr2l,f,c
  8522   003AA4  6ADF               	clrf	indf2,c
  8523   003AA6                     
  8524                           ;dc_motor_v1.c: 258:     int max_power = 40;
  8525   003AA6  0E00               	movlw	0
  8526   003AA8  6E1E               	movwf	(rightTURN@max_power+1)^0,c
  8527   003AAA  0E28               	movlw	40
  8528   003AAC  6E1D               	movwf	rightTURN@max_power^0,c
  8529   003AAE                     
  8530                           ;dc_motor_v1.c: 260:     int delay_time = acceleration_time/max_power;
  8531   003AAE  0E00               	movlw	0
  8532   003AB0  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8533   003AB2  0E64               	movlw	100
  8534   003AB4  6E01               	movwf	___awdiv@dividend^0,c
  8535   003AB6  0E00               	movlw	0
  8536   003AB8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8537   003ABA  0E28               	movlw	40
  8538   003ABC  6E03               	movwf	___awdiv@divisor^0,c
  8539   003ABE  ECC8  F022         	call	___awdiv	;wreg free
  8540   003AC2  C001  F01F         	movff	?___awdiv,rightTURN@delay_time
  8541   003AC6  C002  F020         	movff	?___awdiv+1,rightTURN@delay_time+1
  8542   003ACA                     
  8543                           ;dc_motor_v1.c: 263:     for(int i=0; i< max_power; i++){
  8544   003ACA  0E00               	movlw	0
  8545   003ACC  6E1A               	movwf	(rightTURN@i+1)^0,c
  8546   003ACE  0E00               	movlw	0
  8547   003AD0  6E19               	movwf	rightTURN@i^0,c
  8548   003AD2  EF8F  F01D         	goto	l4000
  8549   003AD6                     l3990:
  8550                           
  8551                           ;dc_motor_v1.c: 264:         mL->power = mL->power + 1;
  8552   003AD6  5013               	movf	rightTURN@mL^0,w,c
  8553   003AD8  6ED9               	movwf	fsr2l,c
  8554   003ADA  6ADA               	clrf	fsr2h,c
  8555   003ADC  5013               	movf	rightTURN@mL^0,w,c
  8556   003ADE  6EE1               	movwf	fsr1l,c
  8557   003AE0  6AE2               	clrf	fsr1h,c
  8558   003AE2  50E7               	movf	indf1,w,c
  8559   003AE4  6E15               	movwf	??_rightTURN^0,c
  8560   003AE6  2815               	incf	??_rightTURN^0,w,c
  8561   003AE8  6EDF               	movwf	indf2,c
  8562                           
  8563                           ;dc_motor_v1.c: 265:         mR->power = mR->power + 1 ;
  8564   003AEA  5014               	movf	rightTURN@mR^0,w,c
  8565   003AEC  6ED9               	movwf	fsr2l,c
  8566   003AEE  6ADA               	clrf	fsr2h,c
  8567   003AF0  5014               	movf	rightTURN@mR^0,w,c
  8568   003AF2  6EE1               	movwf	fsr1l,c
  8569   003AF4  6AE2               	clrf	fsr1h,c
  8570   003AF6  50E7               	movf	indf1,w,c
  8571   003AF8  6E15               	movwf	??_rightTURN^0,c
  8572   003AFA  2815               	incf	??_rightTURN^0,w,c
  8573   003AFC  6EDF               	movwf	indf2,c
  8574   003AFE                     
  8575                           ;dc_motor_v1.c: 266:         setMotorPWM(mR);
  8576   003AFE  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8577   003B02  EC81  F01F         	call	_setMotorPWM	;wreg free
  8578   003B06                     
  8579                           ;dc_motor_v1.c: 267:         setMotorPWM(mL);
  8580   003B06  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8581   003B0A  EC81  F01F         	call	_setMotorPWM	;wreg free
  8582   003B0E                     
  8583                           ;dc_motor_v1.c: 268:         delay_ms_function(delay_time);
  8584   003B0E  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8585   003B12  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8586   003B16  ECA8  F025         	call	_delay_ms_function	;wreg free
  8587   003B1A                     
  8588                           ;dc_motor_v1.c: 269:     }
  8589   003B1A  4A19               	infsnz	rightTURN@i^0,f,c
  8590   003B1C  2A1A               	incf	(rightTURN@i+1)^0,f,c
  8591   003B1E                     l4000:
  8592   003B1E  501D               	movf	rightTURN@max_power^0,w,c
  8593   003B20  5C19               	subwf	rightTURN@i^0,w,c
  8594   003B22  501A               	movf	(rightTURN@i+1)^0,w,c
  8595   003B24  0A80               	xorlw	128
  8596   003B26  6E15               	movwf	??_rightTURN^0,c
  8597   003B28  501E               	movf	(rightTURN@max_power+1)^0,w,c
  8598   003B2A  0A80               	xorlw	128
  8599   003B2C  5815               	subwfb	??_rightTURN^0,w,c
  8600   003B2E  A0D8               	btfss	status,0,c
  8601   003B30  EF9C  F01D         	goto	u4471
  8602   003B34  EF9E  F01D         	goto	u4470
  8603   003B38                     u4471:
  8604   003B38  EF6B  F01D         	goto	l3990
  8605   003B3C                     u4470:
  8606   003B3C                     
  8607                           ;dc_motor_v1.c: 274:     for(int j=0; j<rotation_calibration; j++){
  8608   003B3C  0E00               	movlw	0
  8609   003B3E  6E1C               	movwf	(rightTURN@j+1)^0,c
  8610   003B40  0E00               	movlw	0
  8611   003B42  6E1B               	movwf	rightTURN@j^0,c
  8612   003B44  EFAD  F01D         	goto	l346
  8613   003B48                     l4004:
  8614                           
  8615                           ;dc_motor_v1.c: 275:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8616   003B48  0ED0               	movlw	208
  8617   003B4A  6E15               	movwf	??_rightTURN^0,c
  8618   003B4C  0ECA               	movlw	202
  8619   003B4E                     u5237:
  8620   003B4E  2EE8               	decfsz	wreg,f,c
  8621   003B50  D7FE               	bra	u5237
  8622   003B52  2E15               	decfsz	??_rightTURN^0,f,c
  8623   003B54  D7FC               	bra	u5237
  8624   003B56                     
  8625                           ;dc_motor_v1.c: 276:     }
  8626   003B56  4A1B               	infsnz	rightTURN@j^0,f,c
  8627   003B58  2A1C               	incf	(rightTURN@j+1)^0,f,c
  8628   003B5A                     l346:
  8629   003B5A  5018               	movf	rightTURN@rotation_calibration^0,w,c
  8630   003B5C  6E15               	movwf	??_rightTURN^0,c
  8631   003B5E  6A16               	clrf	(??_rightTURN+1)^0,c
  8632   003B60  5015               	movf	??_rightTURN^0,w,c
  8633   003B62  5C1B               	subwf	rightTURN@j^0,w,c
  8634   003B64  501C               	movf	(rightTURN@j+1)^0,w,c
  8635   003B66  0A80               	xorlw	128
  8636   003B68  6E17               	movwf	(??_rightTURN+2)^0,c
  8637   003B6A  5016               	movf	(??_rightTURN+1)^0,w,c
  8638   003B6C  0A80               	xorlw	128
  8639   003B6E  5817               	subwfb	(??_rightTURN+2)^0,w,c
  8640   003B70  A0D8               	btfss	status,0,c
  8641   003B72  EFBD  F01D         	goto	u4481
  8642   003B76  EFBF  F01D         	goto	u4480
  8643   003B7A                     u4481:
  8644   003B7A  EFA4  F01D         	goto	l4004
  8645   003B7E                     u4480:
  8646   003B7E  EFED  F01D         	goto	l4022
  8647   003B82                     l4008:
  8648                           
  8649                           ;dc_motor_v1.c: 280:         if(mR->power > 0 ){
  8650   003B82  5014               	movf	rightTURN@mR^0,w,c
  8651   003B84  6ED9               	movwf	fsr2l,c
  8652   003B86  6ADA               	clrf	fsr2h,c
  8653   003B88  50DF               	movf	indf2,w,c
  8654   003B8A  B4D8               	btfsc	status,2,c
  8655   003B8C  EFCA  F01D         	goto	u4491
  8656   003B90  EFCC  F01D         	goto	u4490
  8657   003B94                     u4491:
  8658   003B94  EFD0  F01D         	goto	l4012
  8659   003B98                     u4490:
  8660   003B98                     
  8661                           ;dc_motor_v1.c: 281:             mR->power--;
  8662   003B98  5014               	movf	rightTURN@mR^0,w,c
  8663   003B9A  6ED9               	movwf	fsr2l,c
  8664   003B9C  6ADA               	clrf	fsr2h,c
  8665   003B9E  06DF               	decf	indf2,f,c
  8666   003BA0                     l4012:
  8667                           
  8668                           ;dc_motor_v1.c: 283:         if(mL->power > 0 ){
  8669   003BA0  5013               	movf	rightTURN@mL^0,w,c
  8670   003BA2  6ED9               	movwf	fsr2l,c
  8671   003BA4  6ADA               	clrf	fsr2h,c
  8672   003BA6  50DF               	movf	indf2,w,c
  8673   003BA8  B4D8               	btfsc	status,2,c
  8674   003BAA  EFD9  F01D         	goto	u4501
  8675   003BAE  EFDB  F01D         	goto	u4500
  8676   003BB2                     u4501:
  8677   003BB2  EFDF  F01D         	goto	l4016
  8678   003BB6                     u4500:
  8679   003BB6                     
  8680                           ;dc_motor_v1.c: 284:             mL->power--;
  8681   003BB6  5013               	movf	rightTURN@mL^0,w,c
  8682   003BB8  6ED9               	movwf	fsr2l,c
  8683   003BBA  6ADA               	clrf	fsr2h,c
  8684   003BBC  06DF               	decf	indf2,f,c
  8685   003BBE                     l4016:
  8686                           
  8687                           ;dc_motor_v1.c: 286:         setMotorPWM(mR);
  8688   003BBE  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8689   003BC2  EC81  F01F         	call	_setMotorPWM	;wreg free
  8690   003BC6                     
  8691                           ;dc_motor_v1.c: 287:         setMotorPWM(mL);
  8692   003BC6  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8693   003BCA  EC81  F01F         	call	_setMotorPWM	;wreg free
  8694   003BCE                     
  8695                           ;dc_motor_v1.c: 288:         delay_ms_function(delay_time);
  8696   003BCE  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8697   003BD2  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8698   003BD6  ECA8  F025         	call	_delay_ms_function	;wreg free
  8699   003BDA                     l4022:
  8700                           
  8701                           ;dc_motor_v1.c: 279:     while(mL->power || mR->power > 0){
  8702   003BDA  5013               	movf	rightTURN@mL^0,w,c
  8703   003BDC  6ED9               	movwf	fsr2l,c
  8704   003BDE  6ADA               	clrf	fsr2h,c
  8705   003BE0  50DF               	movf	indf2,w,c
  8706   003BE2  A4D8               	btfss	status,2,c
  8707   003BE4  EFF6  F01D         	goto	u4511
  8708   003BE8  EFF8  F01D         	goto	u4510
  8709   003BEC                     u4511:
  8710   003BEC  EFC1  F01D         	goto	l4008
  8711   003BF0                     u4510:
  8712   003BF0  5014               	movf	rightTURN@mR^0,w,c
  8713   003BF2  6ED9               	movwf	fsr2l,c
  8714   003BF4  6ADA               	clrf	fsr2h,c
  8715   003BF6  50DF               	movf	indf2,w,c
  8716   003BF8  A4D8               	btfss	status,2,c
  8717   003BFA  EF01  F01E         	goto	u4521
  8718   003BFE  EF03  F01E         	goto	u4520
  8719   003C02                     u4521:
  8720   003C02  EFC1  F01D         	goto	l4008
  8721   003C06                     u4520:
  8722   003C06  0012               	return		;funcret
  8723   003C08                     __end_of_rightTURN:
  8724                           	callstack 0
  8725                           
  8726 ;; *************** function _leftTURN *****************
  8727 ;; Defined at:
  8728 ;;		line 213 in file "dc_motor_v1.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  rotation_cal    1    wreg     unsigned char 
  8731 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8732 ;;		 -> motorL(9), 
  8733 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8734 ;;		 -> motorR(9), 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8737 ;;  j               2   26[COMRAM] int 
  8738 ;;  i               2   24[COMRAM] int 
  8739 ;;  delay_time      2   30[COMRAM] int 
  8740 ;;  max_power       2   28[COMRAM] int 
  8741 ;;  acceleration    2    0        int 
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1    wreg      void 
  8744 ;; Registers used:
  8745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8755 ;;Total ram usage:       14 bytes
  8756 ;; Hardware stack levels used: 1
  8757 ;; Hardware stack levels required when called: 2
  8758 ;; This function calls:
  8759 ;;		___awdiv
  8760 ;;		_delay_ms_function
  8761 ;;		_setMotorPWM
  8762 ;; This function is called by:
  8763 ;;		_calibration_routine
  8764 ;;		_maze_search
  8765 ;;		_maze_return
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           	psect	text32
  8770   003C08                     __ptext32:
  8771                           	callstack 0
  8772   003C08                     _leftTURN:
  8773                           	callstack 27
  8774                           
  8775                           ;incstack = 0
  8776                           ;leftTURN@rotation_calibration stored from wreg
  8777   003C08  6E18               	movwf	leftTURN@rotation_calibration^0,c
  8778   003C0A                     
  8779                           ;dc_motor_v1.c: 215:     mL->direction = 0;
  8780   003C0A  5013               	movf	leftTURN@mL^0,w,c
  8781   003C0C  6ED9               	movwf	fsr2l,c
  8782   003C0E  6ADA               	clrf	fsr2h,c
  8783   003C10  0E01               	movlw	1
  8784   003C12  26D9               	addwf	fsr2l,f,c
  8785   003C14  6ADF               	clrf	indf2,c
  8786                           
  8787                           ;dc_motor_v1.c: 216:     mR->direction = 1;
  8788   003C16  5014               	movf	leftTURN@mR^0,w,c
  8789   003C18  6ED9               	movwf	fsr2l,c
  8790   003C1A  6ADA               	clrf	fsr2h,c
  8791   003C1C  0E01               	movlw	1
  8792   003C1E  26D9               	addwf	fsr2l,f,c
  8793   003C20  0E01               	movlw	1
  8794   003C22  6EDF               	movwf	indf2,c
  8795   003C24                     
  8796                           ;dc_motor_v1.c: 218:     int max_power = 40;
  8797   003C24  0E00               	movlw	0
  8798   003C26  6E1E               	movwf	(leftTURN@max_power+1)^0,c
  8799   003C28  0E28               	movlw	40
  8800   003C2A  6E1D               	movwf	leftTURN@max_power^0,c
  8801   003C2C                     
  8802                           ;dc_motor_v1.c: 220:     int delay_time = acceleration_time/max_power;
  8803   003C2C  0E00               	movlw	0
  8804   003C2E  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8805   003C30  0E64               	movlw	100
  8806   003C32  6E01               	movwf	___awdiv@dividend^0,c
  8807   003C34  0E00               	movlw	0
  8808   003C36  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8809   003C38  0E28               	movlw	40
  8810   003C3A  6E03               	movwf	___awdiv@divisor^0,c
  8811   003C3C  ECC8  F022         	call	___awdiv	;wreg free
  8812   003C40  C001  F01F         	movff	?___awdiv,leftTURN@delay_time
  8813   003C44  C002  F020         	movff	?___awdiv+1,leftTURN@delay_time+1
  8814   003C48                     
  8815                           ;dc_motor_v1.c: 223:     for(int i=0; i< max_power; i++){
  8816   003C48  0E00               	movlw	0
  8817   003C4A  6E1A               	movwf	(leftTURN@i+1)^0,c
  8818   003C4C  0E00               	movlw	0
  8819   003C4E  6E19               	movwf	leftTURN@i^0,c
  8820   003C50  EF4E  F01E         	goto	l4046
  8821   003C54                     l4036:
  8822                           
  8823                           ;dc_motor_v1.c: 224:         mL->power = mL->power + 1;
  8824   003C54  5013               	movf	leftTURN@mL^0,w,c
  8825   003C56  6ED9               	movwf	fsr2l,c
  8826   003C58  6ADA               	clrf	fsr2h,c
  8827   003C5A  5013               	movf	leftTURN@mL^0,w,c
  8828   003C5C  6EE1               	movwf	fsr1l,c
  8829   003C5E  6AE2               	clrf	fsr1h,c
  8830   003C60  50E7               	movf	indf1,w,c
  8831   003C62  6E15               	movwf	??_leftTURN^0,c
  8832   003C64  2815               	incf	??_leftTURN^0,w,c
  8833   003C66  6EDF               	movwf	indf2,c
  8834                           
  8835                           ;dc_motor_v1.c: 225:         mR->power = mR->power + 1 ;
  8836   003C68  5014               	movf	leftTURN@mR^0,w,c
  8837   003C6A  6ED9               	movwf	fsr2l,c
  8838   003C6C  6ADA               	clrf	fsr2h,c
  8839   003C6E  5014               	movf	leftTURN@mR^0,w,c
  8840   003C70  6EE1               	movwf	fsr1l,c
  8841   003C72  6AE2               	clrf	fsr1h,c
  8842   003C74  50E7               	movf	indf1,w,c
  8843   003C76  6E15               	movwf	??_leftTURN^0,c
  8844   003C78  2815               	incf	??_leftTURN^0,w,c
  8845   003C7A  6EDF               	movwf	indf2,c
  8846   003C7C                     
  8847                           ;dc_motor_v1.c: 226:         setMotorPWM(mR);
  8848   003C7C  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8849   003C80  EC81  F01F         	call	_setMotorPWM	;wreg free
  8850   003C84                     
  8851                           ;dc_motor_v1.c: 227:         setMotorPWM(mL);
  8852   003C84  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8853   003C88  EC81  F01F         	call	_setMotorPWM	;wreg free
  8854   003C8C                     
  8855                           ;dc_motor_v1.c: 228:         delay_ms_function(delay_time);
  8856   003C8C  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8857   003C90  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  8858   003C94  ECA8  F025         	call	_delay_ms_function	;wreg free
  8859   003C98                     
  8860                           ;dc_motor_v1.c: 229:     }
  8861   003C98  4A19               	infsnz	leftTURN@i^0,f,c
  8862   003C9A  2A1A               	incf	(leftTURN@i+1)^0,f,c
  8863   003C9C                     l4046:
  8864   003C9C  501D               	movf	leftTURN@max_power^0,w,c
  8865   003C9E  5C19               	subwf	leftTURN@i^0,w,c
  8866   003CA0  501A               	movf	(leftTURN@i+1)^0,w,c
  8867   003CA2  0A80               	xorlw	128
  8868   003CA4  6E15               	movwf	??_leftTURN^0,c
  8869   003CA6  501E               	movf	(leftTURN@max_power+1)^0,w,c
  8870   003CA8  0A80               	xorlw	128
  8871   003CAA  5815               	subwfb	??_leftTURN^0,w,c
  8872   003CAC  A0D8               	btfss	status,0,c
  8873   003CAE  EF5B  F01E         	goto	u4531
  8874   003CB2  EF5D  F01E         	goto	u4530
  8875   003CB6                     u4531:
  8876   003CB6  EF2A  F01E         	goto	l4036
  8877   003CBA                     u4530:
  8878   003CBA                     
  8879                           ;dc_motor_v1.c: 234:     for(int j=0; j<rotation_calibration; j++){
  8880   003CBA  0E00               	movlw	0
  8881   003CBC  6E1C               	movwf	(leftTURN@j+1)^0,c
  8882   003CBE  0E00               	movlw	0
  8883   003CC0  6E1B               	movwf	leftTURN@j^0,c
  8884   003CC2  EF6C  F01E         	goto	l332
  8885   003CC6                     l4050:
  8886                           
  8887                           ;dc_motor_v1.c: 235:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8888   003CC6  0ED0               	movlw	208
  8889   003CC8  6E15               	movwf	??_leftTURN^0,c
  8890   003CCA  0ECA               	movlw	202
  8891   003CCC                     u5247:
  8892   003CCC  2EE8               	decfsz	wreg,f,c
  8893   003CCE  D7FE               	bra	u5247
  8894   003CD0  2E15               	decfsz	??_leftTURN^0,f,c
  8895   003CD2  D7FC               	bra	u5247
  8896   003CD4                     
  8897                           ;dc_motor_v1.c: 236:     }
  8898   003CD4  4A1B               	infsnz	leftTURN@j^0,f,c
  8899   003CD6  2A1C               	incf	(leftTURN@j+1)^0,f,c
  8900   003CD8                     l332:
  8901   003CD8  5018               	movf	leftTURN@rotation_calibration^0,w,c
  8902   003CDA  6E15               	movwf	??_leftTURN^0,c
  8903   003CDC  6A16               	clrf	(??_leftTURN+1)^0,c
  8904   003CDE  5015               	movf	??_leftTURN^0,w,c
  8905   003CE0  5C1B               	subwf	leftTURN@j^0,w,c
  8906   003CE2  501C               	movf	(leftTURN@j+1)^0,w,c
  8907   003CE4  0A80               	xorlw	128
  8908   003CE6  6E17               	movwf	(??_leftTURN+2)^0,c
  8909   003CE8  5016               	movf	(??_leftTURN+1)^0,w,c
  8910   003CEA  0A80               	xorlw	128
  8911   003CEC  5817               	subwfb	(??_leftTURN+2)^0,w,c
  8912   003CEE  A0D8               	btfss	status,0,c
  8913   003CF0  EF7C  F01E         	goto	u4541
  8914   003CF4  EF7E  F01E         	goto	u4540
  8915   003CF8                     u4541:
  8916   003CF8  EF63  F01E         	goto	l4050
  8917   003CFC                     u4540:
  8918   003CFC  EFAC  F01E         	goto	l4068
  8919   003D00                     l4054:
  8920                           
  8921                           ;dc_motor_v1.c: 240:         if(mR->power > 0 ){
  8922   003D00  5014               	movf	leftTURN@mR^0,w,c
  8923   003D02  6ED9               	movwf	fsr2l,c
  8924   003D04  6ADA               	clrf	fsr2h,c
  8925   003D06  50DF               	movf	indf2,w,c
  8926   003D08  B4D8               	btfsc	status,2,c
  8927   003D0A  EF89  F01E         	goto	u4551
  8928   003D0E  EF8B  F01E         	goto	u4550
  8929   003D12                     u4551:
  8930   003D12  EF8F  F01E         	goto	l4058
  8931   003D16                     u4550:
  8932   003D16                     
  8933                           ;dc_motor_v1.c: 241:             mR->power--;
  8934   003D16  5014               	movf	leftTURN@mR^0,w,c
  8935   003D18  6ED9               	movwf	fsr2l,c
  8936   003D1A  6ADA               	clrf	fsr2h,c
  8937   003D1C  06DF               	decf	indf2,f,c
  8938   003D1E                     l4058:
  8939                           
  8940                           ;dc_motor_v1.c: 243:         if(mL->power > 0 ){
  8941   003D1E  5013               	movf	leftTURN@mL^0,w,c
  8942   003D20  6ED9               	movwf	fsr2l,c
  8943   003D22  6ADA               	clrf	fsr2h,c
  8944   003D24  50DF               	movf	indf2,w,c
  8945   003D26  B4D8               	btfsc	status,2,c
  8946   003D28  EF98  F01E         	goto	u4561
  8947   003D2C  EF9A  F01E         	goto	u4560
  8948   003D30                     u4561:
  8949   003D30  EF9E  F01E         	goto	l4062
  8950   003D34                     u4560:
  8951   003D34                     
  8952                           ;dc_motor_v1.c: 244:             mL->power--;
  8953   003D34  5013               	movf	leftTURN@mL^0,w,c
  8954   003D36  6ED9               	movwf	fsr2l,c
  8955   003D38  6ADA               	clrf	fsr2h,c
  8956   003D3A  06DF               	decf	indf2,f,c
  8957   003D3C                     l4062:
  8958                           
  8959                           ;dc_motor_v1.c: 246:         setMotorPWM(mR);
  8960   003D3C  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8961   003D40  EC81  F01F         	call	_setMotorPWM	;wreg free
  8962   003D44                     
  8963                           ;dc_motor_v1.c: 247:         setMotorPWM(mL);
  8964   003D44  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8965   003D48  EC81  F01F         	call	_setMotorPWM	;wreg free
  8966   003D4C                     
  8967                           ;dc_motor_v1.c: 248:         delay_ms_function(delay_time);
  8968   003D4C  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8969   003D50  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  8970   003D54  ECA8  F025         	call	_delay_ms_function	;wreg free
  8971   003D58                     l4068:
  8972                           
  8973                           ;dc_motor_v1.c: 239:     while(mL->power || mR->power > 0){
  8974   003D58  5013               	movf	leftTURN@mL^0,w,c
  8975   003D5A  6ED9               	movwf	fsr2l,c
  8976   003D5C  6ADA               	clrf	fsr2h,c
  8977   003D5E  50DF               	movf	indf2,w,c
  8978   003D60  A4D8               	btfss	status,2,c
  8979   003D62  EFB5  F01E         	goto	u4571
  8980   003D66  EFB7  F01E         	goto	u4570
  8981   003D6A                     u4571:
  8982   003D6A  EF80  F01E         	goto	l4054
  8983   003D6E                     u4570:
  8984   003D6E  5014               	movf	leftTURN@mR^0,w,c
  8985   003D70  6ED9               	movwf	fsr2l,c
  8986   003D72  6ADA               	clrf	fsr2h,c
  8987   003D74  50DF               	movf	indf2,w,c
  8988   003D76  A4D8               	btfss	status,2,c
  8989   003D78  EFC0  F01E         	goto	u4581
  8990   003D7C  EFC2  F01E         	goto	u4580
  8991   003D80                     u4581:
  8992   003D80  EF80  F01E         	goto	l4054
  8993   003D84                     u4580:
  8994   003D84  0012               	return		;funcret
  8995   003D86                     __end_of_leftTURN:
  8996                           	callstack 0
  8997                           
  8998 ;; *************** function _forward *****************
  8999 ;; Defined at:
  9000 ;;		line 122 in file "dc_motor_v1.c"
  9001 ;; Parameters:    Size  Location     Type
  9002 ;;  Distance_Cal    1    wreg     unsigned char 
  9003 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9004 ;;		 -> motorL(9), 
  9005 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9006 ;;		 -> motorR(9), 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9009 ;;  j               2   26[COMRAM] int 
  9010 ;;  i               2   24[COMRAM] int 
  9011 ;;  delay_time      2   30[COMRAM] int 
  9012 ;;  max_power       2   28[COMRAM] int 
  9013 ;;  acceleration    2    0        int 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9024 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9025 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;Total ram usage:       14 bytes
  9028 ;; Hardware stack levels used: 1
  9029 ;; Hardware stack levels required when called: 2
  9030 ;; This function calls:
  9031 ;;		___awdiv
  9032 ;;		_delay_ms_function
  9033 ;;		_setMotorPWM
  9034 ;; This function is called by:
  9035 ;;		_calibration_routine
  9036 ;;		_maze_search
  9037 ;;		_maze_return
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text33
  9042   00390A                     __ptext33:
  9043                           	callstack 0
  9044   00390A                     _forward:
  9045                           	callstack 27
  9046                           
  9047                           ;incstack = 0
  9048                           ;forward@Distance_Calibration stored from wreg
  9049   00390A  6E18               	movwf	forward@Distance_Calibration^0,c
  9050   00390C                     
  9051                           ;dc_motor_v1.c: 127:     mL->direction = 1;
  9052   00390C  5013               	movf	forward@mL^0,w,c
  9053   00390E  6ED9               	movwf	fsr2l,c
  9054   003910  6ADA               	clrf	fsr2h,c
  9055   003912  0E01               	movlw	1
  9056   003914  26D9               	addwf	fsr2l,f,c
  9057   003916  0E01               	movlw	1
  9058   003918  6EDF               	movwf	indf2,c
  9059                           
  9060                           ;dc_motor_v1.c: 128:     mR->direction = 1;
  9061   00391A  5014               	movf	forward@mR^0,w,c
  9062   00391C  6ED9               	movwf	fsr2l,c
  9063   00391E  6ADA               	clrf	fsr2h,c
  9064   003920  0E01               	movlw	1
  9065   003922  26D9               	addwf	fsr2l,f,c
  9066   003924  0E01               	movlw	1
  9067   003926  6EDF               	movwf	indf2,c
  9068   003928                     
  9069                           ;dc_motor_v1.c: 131:     int max_power = 40;
  9070   003928  0E00               	movlw	0
  9071   00392A  6E1E               	movwf	(forward@max_power+1)^0,c
  9072   00392C  0E28               	movlw	40
  9073   00392E  6E1D               	movwf	forward@max_power^0,c
  9074   003930                     
  9075                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  9076   003930  0E00               	movlw	0
  9077   003932  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9078   003934  0E64               	movlw	100
  9079   003936  6E01               	movwf	___awdiv@dividend^0,c
  9080   003938  0E00               	movlw	0
  9081   00393A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9082   00393C  0E28               	movlw	40
  9083   00393E  6E03               	movwf	___awdiv@divisor^0,c
  9084   003940  ECC8  F022         	call	___awdiv	;wreg free
  9085   003944  C001  F01F         	movff	?___awdiv,forward@delay_time
  9086   003948  C002  F020         	movff	?___awdiv+1,forward@delay_time+1
  9087   00394C                     
  9088                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  9089   00394C  0E00               	movlw	0
  9090   00394E  6E1A               	movwf	(forward@i+1)^0,c
  9091   003950  0E00               	movlw	0
  9092   003952  6E19               	movwf	forward@i^0,c
  9093   003954  EFD0  F01C         	goto	l4092
  9094   003958                     l4082:
  9095                           
  9096                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  9097   003958  5013               	movf	forward@mL^0,w,c
  9098   00395A  6ED9               	movwf	fsr2l,c
  9099   00395C  6ADA               	clrf	fsr2h,c
  9100   00395E  5013               	movf	forward@mL^0,w,c
  9101   003960  6EE1               	movwf	fsr1l,c
  9102   003962  6AE2               	clrf	fsr1h,c
  9103   003964  50E7               	movf	indf1,w,c
  9104   003966  6E15               	movwf	??_forward^0,c
  9105   003968  2815               	incf	??_forward^0,w,c
  9106   00396A  6EDF               	movwf	indf2,c
  9107                           
  9108                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  9109   00396C  5014               	movf	forward@mR^0,w,c
  9110   00396E  6ED9               	movwf	fsr2l,c
  9111   003970  6ADA               	clrf	fsr2h,c
  9112   003972  5014               	movf	forward@mR^0,w,c
  9113   003974  6EE1               	movwf	fsr1l,c
  9114   003976  6AE2               	clrf	fsr1h,c
  9115   003978  50E7               	movf	indf1,w,c
  9116   00397A  6E15               	movwf	??_forward^0,c
  9117   00397C  2815               	incf	??_forward^0,w,c
  9118   00397E  6EDF               	movwf	indf2,c
  9119   003980                     
  9120                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  9121   003980  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9122   003984  EC81  F01F         	call	_setMotorPWM	;wreg free
  9123   003988                     
  9124                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  9125   003988  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9126   00398C  EC81  F01F         	call	_setMotorPWM	;wreg free
  9127   003990                     
  9128                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  9129   003990  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9130   003994  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9131   003998  ECA8  F025         	call	_delay_ms_function	;wreg free
  9132   00399C                     
  9133                           ;dc_motor_v1.c: 142:     }
  9134   00399C  4A19               	infsnz	forward@i^0,f,c
  9135   00399E  2A1A               	incf	(forward@i+1)^0,f,c
  9136   0039A0                     l4092:
  9137   0039A0  501D               	movf	forward@max_power^0,w,c
  9138   0039A2  5C19               	subwf	forward@i^0,w,c
  9139   0039A4  501A               	movf	(forward@i+1)^0,w,c
  9140   0039A6  0A80               	xorlw	128
  9141   0039A8  6E15               	movwf	??_forward^0,c
  9142   0039AA  501E               	movf	(forward@max_power+1)^0,w,c
  9143   0039AC  0A80               	xorlw	128
  9144   0039AE  5815               	subwfb	??_forward^0,w,c
  9145   0039B0  A0D8               	btfss	status,0,c
  9146   0039B2  EFDD  F01C         	goto	u4591
  9147   0039B6  EFDF  F01C         	goto	u4590
  9148   0039BA                     u4591:
  9149   0039BA  EFAC  F01C         	goto	l4082
  9150   0039BE                     u4590:
  9151   0039BE                     
  9152                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  9153   0039BE  0E00               	movlw	0
  9154   0039C0  6E1C               	movwf	(forward@j+1)^0,c
  9155   0039C2  0E00               	movlw	0
  9156   0039C4  6E1B               	movwf	forward@j^0,c
  9157   0039C6  EFEE  F01C         	goto	l304
  9158   0039CA                     l4096:
  9159                           
  9160                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9161   0039CA  0ED0               	movlw	208
  9162   0039CC  6E15               	movwf	??_forward^0,c
  9163   0039CE  0ECA               	movlw	202
  9164   0039D0                     u5257:
  9165   0039D0  2EE8               	decfsz	wreg,f,c
  9166   0039D2  D7FE               	bra	u5257
  9167   0039D4  2E15               	decfsz	??_forward^0,f,c
  9168   0039D6  D7FC               	bra	u5257
  9169   0039D8                     
  9170                           ;dc_motor_v1.c: 149:     }
  9171   0039D8  4A1B               	infsnz	forward@j^0,f,c
  9172   0039DA  2A1C               	incf	(forward@j+1)^0,f,c
  9173   0039DC                     l304:
  9174   0039DC  5018               	movf	forward@Distance_Calibration^0,w,c
  9175   0039DE  6E15               	movwf	??_forward^0,c
  9176   0039E0  6A16               	clrf	(??_forward+1)^0,c
  9177   0039E2  5015               	movf	??_forward^0,w,c
  9178   0039E4  5C1B               	subwf	forward@j^0,w,c
  9179   0039E6  501C               	movf	(forward@j+1)^0,w,c
  9180   0039E8  0A80               	xorlw	128
  9181   0039EA  6E17               	movwf	(??_forward+2)^0,c
  9182   0039EC  5016               	movf	(??_forward+1)^0,w,c
  9183   0039EE  0A80               	xorlw	128
  9184   0039F0  5817               	subwfb	(??_forward+2)^0,w,c
  9185   0039F2  A0D8               	btfss	status,0,c
  9186   0039F4  EFFE  F01C         	goto	u4601
  9187   0039F8  EF00  F01D         	goto	u4600
  9188   0039FC                     u4601:
  9189   0039FC  EFE5  F01C         	goto	l4096
  9190   003A00                     u4600:
  9191   003A00  EF2E  F01D         	goto	l4114
  9192   003A04                     l4100:
  9193                           
  9194                           ;dc_motor_v1.c: 153:         if(mR->power > 0 ){
  9195   003A04  5014               	movf	forward@mR^0,w,c
  9196   003A06  6ED9               	movwf	fsr2l,c
  9197   003A08  6ADA               	clrf	fsr2h,c
  9198   003A0A  50DF               	movf	indf2,w,c
  9199   003A0C  B4D8               	btfsc	status,2,c
  9200   003A0E  EF0B  F01D         	goto	u4611
  9201   003A12  EF0D  F01D         	goto	u4610
  9202   003A16                     u4611:
  9203   003A16  EF11  F01D         	goto	l4104
  9204   003A1A                     u4610:
  9205   003A1A                     
  9206                           ;dc_motor_v1.c: 154:             mR->power--;
  9207   003A1A  5014               	movf	forward@mR^0,w,c
  9208   003A1C  6ED9               	movwf	fsr2l,c
  9209   003A1E  6ADA               	clrf	fsr2h,c
  9210   003A20  06DF               	decf	indf2,f,c
  9211   003A22                     l4104:
  9212                           
  9213                           ;dc_motor_v1.c: 156:         if(mL->power > 0 ){
  9214   003A22  5013               	movf	forward@mL^0,w,c
  9215   003A24  6ED9               	movwf	fsr2l,c
  9216   003A26  6ADA               	clrf	fsr2h,c
  9217   003A28  50DF               	movf	indf2,w,c
  9218   003A2A  B4D8               	btfsc	status,2,c
  9219   003A2C  EF1A  F01D         	goto	u4621
  9220   003A30  EF1C  F01D         	goto	u4620
  9221   003A34                     u4621:
  9222   003A34  EF20  F01D         	goto	l4108
  9223   003A38                     u4620:
  9224   003A38                     
  9225                           ;dc_motor_v1.c: 157:             mL->power--;
  9226   003A38  5013               	movf	forward@mL^0,w,c
  9227   003A3A  6ED9               	movwf	fsr2l,c
  9228   003A3C  6ADA               	clrf	fsr2h,c
  9229   003A3E  06DF               	decf	indf2,f,c
  9230   003A40                     l4108:
  9231                           
  9232                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  9233   003A40  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9234   003A44  EC81  F01F         	call	_setMotorPWM	;wreg free
  9235   003A48                     
  9236                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  9237   003A48  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9238   003A4C  EC81  F01F         	call	_setMotorPWM	;wreg free
  9239   003A50                     
  9240                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  9241   003A50  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9242   003A54  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9243   003A58  ECA8  F025         	call	_delay_ms_function	;wreg free
  9244   003A5C                     l4114:
  9245                           
  9246                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  9247   003A5C  5013               	movf	forward@mL^0,w,c
  9248   003A5E  6ED9               	movwf	fsr2l,c
  9249   003A60  6ADA               	clrf	fsr2h,c
  9250   003A62  50DF               	movf	indf2,w,c
  9251   003A64  A4D8               	btfss	status,2,c
  9252   003A66  EF37  F01D         	goto	u4631
  9253   003A6A  EF39  F01D         	goto	u4630
  9254   003A6E                     u4631:
  9255   003A6E  EF02  F01D         	goto	l4100
  9256   003A72                     u4630:
  9257   003A72  5014               	movf	forward@mR^0,w,c
  9258   003A74  6ED9               	movwf	fsr2l,c
  9259   003A76  6ADA               	clrf	fsr2h,c
  9260   003A78  50DF               	movf	indf2,w,c
  9261   003A7A  A4D8               	btfss	status,2,c
  9262   003A7C  EF42  F01D         	goto	u4641
  9263   003A80  EF44  F01D         	goto	u4640
  9264   003A84                     u4641:
  9265   003A84  EF02  F01D         	goto	l4100
  9266   003A88                     u4640:
  9267   003A88  0012               	return		;funcret
  9268   003A8A                     __end_of_forward:
  9269                           	callstack 0
  9270                           
  9271 ;; *************** function _backward *****************
  9272 ;; Defined at:
  9273 ;;		line 166 in file "dc_motor_v1.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  Distance_Cal    1    wreg     unsigned char 
  9276 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9277 ;;		 -> motorL(9), 
  9278 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9279 ;;		 -> motorR(9), 
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9282 ;;  j               2   26[COMRAM] int 
  9283 ;;  i               2   24[COMRAM] int 
  9284 ;;  delay_time      2   30[COMRAM] int 
  9285 ;;  max_power       2   28[COMRAM] int 
  9286 ;;  acceleration    2    0        int 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9297 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9298 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9299 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9300 ;;Total ram usage:       14 bytes
  9301 ;; Hardware stack levels used: 1
  9302 ;; Hardware stack levels required when called: 2
  9303 ;; This function calls:
  9304 ;;		___awdiv
  9305 ;;		_delay_ms_function
  9306 ;;		_setMotorPWM
  9307 ;; This function is called by:
  9308 ;;		_calibration_routine
  9309 ;;		_maze_search
  9310 ;;		_maze_return
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text34
  9315   003D86                     __ptext34:
  9316                           	callstack 0
  9317   003D86                     _backward:
  9318                           	callstack 27
  9319                           
  9320                           ;incstack = 0
  9321                           ;backward@Distance_Calibration stored from wreg
  9322   003D86  6E18               	movwf	backward@Distance_Calibration^0,c
  9323   003D88                     
  9324                           ;dc_motor_v1.c: 172:     mL->direction = 0;
  9325   003D88  5013               	movf	backward@mL^0,w,c
  9326   003D8A  6ED9               	movwf	fsr2l,c
  9327   003D8C  6ADA               	clrf	fsr2h,c
  9328   003D8E  0E01               	movlw	1
  9329   003D90  26D9               	addwf	fsr2l,f,c
  9330   003D92  6ADF               	clrf	indf2,c
  9331                           
  9332                           ;dc_motor_v1.c: 173:     mR->direction = 0;
  9333   003D94  5014               	movf	backward@mR^0,w,c
  9334   003D96  6ED9               	movwf	fsr2l,c
  9335   003D98  6ADA               	clrf	fsr2h,c
  9336   003D9A  0E01               	movlw	1
  9337   003D9C  26D9               	addwf	fsr2l,f,c
  9338   003D9E  6ADF               	clrf	indf2,c
  9339   003DA0                     
  9340                           ;dc_motor_v1.c: 176:     int max_power = 40;
  9341   003DA0  0E00               	movlw	0
  9342   003DA2  6E1E               	movwf	(backward@max_power+1)^0,c
  9343   003DA4  0E28               	movlw	40
  9344   003DA6  6E1D               	movwf	backward@max_power^0,c
  9345   003DA8                     
  9346                           ;dc_motor_v1.c: 178:     int delay_time = acceleration_time/max_power;
  9347   003DA8  0E00               	movlw	0
  9348   003DAA  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9349   003DAC  0E64               	movlw	100
  9350   003DAE  6E01               	movwf	___awdiv@dividend^0,c
  9351   003DB0  0E00               	movlw	0
  9352   003DB2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9353   003DB4  0E28               	movlw	40
  9354   003DB6  6E03               	movwf	___awdiv@divisor^0,c
  9355   003DB8  ECC8  F022         	call	___awdiv	;wreg free
  9356   003DBC  C001  F01F         	movff	?___awdiv,backward@delay_time
  9357   003DC0  C002  F020         	movff	?___awdiv+1,backward@delay_time+1
  9358   003DC4                     
  9359                           ;dc_motor_v1.c: 181:     for(int i=0; i< max_power; i++){
  9360   003DC4  0E00               	movlw	0
  9361   003DC6  6E1A               	movwf	(backward@i+1)^0,c
  9362   003DC8  0E00               	movlw	0
  9363   003DCA  6E19               	movwf	backward@i^0,c
  9364   003DCC  EF0C  F01F         	goto	l4138
  9365   003DD0                     l4128:
  9366                           
  9367                           ;dc_motor_v1.c: 182:         mL->power = mL->power + 1;
  9368   003DD0  5013               	movf	backward@mL^0,w,c
  9369   003DD2  6ED9               	movwf	fsr2l,c
  9370   003DD4  6ADA               	clrf	fsr2h,c
  9371   003DD6  5013               	movf	backward@mL^0,w,c
  9372   003DD8  6EE1               	movwf	fsr1l,c
  9373   003DDA  6AE2               	clrf	fsr1h,c
  9374   003DDC  50E7               	movf	indf1,w,c
  9375   003DDE  6E15               	movwf	??_backward^0,c
  9376   003DE0  2815               	incf	??_backward^0,w,c
  9377   003DE2  6EDF               	movwf	indf2,c
  9378                           
  9379                           ;dc_motor_v1.c: 183:         mR->power = mR->power + 1 ;
  9380   003DE4  5014               	movf	backward@mR^0,w,c
  9381   003DE6  6ED9               	movwf	fsr2l,c
  9382   003DE8  6ADA               	clrf	fsr2h,c
  9383   003DEA  5014               	movf	backward@mR^0,w,c
  9384   003DEC  6EE1               	movwf	fsr1l,c
  9385   003DEE  6AE2               	clrf	fsr1h,c
  9386   003DF0  50E7               	movf	indf1,w,c
  9387   003DF2  6E15               	movwf	??_backward^0,c
  9388   003DF4  2815               	incf	??_backward^0,w,c
  9389   003DF6  6EDF               	movwf	indf2,c
  9390   003DF8                     
  9391                           ;dc_motor_v1.c: 184:         setMotorPWM(mR);
  9392   003DF8  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9393   003DFC  EC81  F01F         	call	_setMotorPWM	;wreg free
  9394   003E00                     
  9395                           ;dc_motor_v1.c: 185:         setMotorPWM(mL);
  9396   003E00  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9397   003E04  EC81  F01F         	call	_setMotorPWM	;wreg free
  9398   003E08                     
  9399                           ;dc_motor_v1.c: 186:         delay_ms_function(delay_time);
  9400   003E08  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9401   003E0C  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9402   003E10  ECA8  F025         	call	_delay_ms_function	;wreg free
  9403   003E14                     
  9404                           ;dc_motor_v1.c: 187:     }
  9405   003E14  4A19               	infsnz	backward@i^0,f,c
  9406   003E16  2A1A               	incf	(backward@i+1)^0,f,c
  9407   003E18                     l4138:
  9408   003E18  501D               	movf	backward@max_power^0,w,c
  9409   003E1A  5C19               	subwf	backward@i^0,w,c
  9410   003E1C  501A               	movf	(backward@i+1)^0,w,c
  9411   003E1E  0A80               	xorlw	128
  9412   003E20  6E15               	movwf	??_backward^0,c
  9413   003E22  501E               	movf	(backward@max_power+1)^0,w,c
  9414   003E24  0A80               	xorlw	128
  9415   003E26  5815               	subwfb	??_backward^0,w,c
  9416   003E28  A0D8               	btfss	status,0,c
  9417   003E2A  EF19  F01F         	goto	u4651
  9418   003E2E  EF1B  F01F         	goto	u4650
  9419   003E32                     u4651:
  9420   003E32  EFE8  F01E         	goto	l4128
  9421   003E36                     u4650:
  9422   003E36                     
  9423                           ;dc_motor_v1.c: 192:     for(int j=0; j<Distance_Calibration; j++){
  9424   003E36  0E00               	movlw	0
  9425   003E38  6E1C               	movwf	(backward@j+1)^0,c
  9426   003E3A  0E00               	movlw	0
  9427   003E3C  6E1B               	movwf	backward@j^0,c
  9428   003E3E  EF2A  F01F         	goto	l318
  9429   003E42                     l4142:
  9430                           
  9431                           ;dc_motor_v1.c: 193:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9432   003E42  0ED0               	movlw	208
  9433   003E44  6E15               	movwf	??_backward^0,c
  9434   003E46  0ECA               	movlw	202
  9435   003E48                     u5267:
  9436   003E48  2EE8               	decfsz	wreg,f,c
  9437   003E4A  D7FE               	bra	u5267
  9438   003E4C  2E15               	decfsz	??_backward^0,f,c
  9439   003E4E  D7FC               	bra	u5267
  9440   003E50                     
  9441                           ;dc_motor_v1.c: 194:     }
  9442   003E50  4A1B               	infsnz	backward@j^0,f,c
  9443   003E52  2A1C               	incf	(backward@j+1)^0,f,c
  9444   003E54                     l318:
  9445   003E54  5018               	movf	backward@Distance_Calibration^0,w,c
  9446   003E56  6E15               	movwf	??_backward^0,c
  9447   003E58  6A16               	clrf	(??_backward+1)^0,c
  9448   003E5A  5015               	movf	??_backward^0,w,c
  9449   003E5C  5C1B               	subwf	backward@j^0,w,c
  9450   003E5E  501C               	movf	(backward@j+1)^0,w,c
  9451   003E60  0A80               	xorlw	128
  9452   003E62  6E17               	movwf	(??_backward+2)^0,c
  9453   003E64  5016               	movf	(??_backward+1)^0,w,c
  9454   003E66  0A80               	xorlw	128
  9455   003E68  5817               	subwfb	(??_backward+2)^0,w,c
  9456   003E6A  A0D8               	btfss	status,0,c
  9457   003E6C  EF3A  F01F         	goto	u4661
  9458   003E70  EF3C  F01F         	goto	u4660
  9459   003E74                     u4661:
  9460   003E74  EF21  F01F         	goto	l4142
  9461   003E78                     u4660:
  9462   003E78  EF6A  F01F         	goto	l4160
  9463   003E7C                     l4146:
  9464                           
  9465                           ;dc_motor_v1.c: 198:         if(mR->power > 0 ){
  9466   003E7C  5014               	movf	backward@mR^0,w,c
  9467   003E7E  6ED9               	movwf	fsr2l,c
  9468   003E80  6ADA               	clrf	fsr2h,c
  9469   003E82  50DF               	movf	indf2,w,c
  9470   003E84  B4D8               	btfsc	status,2,c
  9471   003E86  EF47  F01F         	goto	u4671
  9472   003E8A  EF49  F01F         	goto	u4670
  9473   003E8E                     u4671:
  9474   003E8E  EF4D  F01F         	goto	l4150
  9475   003E92                     u4670:
  9476   003E92                     
  9477                           ;dc_motor_v1.c: 199:             mR->power--;
  9478   003E92  5014               	movf	backward@mR^0,w,c
  9479   003E94  6ED9               	movwf	fsr2l,c
  9480   003E96  6ADA               	clrf	fsr2h,c
  9481   003E98  06DF               	decf	indf2,f,c
  9482   003E9A                     l4150:
  9483                           
  9484                           ;dc_motor_v1.c: 201:         if(mL->power > 0 ){
  9485   003E9A  5013               	movf	backward@mL^0,w,c
  9486   003E9C  6ED9               	movwf	fsr2l,c
  9487   003E9E  6ADA               	clrf	fsr2h,c
  9488   003EA0  50DF               	movf	indf2,w,c
  9489   003EA2  B4D8               	btfsc	status,2,c
  9490   003EA4  EF56  F01F         	goto	u4681
  9491   003EA8  EF58  F01F         	goto	u4680
  9492   003EAC                     u4681:
  9493   003EAC  EF5C  F01F         	goto	l4154
  9494   003EB0                     u4680:
  9495   003EB0                     
  9496                           ;dc_motor_v1.c: 202:             mL->power--;
  9497   003EB0  5013               	movf	backward@mL^0,w,c
  9498   003EB2  6ED9               	movwf	fsr2l,c
  9499   003EB4  6ADA               	clrf	fsr2h,c
  9500   003EB6  06DF               	decf	indf2,f,c
  9501   003EB8                     l4154:
  9502                           
  9503                           ;dc_motor_v1.c: 204:         setMotorPWM(mR);
  9504   003EB8  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9505   003EBC  EC81  F01F         	call	_setMotorPWM	;wreg free
  9506   003EC0                     
  9507                           ;dc_motor_v1.c: 205:         setMotorPWM(mL);
  9508   003EC0  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9509   003EC4  EC81  F01F         	call	_setMotorPWM	;wreg free
  9510   003EC8                     
  9511                           ;dc_motor_v1.c: 206:         delay_ms_function(delay_time);
  9512   003EC8  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9513   003ECC  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9514   003ED0  ECA8  F025         	call	_delay_ms_function	;wreg free
  9515   003ED4                     l4160:
  9516                           
  9517                           ;dc_motor_v1.c: 197:     while(mL->power || mR->power > 0){
  9518   003ED4  5013               	movf	backward@mL^0,w,c
  9519   003ED6  6ED9               	movwf	fsr2l,c
  9520   003ED8  6ADA               	clrf	fsr2h,c
  9521   003EDA  50DF               	movf	indf2,w,c
  9522   003EDC  A4D8               	btfss	status,2,c
  9523   003EDE  EF73  F01F         	goto	u4691
  9524   003EE2  EF75  F01F         	goto	u4690
  9525   003EE6                     u4691:
  9526   003EE6  EF3E  F01F         	goto	l4146
  9527   003EEA                     u4690:
  9528   003EEA  5014               	movf	backward@mR^0,w,c
  9529   003EEC  6ED9               	movwf	fsr2l,c
  9530   003EEE  6ADA               	clrf	fsr2h,c
  9531   003EF0  50DF               	movf	indf2,w,c
  9532   003EF2  A4D8               	btfss	status,2,c
  9533   003EF4  EF7E  F01F         	goto	u4701
  9534   003EF8  EF80  F01F         	goto	u4700
  9535   003EFC                     u4701:
  9536   003EFC  EF3E  F01F         	goto	l4146
  9537   003F00                     u4700:
  9538   003F00  0012               	return		;funcret
  9539   003F02                     __end_of_backward:
  9540                           	callstack 0
  9541                           
  9542 ;; *************** function _setMotorPWM *****************
  9543 ;; Defined at:
  9544 ;;		line 76 in file "dc_motor_v1.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  m               1   13[COMRAM] PTR struct DC_motor
  9547 ;;		 -> motorR(9), motorL(9), 
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;  negDuty         1   17[COMRAM] unsigned char 
  9550 ;;  posDuty         1   16[COMRAM] unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  1    wreg      void 
  9553 ;; Registers used:
  9554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9560 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9563 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9564 ;;Total ram usage:        5 bytes
  9565 ;; Hardware stack levels used: 1
  9566 ;; Hardware stack levels required when called: 1
  9567 ;; This function calls:
  9568 ;;		___lwdiv
  9569 ;;		___wmul
  9570 ;; This function is called by:
  9571 ;;		_forward
  9572 ;;		_backward
  9573 ;;		_leftTURN
  9574 ;;		_rightTURN
  9575 ;;		_stop
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text35
  9580   003F02                     __ptext35:
  9581                           	callstack 0
  9582   003F02                     _setMotorPWM:
  9583                           	callstack 27
  9584   003F02                     
  9585                           ;dc_motor_v1.c: 76: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 77: {;dc_motor_v1.c: 78
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 80:     if(m->brakemode) {
  9586   003F02  500E               	movf	setMotorPWM@m^0,w,c
  9587   003F04  6ED9               	movwf	fsr2l,c
  9588   003F06  6ADA               	clrf	fsr2h,c
  9589   003F08  0E02               	movlw	2
  9590   003F0A  26D9               	addwf	fsr2l,f,c
  9591   003F0C  50DF               	movf	indf2,w,c
  9592   003F0E  B4D8               	btfsc	status,2,c
  9593   003F10  EF8C  F01F         	goto	u3861
  9594   003F14  EF8E  F01F         	goto	u3860
  9595   003F18                     u3861:
  9596   003F18  EFBE  F01F         	goto	l3732
  9597   003F1C                     u3860:
  9598   003F1C                     
  9599                           ;dc_motor_v1.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9600   003F1C  500E               	movf	setMotorPWM@m^0,w,c
  9601   003F1E  6ED9               	movwf	fsr2l,c
  9602   003F20  6ADA               	clrf	fsr2h,c
  9603   003F22  50DF               	movf	indf2,w,c
  9604   003F24  6E0F               	movwf	??_setMotorPWM^0,c
  9605   003F26  500F               	movf	??_setMotorPWM^0,w,c
  9606   003F28  6E01               	movwf	___wmul@multiplier^0,c
  9607   003F2A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9608   003F2C  500E               	movf	setMotorPWM@m^0,w,c
  9609   003F2E  6ED9               	movwf	fsr2l,c
  9610   003F30  6ADA               	clrf	fsr2h,c
  9611   003F32  0E03               	movlw	3
  9612   003F34  26D9               	addwf	fsr2l,f,c
  9613   003F36  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9614   003F3A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9615   003F3E  ECE8  F025         	call	___wmul	;wreg free
  9616   003F42  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9617   003F46  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9618   003F4A  0E00               	movlw	0
  9619   003F4C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9620   003F4E  0E64               	movlw	100
  9621   003F50  6E09               	movwf	___lwdiv@divisor^0,c
  9622   003F52  EC20  F024         	call	___lwdiv	;wreg free
  9623   003F56  500E               	movf	setMotorPWM@m^0,w,c
  9624   003F58  6ED9               	movwf	fsr2l,c
  9625   003F5A  6ADA               	clrf	fsr2h,c
  9626   003F5C  0E03               	movlw	3
  9627   003F5E  26D9               	addwf	fsr2l,f,c
  9628   003F60  50DF               	movf	indf2,w,c
  9629   003F62  6E10               	movwf	(??_setMotorPWM+1)^0,c
  9630   003F64  5007               	movf	?___lwdiv^0,w,c
  9631   003F66  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  9632   003F68  6E11               	movwf	setMotorPWM@posDuty^0,c
  9633   003F6A                     
  9634                           ;dc_motor_v1.c: 82:         negDuty=m->PWMperiod;
  9635   003F6A  500E               	movf	setMotorPWM@m^0,w,c
  9636   003F6C  6ED9               	movwf	fsr2l,c
  9637   003F6E  6ADA               	clrf	fsr2h,c
  9638   003F70  0E03               	movlw	3
  9639   003F72  26D9               	addwf	fsr2l,f,c
  9640   003F74  50DF               	movf	indf2,w,c
  9641   003F76  6E12               	movwf	setMotorPWM@negDuty^0,c
  9642                           
  9643                           ;dc_motor_v1.c: 83:     }
  9644   003F78  EFDF  F01F         	goto	l3736
  9645   003F7C                     l3732:
  9646                           
  9647                           ;dc_motor_v1.c: 85:         posDuty=0;
  9648   003F7C  0E00               	movlw	0
  9649   003F7E  6E11               	movwf	setMotorPWM@posDuty^0,c
  9650   003F80                     
  9651                           ;dc_motor_v1.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9652   003F80  500E               	movf	setMotorPWM@m^0,w,c
  9653   003F82  6ED9               	movwf	fsr2l,c
  9654   003F84  6ADA               	clrf	fsr2h,c
  9655   003F86  50DF               	movf	indf2,w,c
  9656   003F88  6E0F               	movwf	??_setMotorPWM^0,c
  9657   003F8A  500F               	movf	??_setMotorPWM^0,w,c
  9658   003F8C  6E01               	movwf	___wmul@multiplier^0,c
  9659   003F8E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9660   003F90  500E               	movf	setMotorPWM@m^0,w,c
  9661   003F92  6ED9               	movwf	fsr2l,c
  9662   003F94  6ADA               	clrf	fsr2h,c
  9663   003F96  0E03               	movlw	3
  9664   003F98  26D9               	addwf	fsr2l,f,c
  9665   003F9A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9666   003F9E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9667   003FA2  ECE8  F025         	call	___wmul	;wreg free
  9668   003FA6  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9669   003FAA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9670   003FAE  0E00               	movlw	0
  9671   003FB0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9672   003FB2  0E64               	movlw	100
  9673   003FB4  6E09               	movwf	___lwdiv@divisor^0,c
  9674   003FB6  EC20  F024         	call	___lwdiv	;wreg free
  9675   003FBA  5007               	movf	?___lwdiv^0,w,c
  9676   003FBC  6E12               	movwf	setMotorPWM@negDuty^0,c
  9677   003FBE                     l3736:
  9678                           
  9679                           ;dc_motor_v1.c: 89:     if (m->direction) {
  9680   003FBE  500E               	movf	setMotorPWM@m^0,w,c
  9681   003FC0  6ED9               	movwf	fsr2l,c
  9682   003FC2  6ADA               	clrf	fsr2h,c
  9683   003FC4  0E01               	movlw	1
  9684   003FC6  26D9               	addwf	fsr2l,f,c
  9685   003FC8  50DF               	movf	indf2,w,c
  9686   003FCA  B4D8               	btfsc	status,2,c
  9687   003FCC  EFEA  F01F         	goto	u3871
  9688   003FD0  EFEC  F01F         	goto	u3870
  9689   003FD4                     u3871:
  9690   003FD4  EF0C  F020         	goto	l3740
  9691   003FD8                     u3870:
  9692   003FD8                     
  9693                           ;dc_motor_v1.c: 90:         *(m->posDutyHighByte)=posDuty;
  9694   003FD8  500E               	movf	setMotorPWM@m^0,w,c
  9695   003FDA  6ED9               	movwf	fsr2l,c
  9696   003FDC  6ADA               	clrf	fsr2h,c
  9697   003FDE  0E05               	movlw	5
  9698   003FE0  26D9               	addwf	fsr2l,f,c
  9699   003FE2  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9700   003FE6  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9701   003FEA  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9702   003FEE  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9703   003FF2  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9704                           
  9705                           ;dc_motor_v1.c: 91:         *(m->negDutyHighByte)=negDuty;
  9706   003FF6  500E               	movf	setMotorPWM@m^0,w,c
  9707   003FF8  6ED9               	movwf	fsr2l,c
  9708   003FFA  6ADA               	clrf	fsr2h,c
  9709   003FFC  0E07               	movlw	7
  9710   003FFE  26D9               	addwf	fsr2l,f,c
  9711   004000  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9712   004004  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9713   004008  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9714   00400C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9715   004010  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9716                           
  9717                           ;dc_motor_v1.c: 92:     } else {
  9718   004014  EF2A  F020         	goto	l290
  9719   004018                     l3740:
  9720                           
  9721                           ;dc_motor_v1.c: 93:         *(m->posDutyHighByte)=negDuty;
  9722   004018  500E               	movf	setMotorPWM@m^0,w,c
  9723   00401A  6ED9               	movwf	fsr2l,c
  9724   00401C  6ADA               	clrf	fsr2h,c
  9725   00401E  0E05               	movlw	5
  9726   004020  26D9               	addwf	fsr2l,f,c
  9727   004022  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9728   004026  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9729   00402A  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9730   00402E  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9731   004032  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9732                           
  9733                           ;dc_motor_v1.c: 94:         *(m->negDutyHighByte)=posDuty;
  9734   004036  500E               	movf	setMotorPWM@m^0,w,c
  9735   004038  6ED9               	movwf	fsr2l,c
  9736   00403A  6ADA               	clrf	fsr2h,c
  9737   00403C  0E07               	movlw	7
  9738   00403E  26D9               	addwf	fsr2l,f,c
  9739   004040  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9740   004044  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9741   004048  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9742   00404C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9743   004050  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9744   004054                     l290:
  9745   004054  0012               	return		;funcret
  9746   004056                     __end_of_setMotorPWM:
  9747                           	callstack 0
  9748                           
  9749 ;; *************** function ___wmul *****************
  9750 ;; Defined at:
  9751 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;  multiplier      2    0[COMRAM] unsigned int 
  9754 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  product         2    4[COMRAM] unsigned int 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  2    0[COMRAM] unsigned int 
  9759 ;; Registers used:
  9760 ;;		wreg, status,2, status,0, prodl, prodh
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9770 ;;Total ram usage:        6 bytes
  9771 ;; Hardware stack levels used: 1
  9772 ;; This function calls:
  9773 ;;		Nothing
  9774 ;; This function is called by:
  9775 ;;		_setMotorPWM
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           	psect	text36
  9780   004BD0                     __ptext36:
  9781                           	callstack 0
  9782   004BD0                     ___wmul:
  9783                           	callstack 27
  9784   004BD0  5001               	movf	___wmul@multiplier^0,w,c
  9785   004BD2  0203               	mulwf	___wmul@multiplicand^0,c
  9786   004BD4  CFF3 F005          	movff	prodl,___wmul@product
  9787   004BD8  CFF4 F006          	movff	prodh,___wmul@product+1
  9788   004BDC  5001               	movf	___wmul@multiplier^0,w,c
  9789   004BDE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9790   004BE0  50F3               	movf	243,w,c
  9791   004BE2  2606               	addwf	(___wmul@product+1)^0,f,c
  9792   004BE4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9793   004BE6  0203               	mulwf	___wmul@multiplicand^0,c
  9794   004BE8  50F3               	movf	243,w,c
  9795   004BEA  2606               	addwf	(___wmul@product+1)^0,f,c
  9796   004BEC  C005  F001         	movff	___wmul@product,?___wmul
  9797   004BF0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9798   004BF4  0012               	return		;funcret
  9799   004BF6                     __end_of___wmul:
  9800                           	callstack 0
  9801                           
  9802 ;; *************** function ___lwdiv *****************
  9803 ;; Defined at:
  9804 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;  dividend        2    6[COMRAM] unsigned int 
  9807 ;;  divisor         2    8[COMRAM] unsigned int 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  quotient        2   10[COMRAM] unsigned int 
  9810 ;;  counter         1   12[COMRAM] unsigned char 
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  2    6[COMRAM] unsigned int 
  9813 ;; Registers used:
  9814 ;;		wreg, status,2, status,0
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9821 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9823 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9824 ;;Total ram usage:        7 bytes
  9825 ;; Hardware stack levels used: 1
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_setMotorPWM
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text37
  9834   004840                     __ptext37:
  9835                           	callstack 0
  9836   004840                     ___lwdiv:
  9837                           	callstack 27
  9838   004840  0E00               	movlw	0
  9839   004842  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9840   004844  0E00               	movlw	0
  9841   004846  6E0B               	movwf	___lwdiv@quotient^0,c
  9842   004848  5009               	movf	___lwdiv@divisor^0,w,c
  9843   00484A  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9844   00484C  B4D8               	btfsc	status,2,c
  9845   00484E  EF2B  F024         	goto	u3701
  9846   004852  EF2D  F024         	goto	u3700
  9847   004856                     u3701:
  9848   004856  EF55  F024         	goto	l1090
  9849   00485A                     u3700:
  9850   00485A  0E01               	movlw	1
  9851   00485C  6E0D               	movwf	___lwdiv@counter^0,c
  9852   00485E  EF35  F024         	goto	l3612
  9853   004862                     l3610:
  9854   004862  90D8               	bcf	status,0,c
  9855   004864  3609               	rlcf	___lwdiv@divisor^0,f,c
  9856   004866  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9857   004868  2A0D               	incf	___lwdiv@counter^0,f,c
  9858   00486A                     l3612:
  9859   00486A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9860   00486C  EF3A  F024         	goto	u3711
  9861   004870  EF3C  F024         	goto	u3710
  9862   004874                     u3711:
  9863   004874  EF31  F024         	goto	l3610
  9864   004878                     u3710:
  9865   004878                     l3614:
  9866   004878  90D8               	bcf	status,0,c
  9867   00487A  360B               	rlcf	___lwdiv@quotient^0,f,c
  9868   00487C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9869   00487E  5009               	movf	___lwdiv@divisor^0,w,c
  9870   004880  5C07               	subwf	___lwdiv@dividend^0,w,c
  9871   004882  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9872   004884  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9873   004886  A0D8               	btfss	status,0,c
  9874   004888  EF48  F024         	goto	u3721
  9875   00488C  EF4A  F024         	goto	u3720
  9876   004890                     u3721:
  9877   004890  EF4F  F024         	goto	l3622
  9878   004894                     u3720:
  9879   004894  5009               	movf	___lwdiv@divisor^0,w,c
  9880   004896  5E07               	subwf	___lwdiv@dividend^0,f,c
  9881   004898  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9882   00489A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9883   00489C  800B               	bsf	___lwdiv@quotient^0,0,c
  9884   00489E                     l3622:
  9885   00489E  90D8               	bcf	status,0,c
  9886   0048A0  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9887   0048A2  3209               	rrcf	___lwdiv@divisor^0,f,c
  9888   0048A4  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9889   0048A6  EF3C  F024         	goto	l3614
  9890   0048AA                     l1090:
  9891   0048AA  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9892   0048AE  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9893   0048B2  0012               	return		;funcret
  9894   0048B4                     __end_of___lwdiv:
  9895                           	callstack 0
  9896                           
  9897 ;; *************** function _delay_ms_function *****************
  9898 ;; Defined at:
  9899 ;;		line 68 in file "dc_motor_v1.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;  milliseconds    2    0[COMRAM] unsigned int 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      void 
  9906 ;; Registers used:
  9907 ;;		wreg, status,2, status,0
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9917 ;;Total ram usage:        3 bytes
  9918 ;; Hardware stack levels used: 1
  9919 ;; This function calls:
  9920 ;;		Nothing
  9921 ;; This function is called by:
  9922 ;;		_forward
  9923 ;;		_backward
  9924 ;;		_leftTURN
  9925 ;;		_rightTURN
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           	psect	text38
  9930   004B50                     __ptext38:
  9931                           	callstack 0
  9932   004B50                     _delay_ms_function:
  9933                           	callstack 28
  9934   004B50                     
  9935                           ;dc_motor_v1.c: 69:     while (milliseconds > 0) {
  9936   004B50  EFB5  F025         	goto	l280
  9937   004B54                     l3722:
  9938                           
  9939                           ;dc_motor_v1.c: 70:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9940   004B54  0E15               	movlw	21
  9941   004B56  6E03               	movwf	??_delay_ms_function^0,c
  9942   004B58  0EC6               	movlw	198
  9943   004B5A                     u5277:
  9944   004B5A  2EE8               	decfsz	wreg,f,c
  9945   004B5C  D7FE               	bra	u5277
  9946   004B5E  2E03               	decfsz	??_delay_ms_function^0,f,c
  9947   004B60  D7FC               	bra	u5277
  9948   004B62  D000               	nop2	
  9949   004B64                     
  9950                           ;dc_motor_v1.c: 71:         milliseconds--;
  9951   004B64  0601               	decf	delay_ms_function@milliseconds^0,f,c
  9952   004B66  A0D8               	btfss	status,0,c
  9953   004B68  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  9954   004B6A                     l280:
  9955                           
  9956                           ;dc_motor_v1.c: 69:     while (milliseconds > 0) {
  9957   004B6A  5001               	movf	delay_ms_function@milliseconds^0,w,c
  9958   004B6C  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  9959   004B6E  A4D8               	btfss	status,2,c
  9960   004B70  EFBC  F025         	goto	u3851
  9961   004B74  EFBE  F025         	goto	u3850
  9962   004B78                     u3851:
  9963   004B78  EFAA  F025         	goto	l3722
  9964   004B7C                     u3850:
  9965   004B7C  0012               	return		;funcret
  9966   004B7E                     __end_of_delay_ms_function:
  9967                           	callstack 0
  9968                           
  9969 ;; *************** function ___awdiv *****************
  9970 ;; Defined at:
  9971 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  dividend        2    0[COMRAM] int 
  9974 ;;  divisor         2    2[COMRAM] int 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  quotient        2    6[COMRAM] int 
  9977 ;;  sign            1    5[COMRAM] unsigned char 
  9978 ;;  counter         1    4[COMRAM] unsigned char 
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  2    0[COMRAM] int 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9989 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9991 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9992 ;;Total ram usage:        8 bytes
  9993 ;; Hardware stack levels used: 1
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_forward
  9998 ;;		_backward
  9999 ;;		_leftTURN
 10000 ;;		_rightTURN
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           	psect	text39
 10005   004590                     __ptext39:
 10006                           	callstack 0
 10007   004590                     ___awdiv:
 10008                           	callstack 28
 10009   004590  0E00               	movlw	0
 10010   004592  6E06               	movwf	___awdiv@sign^0,c
 10011   004594  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10012   004596  EFD1  F022         	goto	u3880
 10013   00459A  EFCF  F022         	goto	u3881
 10014   00459E                     u3881:
 10015   00459E  EFD7  F022         	goto	l3750
 10016   0045A2                     u3880:
 10017   0045A2  6C03               	negf	___awdiv@divisor^0,c
 10018   0045A4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10019   0045A6  B0D8               	btfsc	status,0,c
 10020   0045A8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10021   0045AA  0E01               	movlw	1
 10022   0045AC  6E06               	movwf	___awdiv@sign^0,c
 10023   0045AE                     l3750:
 10024   0045AE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10025   0045B0  EFDE  F022         	goto	u3890
 10026   0045B4  EFDC  F022         	goto	u3891
 10027   0045B8                     u3891:
 10028   0045B8  EFE4  F022         	goto	l3756
 10029   0045BC                     u3890:
 10030   0045BC  6C01               	negf	___awdiv@dividend^0,c
 10031   0045BE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10032   0045C0  B0D8               	btfsc	status,0,c
 10033   0045C2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10034   0045C4  0E01               	movlw	1
 10035   0045C6  1A06               	xorwf	___awdiv@sign^0,f,c
 10036   0045C8                     l3756:
 10037   0045C8  0E00               	movlw	0
 10038   0045CA  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10039   0045CC  0E00               	movlw	0
 10040   0045CE  6E07               	movwf	___awdiv@quotient^0,c
 10041   0045D0  5003               	movf	___awdiv@divisor^0,w,c
 10042   0045D2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10043   0045D4  B4D8               	btfsc	status,2,c
 10044   0045D6  EFEF  F022         	goto	u3901
 10045   0045DA  EFF1  F022         	goto	u3900
 10046   0045DE                     u3901:
 10047   0045DE  EF19  F023         	goto	l3778
 10048   0045E2                     u3900:
 10049   0045E2  0E01               	movlw	1
 10050   0045E4  6E05               	movwf	___awdiv@counter^0,c
 10051   0045E6  EFF9  F022         	goto	l3764
 10052   0045EA                     l3762:
 10053   0045EA  90D8               	bcf	status,0,c
 10054   0045EC  3603               	rlcf	___awdiv@divisor^0,f,c
 10055   0045EE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10056   0045F0  2A05               	incf	___awdiv@counter^0,f,c
 10057   0045F2                     l3764:
 10058   0045F2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10059   0045F4  EFFE  F022         	goto	u3911
 10060   0045F8  EF00  F023         	goto	u3910
 10061   0045FC                     u3911:
 10062   0045FC  EFF5  F022         	goto	l3762
 10063   004600                     u3910:
 10064   004600                     l3766:
 10065   004600  90D8               	bcf	status,0,c
 10066   004602  3607               	rlcf	___awdiv@quotient^0,f,c
 10067   004604  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10068   004606  5003               	movf	___awdiv@divisor^0,w,c
 10069   004608  5C01               	subwf	___awdiv@dividend^0,w,c
 10070   00460A  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10071   00460C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10072   00460E  A0D8               	btfss	status,0,c
 10073   004610  EF0C  F023         	goto	u3921
 10074   004614  EF0E  F023         	goto	u3920
 10075   004618                     u3921:
 10076   004618  EF13  F023         	goto	l3774
 10077   00461C                     u3920:
 10078   00461C  5003               	movf	___awdiv@divisor^0,w,c
 10079   00461E  5E01               	subwf	___awdiv@dividend^0,f,c
 10080   004620  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10081   004622  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10082   004624  8007               	bsf	___awdiv@quotient^0,0,c
 10083   004626                     l3774:
 10084   004626  90D8               	bcf	status,0,c
 10085   004628  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10086   00462A  3203               	rrcf	___awdiv@divisor^0,f,c
 10087   00462C  2E05               	decfsz	___awdiv@counter^0,f,c
 10088   00462E  EF00  F023         	goto	l3766
 10089   004632                     l3778:
 10090   004632  5006               	movf	___awdiv@sign^0,w,c
 10091   004634  B4D8               	btfsc	status,2,c
 10092   004636  EF1F  F023         	goto	u3931
 10093   00463A  EF21  F023         	goto	u3930
 10094   00463E                     u3931:
 10095   00463E  EF25  F023         	goto	l3782
 10096   004642                     u3930:
 10097   004642  6C07               	negf	___awdiv@quotient^0,c
 10098   004644  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10099   004646  B0D8               	btfsc	status,0,c
 10100   004648  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10101   00464A                     l3782:
 10102   00464A  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10103   00464E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10104   004652  0012               	return		;funcret
 10105   004654                     __end_of___awdiv:
 10106                           	callstack 0
 10107                           
 10108 ;; *************** function _adjust_calibration *****************
 10109 ;; Defined at:
 10110 ;;		line 25 in file "calibration.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  calibration_    1    0[COMRAM] PTR int 
 10113 ;;		 -> calibration(9), 
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;		None
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      void 
 10118 ;; Registers used:
 10119 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10125 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;Total ram usage:        5 bytes
 10130 ;; Hardware stack levels used: 1
 10131 ;; This function calls:
 10132 ;;		Nothing
 10133 ;; This function is called by:
 10134 ;;		_calibration_routine
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text40
 10139   004056                     __ptext40:
 10140                           	callstack 0
 10141   004056                     _adjust_calibration:
 10142                           	callstack 29
 10143   004056                     l185:
 10144                           
 10145                           ;calibration.c: 31:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
 10146   004056  A68E               	btfss	142,3,c	;volatile
 10147   004058  EF30  F020         	goto	u4391
 10148   00405C  EF32  F020         	goto	u4390
 10149   004060                     u4391:
 10150   004060  EF39  F020         	goto	l3926
 10151   004064                     u4390:
 10152   004064  B48E               	btfsc	142,2,c	;volatile
 10153   004066  EF37  F020         	goto	u4401
 10154   00406A  EF39  F020         	goto	u4400
 10155   00406E                     u4401:
 10156   00406E  EF2B  F020         	goto	l185
 10157   004072                     u4400:
 10158   004072                     l3926:
 10159                           
 10160                           ;calibration.c: 32:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10161   004072  0E09               	movlw	9
 10162   004074  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10163   004076  0E1E               	movlw	30
 10164   004078  6E02               	movwf	??_adjust_calibration^0,c
 10165   00407A  0EE4               	movlw	228
 10166   00407C                     u5287:
 10167   00407C  2EE8               	decfsz	wreg,f,c
 10168   00407E  D7FE               	bra	u5287
 10169   004080  2E02               	decfsz	??_adjust_calibration^0,f,c
 10170   004082  D7FC               	bra	u5287
 10171   004084  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10172   004086  D7FA               	bra	u5287
 10173   004088  D000               	nop2	
 10174   00408A                     
 10175                           ;calibration.c: 34:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
 10176   00408A  B68E               	btfsc	142,3,c	;volatile
 10177   00408C  EF4A  F020         	goto	u4411
 10178   004090  EF4C  F020         	goto	u4410
 10179   004094                     u4411:
 10180   004094  EF65  F020         	goto	l189
 10181   004098                     u4410:
 10182   004098  B48E               	btfsc	142,2,c	;volatile
 10183   00409A  EF51  F020         	goto	u4421
 10184   00409E  EF53  F020         	goto	u4420
 10185   0040A2                     u4421:
 10186   0040A2  EF65  F020         	goto	l189
 10187   0040A6                     u4420:
 10188   0040A6                     
 10189                           ;calibration.c: 36:                 LATHbits.LATH3 = 1;
 10190   0040A6  8680               	bsf	128,3,c	;volatile
 10191                           
 10192                           ;calibration.c: 37:                 LATDbits.LATD7 = 1;
 10193   0040A8  8E7C               	bsf	124,7,c	;volatile
 10194   0040AA                     
 10195                           ;calibration.c: 38:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
 10196   0040AA  0E52               	movlw	82
 10197   0040AC  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10198   0040AE  0E2B               	movlw	43
 10199   0040B0  6E02               	movwf	??_adjust_calibration^0,c
 10200   0040B2  0E00               	movlw	0
 10201   0040B4                     u5297:
 10202   0040B4  2EE8               	decfsz	wreg,f,c
 10203   0040B6  D7FE               	bra	u5297
 10204   0040B8  2E02               	decfsz	??_adjust_calibration^0,f,c
 10205   0040BA  D7FC               	bra	u5297
 10206   0040BC  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10207   0040BE  D7FA               	bra	u5297
 10208   0040C0  D000               	nop2	
 10209   0040C2                     
 10210                           ;calibration.c: 39:                 LATHbits.LATH3 = 0;
 10211   0040C2  9680               	bcf	128,3,c	;volatile
 10212   0040C4                     
 10213                           ;calibration.c: 40:                 LATDbits.LATD7 = 0;
 10214   0040C4  9E7C               	bcf	124,7,c	;volatile
 10215                           
 10216                           ;calibration.c: 41:                 break;
 10217   0040C6  EFD1  F020         	goto	l195
 10218   0040CA                     l189:
 10219                           
 10220                           ;calibration.c: 44:                 if(!PORTFbits.RF2){
 10221   0040CA  B48E               	btfsc	142,2,c	;volatile
 10222   0040CC  EF6A  F020         	goto	u4431
 10223   0040D0  EF6C  F020         	goto	u4430
 10224   0040D4                     u4431:
 10225   0040D4  EF98  F020         	goto	l3952
 10226   0040D8                     u4430:
 10227   0040D8                     
 10228                           ;calibration.c: 45:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10229   0040D8  0E11               	movlw	17
 10230   0040DA  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10231   0040DC  0E3C               	movlw	60
 10232   0040DE  6E02               	movwf	??_adjust_calibration^0,c
 10233   0040E0  0ECB               	movlw	203
 10234   0040E2                     u5307:
 10235   0040E2  2EE8               	decfsz	wreg,f,c
 10236   0040E4  D7FE               	bra	u5307
 10237   0040E6  2E02               	decfsz	??_adjust_calibration^0,f,c
 10238   0040E8  D7FC               	bra	u5307
 10239   0040EA  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10240   0040EC  D7FA               	bra	u5307
 10241   0040EE  0000               	nop	
 10242   0040F0                     
 10243                           ;calibration.c: 46:                     *calibration_label = *calibration_label + 1;
 10244   0040F0  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10245   0040F2  6ED9               	movwf	fsr2l,c
 10246   0040F4  6ADA               	clrf	fsr2h,c
 10247   0040F6  CFDE F002          	movff	postinc2,??_adjust_calibration
 10248   0040FA  CFDD F003          	movff	postdec2,??_adjust_calibration+1
 10249   0040FE  0E01               	movlw	1
 10250   004100  2602               	addwf	??_adjust_calibration^0,f,c
 10251   004102  0E00               	movlw	0
 10252   004104  2203               	addwfc	(??_adjust_calibration+1)^0,f,c
 10253   004106  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10254   004108  6ED9               	movwf	fsr2l,c
 10255   00410A  6ADA               	clrf	fsr2h,c
 10256   00410C  C002  FFDE         	movff	??_adjust_calibration,postinc2
 10257   004110  C003  FFDD         	movff	??_adjust_calibration+1,postdec2
 10258   004114                     
 10259                           ;calibration.c: 47:                     LATDbits.LATD7 = 1;
 10260   004114  8E7C               	bsf	124,7,c	;volatile
 10261   004116                     
 10262                           ;calibration.c: 48:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10263   004116  0E11               	movlw	17
 10264   004118  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10265   00411A  0E3C               	movlw	60
 10266   00411C  6E02               	movwf	??_adjust_calibration^0,c
 10267   00411E  0ECB               	movlw	203
 10268   004120                     u5317:
 10269   004120  2EE8               	decfsz	wreg,f,c
 10270   004122  D7FE               	bra	u5317
 10271   004124  2E02               	decfsz	??_adjust_calibration^0,f,c
 10272   004126  D7FC               	bra	u5317
 10273   004128  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10274   00412A  D7FA               	bra	u5317
 10275   00412C  0000               	nop	
 10276   00412E                     
 10277                           ;calibration.c: 49:                     LATDbits.LATD7 = 0;
 10278   00412E  9E7C               	bcf	124,7,c	;volatile
 10279   004130                     l3952:
 10280                           
 10281                           ;calibration.c: 52:                 if(!PORTFbits.RF3){
 10282   004130  B68E               	btfsc	142,3,c	;volatile
 10283   004132  EF9D  F020         	goto	u4441
 10284   004136  EF9F  F020         	goto	u4440
 10285   00413A                     u4441:
 10286   00413A  EFCF  F020         	goto	l186
 10287   00413E                     u4440:
 10288   00413E                     
 10289                           ;calibration.c: 53:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10290   00413E  0E11               	movlw	17
 10291   004140  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10292   004142  0E3C               	movlw	60
 10293   004144  6E02               	movwf	??_adjust_calibration^0,c
 10294   004146  0ECB               	movlw	203
 10295   004148                     u5327:
 10296   004148  2EE8               	decfsz	wreg,f,c
 10297   00414A  D7FE               	bra	u5327
 10298   00414C  2E02               	decfsz	??_adjust_calibration^0,f,c
 10299   00414E  D7FC               	bra	u5327
 10300   004150  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10301   004152  D7FA               	bra	u5327
 10302   004154  0000               	nop	
 10303   004156                     
 10304                           ;calibration.c: 54:                     *calibration_label = *calibration_label - 1;
 10305   004156  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10306   004158  6ED9               	movwf	fsr2l,c
 10307   00415A  6ADA               	clrf	fsr2h,c
 10308   00415C  CFDE F002          	movff	postinc2,??_adjust_calibration
 10309   004160  CFDD F003          	movff	postdec2,??_adjust_calibration+1
 10310   004164  0EFF               	movlw	255
 10311   004166  2402               	addwf	??_adjust_calibration^0,w,c
 10312   004168  6E04               	movwf	(??_adjust_calibration+2)^0,c
 10313   00416A  0EFF               	movlw	255
 10314   00416C  2003               	addwfc	(??_adjust_calibration+1)^0,w,c
 10315   00416E  6E05               	movwf	(??_adjust_calibration+3)^0,c
 10316   004170  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10317   004172  6ED9               	movwf	fsr2l,c
 10318   004174  6ADA               	clrf	fsr2h,c
 10319   004176  C004  FFDE         	movff	??_adjust_calibration+2,postinc2
 10320   00417A  C005  FFDD         	movff	??_adjust_calibration+3,postdec2
 10321   00417E                     
 10322                           ;calibration.c: 55:                     LATHbits.LATH3 = 1;
 10323   00417E  8680               	bsf	128,3,c	;volatile
 10324   004180                     
 10325                           ;calibration.c: 56:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10326   004180  0E11               	movlw	17
 10327   004182  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10328   004184  0E3C               	movlw	60
 10329   004186  6E02               	movwf	??_adjust_calibration^0,c
 10330   004188  0ECB               	movlw	203
 10331   00418A                     u5337:
 10332   00418A  2EE8               	decfsz	wreg,f,c
 10333   00418C  D7FE               	bra	u5337
 10334   00418E  2E02               	decfsz	??_adjust_calibration^0,f,c
 10335   004190  D7FC               	bra	u5337
 10336   004192  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10337   004194  D7FA               	bra	u5337
 10338   004196  0000               	nop	
 10339   004198                     
 10340                           ;calibration.c: 57:                     LATHbits.LATH3 = 0;
 10341   004198  9680               	bcf	128,3,c	;volatile
 10342   00419A  EF2B  F020         	goto	l185
 10343   00419E                     l186:
 10344   00419E  EF2B  F020         	goto	l185
 10345   0041A2                     l195:
 10346   0041A2  0012               	return		;funcret
 10347   0041A4                     __end_of_adjust_calibration:
 10348                           	callstack 0
 10349                           
 10350                           	psect	smallconst
 10351   000E00                     __psmallconst:
 10352                           	callstack 0
 10353   000E00  00                 	db	0
 10354   000E01  00                 	db	0	; dummy byte at the end
 10355   000000                     
 10356                           	psect	rparam
 10357   000000                     
 10358                           	psect	config
 10359                           
 10360                           ;Config register CONFIG1L @ 0x300000
 10361                           ;	External Oscillator mode Selection bits
 10362                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10363                           ;	Power-up default value for COSC bits
 10364                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10365   300000                     	org	3145728
 10366   300000  AA                 	db	170
 10367                           
 10368                           ;Config register CONFIG1H @ 0x300001
 10369                           ;	unspecified, using default values
 10370                           ;	Clock Out Enable bit
 10371                           ;	CLKOUTEN = 0x1, unprogrammed default
 10372                           ;	Clock Switch Enable bit
 10373                           ;	CSWEN = 0x1, unprogrammed default
 10374                           ;	Fail-Safe Clock Monitor Enable bit
 10375                           ;	FCMEN = 0x1, unprogrammed default
 10376   300001                     	org	3145729
 10377   300001  FF                 	db	255
 10378                           
 10379                           ;Config register CONFIG3L @ 0x300004
 10380                           ;	WDT Period Select bits
 10381                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10382                           ;	WDT operating mode
 10383                           ;	WDTE = OFF, WDT Disabled
 10384   300004                     	org	3145732
 10385   300004  9F                 	db	159
 10386                           
 10387                           ;Config register CONFIG3H @ 0x300005
 10388                           ;	unspecified, using default values
 10389                           ;	WDT Window Select bits
 10390                           ;	WDTCWS = 0x7, unprogrammed default
 10391                           ;	WDT input clock selector
 10392                           ;	WDTCCS = 0x7, unprogrammed default
 10393   300005                     	org	3145733
 10394   300005  FF                 	db	255
 10395                           tosu	equ	0xFFF
 10396                           tosh	equ	0xFFE
 10397                           tosl	equ	0xFFD
 10398                           stkptr	equ	0xFFC
 10399                           pclatu	equ	0xFFB
 10400                           pclath	equ	0xFFA
 10401                           pcl	equ	0xFF9
 10402                           tblptru	equ	0xFF8
 10403                           tblptrh	equ	0xFF7
 10404                           tblptrl	equ	0xFF6
 10405                           tablat	equ	0xFF5
 10406                           prodh	equ	0xFF4
 10407                           prodl	equ	0xFF3
 10408                           indf0	equ	0xFEF
 10409                           postinc0	equ	0xFEE
 10410                           postdec0	equ	0xFED
 10411                           preinc0	equ	0xFEC
 10412                           plusw0	equ	0xFEB
 10413                           fsr0h	equ	0xFEA
 10414                           fsr0l	equ	0xFE9
 10415                           wreg	equ	0xFE8
 10416                           indf1	equ	0xFE7
 10417                           postinc1	equ	0xFE6
 10418                           postdec1	equ	0xFE5
 10419                           preinc1	equ	0xFE4
 10420                           plusw1	equ	0xFE3
 10421                           fsr1h	equ	0xFE2
 10422                           fsr1l	equ	0xFE1
 10423                           bsr	equ	0xFE0
 10424                           indf2	equ	0xFDF
 10425                           postinc2	equ	0xFDE
 10426                           postdec2	equ	0xFDD
 10427                           preinc2	equ	0xFDC
 10428                           plusw2	equ	0xFDB
 10429                           fsr2h	equ	0xFDA
 10430                           fsr2l	equ	0xFD9
 10431                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    120     157
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    backward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    backward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    calibration_routine@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    calibration_routine@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    calibration_routine@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    leftTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    leftTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    maze_return@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    maze_return@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_return@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    maze_search@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    maze_search@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_search@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    rightTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    rightTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    rightTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    S551DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    S551DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    switch_calibration@calibration_index	PTR int  size(1) Largest target is 9
		 -> calibration(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _maze_return->_backward
    _maze_return->_forward
    _maze_return->_leftTURN
    _maze_return->_rightTURN
    _calibration_routine->_backward
    _calibration_routine->_forward
    _calibration_routine->_leftTURN
    _calibration_routine->_rightTURN
    _rightTURN->_setMotorPWM
    _leftTURN->_setMotorPWM
    _forward->_setMotorPWM
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  136500
                _calibration_routine
                    _initDCmotorsPWM
                        _maze_return
                        _maze_search
            _pause_until_RF2_pressed
 ---------------------------------------------------------------------------------
 (1) _pause_until_RF2_pressed                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _maze_search                                          7     4      3   74636
                                             93 COMRAM     2     2      0
                                            115 BANK0      5     2      3
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (2) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _color_cardCheck                                     32    30      2   43948
                                             91 COMRAM     2     0      2
                                             85 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGB_to_HSV                                          75    56     19   33673
                                             10 BANK0     75    56     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (4) _custom_floatmodulo                                  18    10      8   11208
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                             33 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _maze_return                                         13    10      3   30795
                                             32 COMRAM    13    10      3
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                  4     1      3   30904
                                             32 COMRAM     4     1      3
                 _adjust_calibration
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
                 _switch_calibration
 ---------------------------------------------------------------------------------
 (2) _switch_calibration                                   3     2      1     652
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _rightTURN                                           16    14      2    7551
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _leftTURN                                            16    14      2    5727
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                             16    14      2    6791
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _backward                                            16    14      2    8159
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    2437
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms_function                                    3     1      2     631
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _adjust_calibration                                   5     4      1     696
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration_routine
     _adjust_calibration
     _backward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _forward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _leftTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _rightTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _switch_calibration
   _initDCmotorsPWM
   _maze_return
     _backward
     _forward
     _leftTURN
     _rightTURN
   _maze_search
     _backward
     _color_cardCheck
       _RGB_to_HSV
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         ___fleq
         ___flge
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___flsub
         _custom_floatmodulo
           ___fldiv
           ___fleq
           ___flmul
           ___flsub
           ___fltol
           ___xxtofl
       ___flge
       ___xxtofl
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _color_click_init
       _I2C_2_Master_Init
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _leftTURN
     _rightTURN
   _pause_until_RF2_pressed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhl     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllll     20      0       0      45        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhl      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17E      58        0.0%
DATA                 0      0     17E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 15 05:16:58 2024

                     _color_read_Red 4912                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 4A02                                   l31 4B18  
                                 l40 49B0                                   l50 42BA  
                                 l34 4C14                                   l43 4A50  
                                 l60 195E                                   l37 4960  
                                 l70 1A50                                   l62 19B8  
                                 l46 4A00                                   l80 1E18  
                                 l72 1A60                                   l64 19C8  
                                 l74 1ABA                                   l58 194E  
                                 l76 1ACA                                   l86 1F22  
                                 l87 1F5E                                   l99 1830  
                       ___awdiv@sign 0006                  ___wmul@multiplicand 0003  
                   _color_read_Clear 49B2                     _color_read_Green 4962  
                                l105 1838                                  l203 4700  
                                l132 4BA6                                  l141 4C34  
                                l206 3528                                  l150 4C20  
                                l135 4BA8                                  l312 3A88  
                                l304 39DC                                  l144 4C3E  
                                l153 4AD8                                  l218 3754  
                                l138 4BCE                                  l147 4C2A  
                                l340 3D84                                  l332 3CD8  
                                l326 3F00                                  l318 3E54  
                                l502 2D12                                  l182 4910  
                                l280 4B6A                                  l512 2D62  
                                l185 4056                                  l186 419E  
                                l290 4054                                  l354 3C06  
                                l346 3B5A                                  l178 48B4  
                                l195 41A2                                  l283 4B7C  
                                l189 40CA                                  l277 483E  
                                l198 4654                                  l199 46BE  
                                l484 2420                                  l477 241C  
                                l830 4652                                  l487 28E2  
                                l599 4BF4                                  l864 447E  
                                l858 47AA                                  l869 44C4  
                                l896 43C0                                  wreg 0FE8  
                       ___flmul@aexp 004C                         ___flmul@bexp 004D  
                       ___flmul@sign 0047                         ___flmul@temp 0052  
                       ___flmul@prod 004E           __end_of_adjust_calibration 41A4  
                       ___fltol@exp1 000A                                 l1220 301E  
                               l1213 2E28                                 l1230 314E  
                               l1222 3096                                 l1223 3084  
                               l1127 2610                                 l1144 272A  
                               l1136 28E0                                 l1128 25FE  
                               l3000 2532                                 l1217 318C  
                               l1153 27FA                                 l1129 25C4  
                               l1090 48AA                                 l1154 27E8  
                               l3010 2546                                 l3002 2536  
                               l3100 2798                                 l3020 255A  
                               l3012 254A                                 l3004 253A  
                               l1181 3526                                 l1261 3844  
                               l3110 27CA                                 l3102 27A8  
                               l3030 25AC                                 l3022 255E  
                               l3014 254E                                 l3006 253E  
                               l1254 37AC                                 l1183 3386  
                               l4000 3B1E                                 l1192 33CC  
                               l3120 2824                                 l3112 27E0  
                               l3104 27AA                                 l3040 25F0  
                               l3032 25BC                                 l3016 2552  
                               l3008 2542                                 l3024 2562  
                               l1097 48B2                                 l1169 4A96  
                               l1257 3908                                 l4010 3B98  
                               l4002 3B3C                                 l1194 3444  
                               l1186 334A                                 l3210 32C4  
                               l3202 32A0                                 l3130 28A0  
                               l3122 285E                                 l3106 27B8  
                               l3042 25F2                                 l3034 25D2  
                               l3026 2566                                 l3018 2556  
                               l1195 3432                                 l4100 3A04  
                               l4020 3BCE                                 l4012 3BA0  
                               l4004 3B48                                 l3220 3316  
                               l3212 32DE                                 l3204 32B0  
                               l3300 2DA0                                 l3140 28C0  
                               l3132 28A4                                 l3116 280A  
                               l3124 2860                                 l3108 27BC  
                               l3060 267A                                 l3052 2642  
                               l3044 25FC                                 l3036 25DE  
                               l3028 2590                                 l1268 38A0  
                               l4110 3A48                                 l4102 3A1A  
                               l4030 3C2C                                 l4014 3BB6  
                               l4022 3BDA                                 l4006 3B56  
                               l3230 3372                                 l3222 3326  
                               l3214 32EE                                 l3206 32B0  
                               l3310 2DD2                                 l3302 2DB0  
                               l3142 28CE                                 l3134 28B2  
                               l3126 2870                                 l3118 2816  
                               l3062 267E                                 l3054 2652  
                               l3046 261E                                 l3070 269E  
                               l3038 25E2                                 l3150 4BB8  
                               l4120 3DA0                                 l4112 3A50  
                               l4104 3A22                                 l4040 3C84  
                               l4032 3C2C                                 l4024 3BF0  
                               l4016 3BBE                                 l4008 3B82  
                               l4200 3602                                 l3240 33B2  
                               l3232 3374                                 l3224 333A  
                               l3216 32FE                                 l3160 31BA  
                               l3152 318E                                 l3400 3108  
                               l3320 2E12                                 l3312 2DE0  
                               l3304 2DB6                                 l3144 28D0  
                               l3136 28B8                                 l3128 2880  
                               l3072 26C4                                 l3080 271A  
                               l3064 268C                                 l3056 2660  
                               l3048 262E                                 l4130 3DF8  
                               l4122 3DA8                                 l4106 3A38  
                               l4114 3A5C                                 l4050 3CC6  
                               l4042 3C8C                                 l4034 3C48  
                               l4026 3C0A                                 l4018 3BC6  
                               l4210 364E                                 l4202 360C  
                               l3250 33EE                                 l3242 33BC  
                               l3234 3384                                 l3226 3348  
                               l3218 330E                                 l3170 31F4  
                               l3162 31CA                                 l3154 319A  
                               l3410 3170                                 l3402 311C  
                               l3330 2E5C                                 l3322 2E18  
                               l3314 2DE2                                 l3306 2DC6  
                               l3138 28BA                                 l3090 276E  
                               l3082 2740                                 l3074 26F8  
                               l3066 268E                                 l3058 266E  
                               l4140 3E36                                 l4132 3E00  
                               l4124 3DA8                                 l4116 3A72  
                               l4108 3A40                                 l4060 3D34  
                               l4052 3CD4                                 l4044 3C98  
                               l4036 3C54                                 l4028 3C24  
                               l4220 36A8                                 l4212 3666  
                               l4204 3624                                 l3260 3460  
                               l3252 33FC                                 l3244 33CA  
                               l3236 3396                                 l3228 3354  
                               l3180 3220                                 l3172 31FA  
                               l3164 31DA                                 l3156 31A8  
                               l3412 3172                                 l3404 3136  
                               l3340 2EAC                                 l3332 2E68  
                               l3324 2E38                                 l3316 2DF2  
                               l3308 2DCC                                 l3092 277C  
                               l3084 2750                                 l3076 26FA  
                               l3068 2698                                 l3420 4A52  
                               l3500 37EE                                 l3148 4BA8  
                               l4300 206E                                 l4150 3E9A  
                               l4142 3E42                                 l4134 3E08  
                               l4126 3DC4                                 l4118 3D88  
                               l4070 3D6E                                 l4062 3D3C  
                               l4054 3D00                                 l4038 3C7C  
                               l4046 3C9C                                 l4230 36F2  
                               l4222 36B0                                 l4214 366E  
                               l4206 362C                                 l3270 34CC  
                               l3262 346E                                 l3254 342A  
                               l3238 33AC                                 l3246 33DC  
                               l3190 325A                                 l3182 3230  
                               l3174 3200                                 l3166 31DC  
                               l3158 31AA                                 l3430 4740  
                               l3406 3152                                 l3414 3178  
                               l3350 2EEE                                 l3342 2EB8  
                               l3334 2E72                                 l3326 2E48  
                               l3318 2E02                                 l3094 277E  
                               l3078 270A                                 l3422 4A62  
                               l3510 3876                                 l3502 37FA  
                               l4310 20B4                                 l4302 208A  
                               l4152 3EB0                                 l4160 3ED4  
                               l4144 3E50                                 l4136 3E14  
                               l4128 3DD0                                 l4080 394C  
                               l4072 390C                                 l4064 3D44  
                               l4056 3D16                                 l4048 3CBA  
                               l4240 374A                                 l4232 370A  
                               l4224 36C8                                 l4216 3686  
                               l4208 3644                                 l4400 2918  
                               l3600 44C2                                 l3280 351A  
                               l3272 34E6                                 l3264 3498  
                               l3248 33EA                                 l3192 3270  
                               l3184 3240                                 l3176 320E  
                               l3168 31E4                                 l3432 476E  
                               l3416 317C                                 l3408 3162  
                               l3360 2F50                                 l3352 2EFA  
                               l3344 2EC4                                 l3336 2E88  
                               l3096 278C                                 l3088 2764  
                               l3520 38B4                                 l3512 3882  
                               l3504 382C                                 l4312 20C6  
                               l4320 210E                                 l4304 209C  
                               l3610 4862                                 l4162 3EEA  
                               l4154 3EB8                                 l4146 3E7C  
                               l4138 3E18                                 l4090 399C  
                               l4082 3958                                 l4074 3928  
                               l4066 3D4C                                 l4058 3D1E  
                               l4234 3714                                 l4226 36D2  
                               l4218 3690                                 l4250 480A  
                               l4242 47AC                                 l4402 2924  
                               l4410 2986                                 l3282 351C  
                               l3274 3502                                 l3258 3454  
                               l3266 349C                                 l3194 3280  
                               l3186 3242                                 l3178 3210  
                               l3434 477E                                 l3426 4702  
                               l3370 2FE6                                 l3362 2F5C  
                               l3354 2F0A                                 l3346 2ED2  
                               l3338 2E94                                 l3290 2D64  
                               l3098 2794                                 l3450 4310  
                               l3442 42BC                                 l3522 38D8  
                               l3514 3890                                 l3506 382E  
                               l4322 2122                                 l4330 216A  
                               l4314 20D6                                 l4306 20AE  
                               l4170 48F6                                 l3620 489C  
                               l3612 486A                                 l3604 4840  
                               l4156 3EC0                                 l4148 3E92  
                               l4084 3980                                 l4092 39A0  
                               l4076 3930                                 l4068 3D58  
                               l4236 372C                                 l4228 36EA  
                               l4180 355E                                 l4260 482C  
                               l4252 4814                                 l4244 47BC  
                               l4420 2A46                                 l4412 29A2  
                               l4404 293C                                 l3276 3506  
                               l3268 34B6                                 l3196 3288  
                               l3188 324A                                 l3436 47A2  
                               l3428 4730                                 l3380 303C  
                               l3372 3004                                 l3364 2F78  
                               l3356 2F24                                 l3348 2EDE  
                               l3292 2D70                                 l3452 4312  
                               l3444 42D2                                 l3524 38E8  
                               l3516 38AE                                 l3508 383A  
                               l3700 1CD6                                 l3532 4C2C  
                               l3540 4C22                                 l4340 21C2  
                               l4332 217E                                 l4324 2132  
                               l4316 20D8                                 l4308 20B2  
                               l4172 490E                                 l4164 48B6  
                               l4500 44EA                                 l3622 489E  
                               l3614 4878                                 l3606 4848  
                               l4158 3EC8                                 l4094 39BE  
                               l4086 3988                                 l4078 3930  
                               l4238 3734                                 l4190 35A8  
                               l4182 3566                                 l4174 3528  
                               l4262 482E                                 l4254 4816  
                               l4246 47E2                                 l4430 2C3E  
                               l4422 2A7A                                 l4414 29D6  
                               l4406 2940                                 l3278 3514  
                               l3198 328C                                 l3438 47A8  
                               l3390 30A6                                 l3382 3040  
                               l3374 300E                                 l3366 2FA2  
                               l3358 2F34                                 l3294 2D7E  
                               l3454 4322                                 l3526 38F6  
                               l3518 38B0                                 l3710 1E28  
                               l3702 1D32                                 l3550 4A9E  
                               l3534 4C30                                 l3542 4C26  
                               l3630 4B8E                                 l4350 221E  
                               l4334 218E                                 l4342 21E0  
                               l4326 2134                                 l4318 20F0  
                               l4270 1F60                                 l4166 48CE  
                               l4510 450A                                 l4502 44EE  
                               l3720 4B50                                 l3624 48A4  
                               l3616 487E                                 l3608 485A  
                               l4096 39CA                                 l4088 3990  
                               l4192 35C0                                 l4184 357E  
                               l4176 353E                                 l4264 4838  
                               l4256 4820                                 l4248 47E6  
                               l4440 2D18                                 l4432 2C5C  
                               l4424 2A98                                 l4416 29F4  
                               l4408 296A                                 l3392 30B2  
                               l3384 304E                                 l3376 301C  
                               l3368 2FD8                                 l3296 2D80  
                               l3480 43A0                                 l3464 434C  
                               l3456 4326                                 l3448 42E6  
                               l3528 38F8                                 l3712 1E5C  
                               l3704 1D64                                 l3552 4AA6  
                               l3544 4C36                                 l3536 4C18  
                               l3640 4912                                 l3632 4B90  
                               l3800 4B10                                 l4360 227C  
                               l4352 2238                                 l4344 21F4  
                               l4336 2190                                 l4328 214C  
                               l4280 1F9A                                 l4272 1F64  
                               l4168 48E8                                 l4520 4526  
                               l4512 450E                                 l4504 44F2  
                               l3722 4B54                                 l3618 4894  
                               l3730 3F6A                                 l4098 39D8  
                               l4194 35CA                                 l4186 3588  
                               l4178 3546                                 l4266 483A  
                               l4258 4822                                 l4450 2D42  
                               l4442 2D26                                 l4434 2CA8  
                               l4426 2B5C                                 l4418 2A28  
                               l3394 30C0                                 l3386 307C  
                               l3378 302E                                 l3298 2D90  
                               l3482 43B0                                 l3474 4374  
                               l3466 4356                                 l3458 4334  
                               l3490 3776                                 l3570 423A  
                               l3562 41A4                                 l3714 1E74  
                               l3706 1DBC                                 l3554 4AAE  
                               l3546 4C3A                                 l3538 4C1C  
                               l3642 4958                                 l3810 0E9A  
                               l3634 4B92                                 l3626 4B7E  
                               l3802 4B12                                 l4370 22F0  
                               l4362 2294                                 l4346 2204  
                               l4354 2256                                 l4338 21A8  
                               l4290 1FC0                                 l4282 1F9E  
                               l4274 1F7C                                 l4530 453E  
                               l4522 452E                                 l4514 4512  
                               l4506 44FA                                 l3724 4B64  
                               l3740 4018                                 l3732 3F7C  
                               l4196 35E2                                 l4188 35A0  
                               l4268 483C                                 l4452 2D46  
                               l4436 2CC6                                 l4428 2B7A  
                               l3396 30EA                                 l3476 4380  
                               l3468 4360                                 l3492 37BC  
                               l3572 42AA                                 l3564 41D6  
                               l3716 1EA6                                 l3708 1E18  
                               l3556 4AD4                                 l3548 4A9A  
                               l3652 4A02                                 l3660 49F8  
                               l3900 1684                                 l3820 0F8C  
                               l3812 0EEC                                 l3636 4B94  
                               l3628 4B88                                 l3804 4B14  
                               l4380 234C                                 l4372 22F2  
                               l4364 22AE                                 l4356 226A  
                               l4348 2206                                 l4292 2026  
                               l4284 1FAA                                 l4276 1F7E  
                               l4540 4552                                 l4532 4542  
                               l4524 4532                                 l4516 4516  
                               l4508 4502                                 l3750 45AE  
                               l3742 4590                                 l3734 3F80  
                               l3726 3F02                                 l4198 35EA  
                               l4438 2D12                                 l4390 28E2  
                               l3590 443E                                 l3582 43C2  
                               l3398 30EE                                 l2950 243C  
                               l3478 4390                                 l3494 37D2  
                               l3486 3758                                 l3718 1EC2  
                               l3670 1972                                 l3558 4AD6  
                               l3654 4A48                                 l3646 4962  
                               l3910 175A                                 l3902 16B6  
                               l3830 1062                                 l3822 0FBE  
                               l3814 0EF6                                 l3638 4BF8  
                               l3806 4B16                                 l4382 234E  
                               l4374 230A                                 l4358 227A  
                               l4366 22CC                                 l4294 2034  
                               l4286 1FAC                                 l4278 1F80  
                               l4542 4556                                 l4534 4546  
                               l4526 4536                                 l4518 451E  
                               l3760 45E2                                 l3752 45BC  
                               l3744 4594                                 l3576 4BD0  
                               l3736 3FBE                                 l3728 3F1C  
                               l4448 2D34                                 l3592 444C  
                               l3584 43F0                                 l2960 2470  
                               l2952 243E                                 l3488 3768  
                               l3568 41EA                                 l3680 1A74  
                               l3672 19A4                                 l3664 183A  
                               l3648 49A8                                 l3912 178C  
                               l3904 16E8                                 l3840 115C  
                               l3832 1094                                 l3920 1830  
                               l3824 0FF0                                 l3816 0F28  
                               l3808 0E02                                 l4384 2366  
                               l4368 22E0                                 l4376 2328  
                               l4296 204C                                 l4288 1FAE  
                               l4544 4566                                 l4536 454A  
                               l4528 453A                                 l4480 44C6  
                               l3930 4098                                 l3770 461C  
                               l3762 45EA                                 l3754 45C4  
                               l3746 45A2                                 l3578 4BEC  
                               l3738 3FD8                                 l3594 445E  
                               l3586 4400                                 l2970 24A2  
                               l2954 244E                                 l2962 2478  
                               l2946 2422                                 l3498 37E6  
                               l3690 1B88                                 l3682 1AA6  
                               l3674 19D8                                 l3666 1908  
                               l3658 49B2                                 l3914 17BE  
                               l3906 16F6                                 l3850 120E  
                               l3834 10C6                                 l3842 116A  
                               l3826 1022                                 l3818 0F5A  
                               l4378 233C                                 l4386 2384  
                               l4298 2052                                 l4546 4578  
                               l4538 454E                                 l4490 44DA  
                               l4482 44D2                                 l3932 40A6  
                               l3924 4064                                 l3780 4642  
                               l3772 4624                                 l3764 45F2  
                               l3756 45C8                                 l3748 45AA  
                               l4396 28EA                                 l3596 446C  
                               l3588 442E                                 l2980 24D8  
                               l2972 24A8                                 l2964 2488  
                               l2956 245E                                 l2948 242E  
                               l3692 1BE0                                 l3684 1ADA  
                               l3676 1A0A                                 l3668 193A  
                               l3916 17F0                                 l3908 1728  
                               l3860 1308                                 l3852 1240  
                               l3844 119C                                 l3836 10F8  
                               l3828 1030                                 l4388 2398  
                               l4492 44DC                                 l4484 44D4  
                               l3950 412E                                 l3942 40D8  
                               l3934 40AA                                 l3926 4072  
                               l3782 464A                                 l3774 4626  
                               l3766 4600                                 l3758 45D0  
                               l4398 2906                                 l3598 44BC  
                               l2990 2514                                 l2982 24E8  
                               l2974 24B6                                 l2966 248E  
                               l2958 246E                                 l3694 1C14  
                               l3686 1B40                                 l3678 1A3C  
                               l3918 1822                                 l3870 13DE  
                               l3862 133A                                 l3854 1272  
                               l3846 11CE                                 l3838 112A  
                               l3790 4AE8                                 l4494 44E0  
                               l4486 44D6                                 l4478 44C6  
                               l3960 4180                                 l3944 40F0  
                               l3952 4130                                 l3936 40C2  
                               l3928 408A                                 l3776 462C  
                               l3768 4606                                 l2992 2522  
                               l2984 24EA                                 l2976 24B8  
                               l2968 24A0                                 l3696 1C4C  
                               l3688 1B56                                 l3880 14B4  
                               l3872 1410                                 l3856 12A4  
                               l3864 1348                                 l3848 1200  
                               l3792 4AF8                                 l4496 44E2  
                               l4488 44D8                                 l3962 4198  
                               l3954 413E                                 l3946 4114  
                               l3938 40C4                                 l3778 4632  
                               l3970 46A0                                 l2994 2526  
                               l2978 24C8                                 l2986 24F2  
                               l3698 1C7E                                 l3890 15AE  
                               l3882 14E6                                 l3874 1442  
                               l3866 137A                                 l3858 12D6  
                               l3794 4B02                                 l3786 4ADA  
                               l4498 44E4                                 l3956 4156  
                               l3948 4116                                 l3980 3A8C  
                               l3972 46B8                                 l3964 4662  
                               l2996 252A                                 l2988 2502  
                               l3884 1518                                 l3892 15BC  
                               l3876 1474                                 l3868 13AC  
                               l3796 4B0C                                 l3788 4ADE  
                               l3958 417E                                 l3990 3AD6  
                               l3982 3AA6                                 l3974 46CC  
                               l3966 467A                                 l2998 252E  
                               l3894 15EE                                 l3886 154A  
                               l3878 1482                                 l3798 4B0E  
                               l3992 3AFE                                 l3984 3AAE  
                               l3976 46E4                                 l3968 469E  
                               l3896 1620                                 l3888 157C  
                               l3994 3B06                                 l3986 3AAE  
                               l3978 46FE                                 l3898 1652  
                               l3996 3B0E                                 l3988 3ACA  
                               l3998 3B1A                                 u3000 31A8  
                               u3001 31A4                                 u3010 31BA  
                               u3011 31B6                                 u3100 3372  
                               u3020 31CA                                 u3101 336E  
                               u3021 31C6                                 u3110 3396  
                               u3030 320E                                 u3111 3392  
                               u3031 320A                                 u3200 34B6  
                               u3120 33AC                                 u3040 3220  
                               u4000 1062                         _BAUD4CONbits 0EE9  
                               u3201 34B2                                 u3121 33A8  
                               u3041 321C                                 u4001 105E  
                               u3210 34E6                                 u3130 33CA  
                               u3050 3230                                 u4010 1094  
                               u3211 34E2                                 u3131 33C6  
                               u3051 322C                                 u4011 1090  
                               u3220 3514                                 u3140 33EA  
                               u3060 3270                                 u3300 2E48  
                               u4100 1272                                 u4020 10C6  
                               u3221 3510                                 u3141 33E6  
                               u3061 326C                                 u3301 2E44  
                               u4101 126E                                 u4021 10C2  
                               u3150 33FC                                 u3070 32B0  
                               u3310 2FC2                                 u3230 2D7E  
                               u4110 12A4                                 u4030 10F8  
                               u3151 33F8                                 u3071 32AC  
                               u3231 2D7A                                 u4111 12A0  
                               u4031 10F4                                 u5000 2CC6  
                               u3160 342A                                 u3080 3326  
                               u3400 3136                                 u3320 301C  
                               u3240 2D90                                 u2600 244E  
                               u4200 1474                                 u4120 12D6  
                               u4040 112A                                 u5001 2CC2  
                               u3161 3426                                 u3081 3322  
                               u3401 3132                                 u3321 3018  
                               u3241 2D8C                                 u2601 244A  
                               u4201 1470                                 u4121 12D2  
                               u4041 1126                                 u5010 2D26  
                               u3170 3440                                 u3090 3348  
                               u3410 3170                                 u3330 303C  
                               u3250 2DA0                                 u2610 245E  
                               u4210 14B4                                 u4130 1308  
                               u4050 115C                                 _T2PR 0FBC  
                               u5011 2D22                                 u3171 343C  
                               u3091 3344                                 u3411 316C  
                               u3331 3038                                 u3315 2FB8  
                               u3251 2D9C                                 u2611 245A  
                               u4211 14B0                                 u4131 1304  
                               u4051 1158                                 u5020 2D62  
                               u3180 3454                                 u3420 4730  
                               u3340 304E                                 u3260 2DE0  
                               u2700 25AA                                 u2620 24A0  
                               u3500 4390                                 u4300 1684  
                               u4220 14E6                                 u4140 133A  
                               u4060 119C                                 u5021 2D5E  
                               u3181 3450                                 u3421 472C  
                               u3341 304A                                 u3261 2DDC  
                               u2621 249C                                 u3501 438C  
                               u4301 1680                                 u4221 14E2  
                               u4141 1336                                 u4061 1198  
                               u3190 346E                                 u3430 476E  
                               u3350 307C                                 u3270 2DF2  
                               u2710 25D2                                 u2630 24B6  
                               u3510 43A0                                 u4310 16B6  
                               u4230 1518                                 u4150 137A  
                               u4070 11CE                                 u3191 346A  
                               u3431 476A                                 u3351 3078  
                               u3271 2DEE                                 u2711 25CE  
                               u2631 24B2                                 u3511 439C  
                               u4311 16B2                                 u4231 1514  
                               u4151 1376                                 u4071 11CA  
                               u4400 4072                                 u3440 47A2  
                               u3360 3092                                 u3280 2E02  
                               u2800 270A                                 u2720 25F0  
                               u2640 24C8                                 u3600 38E8  
                               u3520 3768                                 u4320 16E8  
                               u4240 154A                                 u4160 13AC  
                               u4080 1200                                 u4401 406E  
                               u3441 479E                                 u3361 308E  
                               u3281 2DFE                                 u2801 2706  
                               u2721 25EC                                 u2641 24C4  
                               u3601 38E4                                 u3521 3764  
                               u4321 16E4                                 u4241 1546  
                               u4161 13A8                                 u4081 11FC  
                               u4410 4098                                 u3370 30A6  
                               u3290 2E38                                 u2810 2740  
                               u2730 2610                                 u2650 24D8  
                               u3450 42D2                                 u3610 38F6  
                               u3530 3776                                 u4330 1728  
                               u4250 157C                                 u4170 13DE  
                               u4090 1240                                 u4411 4094  
                               u3371 30A2                                 u3291 2E34  
                               u2811 273C                                 u2731 260C  
                               u2651 24D4                                 u3451 42CE  
                               u3611 38F2                                 u3531 3772  
                               u4331 1724                                 u4251 1578  
                               u4171 13DA                                 u4091 123C  
                               u4420 40A6                                 u3700 485A  
                               u4500 3BB6                                 u3380 30C0  
                               u2900 280A                                 u2820 2750  
                               u2740 261E                                 u2660 2514  
                               u3460 4306                                 u3540 37D2  
                               u3620 4AC2                                 u4340 175A  
                               u4260 15AE                                 u4180 1410  
                               u4421 40A2                                 u3701 4856  
                               u4501 3BB2                                 u3381 30BC  
                               u2901 2806                                 u2821 274C  
                               u2741 261A                                 u2661 2510  
                               u3541 37CE                                 u3621 4ABA  
                               u4341 1756                                 u4261 15AA  
                               u4181 140C                                 u4430 40D8  
                               u3710 4878                                 u4510 3BF0  
                               u3390 3108                                 u2910 2824  
                               u2830 277C                                 u2750 262E  
                               u2670 2522                                 u2590 243C  
                               u3470 4334                                 u3550 3828  
                               u4350 178C                                 u4270 15EE  
                               u4190 1442                                 u4431 40D4  
                               u3711 4874                                 u4511 3BEC  
                               u5207 46AA                                 u3391 3104  
                               u2911 2820                                 u2831 2778  
                               u2751 262A                                 u2671 251E  
                               u2591 2438                                 u3471 4330  
                               u3551 3824                                 u4351 1788  
                               u4271 15EA                                 u4191 143E  
                               u4440 413E                                 u3720 4894  
                               u4600 3A00                                 u4520 3C06  
                               u2920 285E                                 u2840 278C  
                               u2760 2660                                 u2680 2590  
                               u3480 4348                                 u3560 3872  
                               u3640 41D6                                 u3800 1B88  
                               u4360 17BE                                 u4280 1620  
                               u4441 413A                                 u3721 4890  
                               u4601 39FC                                 u4521 3C02  
                               u5217 46D6                                 u2921 285A  
                               u2841 2788                                 u2761 265C  
                               u2681 258C                                 u3481 4344  
                               u3465 42FC                                 u3561 386E  
                               u3641 41D2                                 u3801 1B84  
                               u4361 17BA                                 u4281 161C  
                               u4610 3A1A                                 u4530 3CBA  
                               u4450 4662                                 u3650 43F0  
                               u2930 2870                                 u2850 27A8  
                               u2770 266E                                 u2690 25A8  
                               u3490 4370                                 u3570 3890  
                               u3810 1C7E                                 u3730 1908  
                               u4370 17F0                                 u4290 1652  
                               u5307 40E2                                 u4611 3A16  
                               u4531 3CB6                                 u5227 46F0  
                               u4451 465E                                 u3651 43EC  
                               u2931 286C                                 u2851 27A4  
                               u2771 266A                                 u2691 25A2  
                               u3491 436C                                 u3571 388C  
                               u3811 1C7A                                 u3731 1904  
                               u4371 17EC                                 u4291 164E  
                               u5147 48C0                                 u3900 45E2  
                               u4700 3F00                                 u4620 3A38  
                               u4540 3CFC                                 u4460 46CC  
                               u3660 442E                                 u2940 2880  
                               u2860 27B8                                 u2780 268C  
                               u3580 38A0                                 u3820 1D64  
                               u3740 193A                                 u4380 1822  
                               u5317 4120                                 u3901 45DE  
                               u4701 3EFC                                 u4621 3A34  
                               u4541 3CF8                                 u5237 3B4E  
                               u4461 46C8                                 u3661 442A  
                               u2941 287C                                 u2861 27B4  
                               u2781 2688                                 u3581 389C  
                               u3821 1D60                                 u3741 1936  
                               u4381 181E                                 u5157 48DA  
                               u4390 4064                                 u3910 4600  
                               u4630 3A72                                 u4550 3D16  
                               u4470 3B3C                                 u3670 444C  
                               u2950 28A0                                 u2870 27CA  
                               u2790 26C4                                 u3590 38AE  
                               u3830 1E28                                 u3750 19A4  
                               u3638 4AC4                                 u4710 48F6  
                               u5327 4148                                 u4391 4060  
                               u3911 45FC                                 u4631 3A6E  
                               u4551 3D12                                 u5247 3CCC  
                               u4471 3B38                                 u3671 4448  
                               u2951 289C                                 u2871 27C6  
                               u2791 26C0                                 u3591 38AA  
                               u3831 1E24                                 u3751 19A0  
                               u5167 4900                                 u4711 48F2  
                               u3920 461C                                 u4640 3A88  
                               u4560 3D34                                 u4480 3B7E  
                               u4800 374A                                 u4720 353E  
                               u3680 446C                                 u2960 28B2  
                               u2880 27E0                                 u3840 1EA6  
                               u3760 1A0A                                 u5337 418A  
                               u3921 4618                                 u4641 3A84  
                               u5257 39D0                                 u4561 3D30  
                               u4481 3B7A                                 u4801 3746  
                               u4721 353A                                 u3681 4468  
                               u2961 28AE                                 u2881 27DC  
                               u3841 1EA2                                 u3761 1A06  
                               u5177 1F6E                                 u3930 4642  
                               u3850 4B7C                                 u4650 3E36  
                               u4570 3D6E                                 u4490 3B98  
                               u4730 357E                                 u3690 44BC  
                               u2970 28CE                                 u2890 27F6  
                               u3770 1A3C                                 u4810 1FC0  
                               u3931 463E                                 u3851 4B78  
                               u5267 3E48                                 u4651 3E32  
                               u4571 3D6A                                 u4491 3B94  
                               u4731 357A                                 u3691 44B8  
                               u2971 28CA                                 u2891 27F2  
                               u3771 1A38                                 u5187 4AEE  
                               u4811 1FBC                                 u3860 3F1C  
                               u4660 3E78                                 u4580 3D84  
                               u4740 35C0                                 u3780 1AA6  
                               u2980 4BB8                                 u3940 0F28  
                               u4900 233C                                 u4820 206E  
                               u5277 4B5A                                 u3861 3F18  
                               u4661 3E74                                 u4581 3D80  
                               u5197 466C                                 u4741 35BC  
                               u3781 1AA2                                 u2981 4BB4  
                               u3941 0F24                                 u4901 2338  
                               u4821 206A                                 u3870 3FD8  
                               u4670 3E92                                 u4590 39BE  
                               u4750 3602                                 u3790 1B40  
                               u2990 4BCE                                 u3950 0F5A  
                               u4910 2398                                 u4830 209C  
                               u5287 407C                                 u3871 3FD4  
                               u4671 3E8E                                 u4591 39BA  
                               u4751 35FE                                 u3791 1B3C  
                               u2991 4BCA                                 u3951 0F56  
                               u4911 2394                                 u4831 2098  
                               u3880 45A2                                 u4680 3EB0  
                               u4760 3644                                 u4920 2906  
                               u3960 0F8C                                 u4840 20C6  
                               u5297 40B4                                 u3881 459E  
                               u4681 3EAC                                 u4761 3640  
                               u4921 2902                                 u3961 0F88  
                               u4841 20C2                                 u3890 45BC  
                               u4690 3EEA                                 u4770 3686  
                               u4930 296A                                 u3970 0FBE  
                               u4850 2122                                 u3891 45B8  
                               u4691 3EE6                                 u4771 3682  
                               u4931 2966                                 u3971 0FBA  
                               u4851 211E                                 u4780 36C8  
                               u4940 29A2                                 u3980 0FF0  
                               u4860 217E                                 u4781 36C4  
                               u4941 299E                                 u3981 0FEC  
                               u4861 217A                                 u4790 370A  
                               u4950 29F4                                 u3990 1022  
                               u4870 21F4                                 u4791 3706  
                               u4951 29F0                                 u3991 101E  
                               u4871 21F0                                 u4960 2A46  
                               u4880 226A                                 u4961 2A42  
                               u4881 2266                                 u4970 2A98  
                               u4890 22E0                                 u4971 2A94  
                               u4891 22DC                                 u4980 2B7A  
                               u4981 2B76                                 u4990 2C5C  
                               u4991 2C58                                 _main 44C6  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               prodh 0FF4                                 prodl 0FF3  
                               start 0000                      ___fldiv@new_exp 0033  
             __end_of_color_read_Red 4962                         ___param_bank 0000  
            __end_of_color_cardCheck 183A              _forward_reset_threshold 00FB  
                      ___fltol@sign1 0009                      __end_of___fladd 28E2  
                              ?_main 0001                      __end_of___fldiv 3528  
                    __end_of___awdiv 4654                      __end_of___flmul 318E  
                    __end_of___flsub 4A98                      __end_of___fltol 43C2  
                    ___awdiv@divisor 0003                          ?_RGB_to_HSV 006A  
                    __end_of___lwdiv 48B4                      ___awdiv@counter 0005  
                       ?_maze_search 00D3                         ?_maze_return 0021  
         __end_of_I2C_2_Master_Start 4C36           __end_of_I2C_2_Master_Write 4C22  
                    __end_of_forward 3A8A                                tablat 0FF5  
                              status 0FD8              __end_of_color_read_Blue 4A52  
              _I2C_2_Master_RepStart 4C36                   _switch_calibration 4654  
                    ?_color_read_Red 0005                      __initialization 4B1A  
                       __end_of_main 4590                  ?_switch_calibration 0001  
                             ??_main 0060                        _Forward_Count 00DA  
                      __activetblptr 0000                         ?_setMotorPWM 000E  
                             _CCPR1H 0FAA                               _CCPR2H 0FA6  
                             _CCPR3H 0F25                               _CCPR4H 0F21  
                   ___awdiv@dividend 0001                 ??_switch_calibration 0002  
                             _RC0PPS 0E62                               _RC4REG 0EE3  
                             _RE2PPS 0E74                               _RD5PPS 0E6F  
                             _RC7PPS 0E69                               _RE4PPS 0E76  
                             _RD6PPS 0E70                               _RG6PPS 0E88  
                   __end_of_backward 3F02             __end_of_color_click_init 4B1A  
                             _RX4PPS 0E15                     forward@max_power 001D  
                             _TX4REG 0EE4                     __end_of___xxtofl 390A  
                       _CCPTMRS0bits 0FAD                          _Color_Value 00D8  
                             ___flge 43C2                               ___fleq 4702  
                   ?_color_cardCheck 005C                     __end_of_leftTURN 3D86  
                          ??___fladd 0009                               ___wmul 4BD0  
                          ??___fldiv 002A                            ??___awdiv 0005  
                          ??___flmul 0043                            ??___flsub 0022  
                          ??___fltol 0005                            ??___lwdiv 000B  
      delay_ms_function@milliseconds 0001                               _length 00FC  
                             clear_0 4B38                               clear_1 4B44  
                   ___awdiv@quotient 0007                               _motorL 00F2  
                             _motorR 00E9                               isa$std 0001  
                          ??_forward 0015        rightTURN@rotation_calibration 0018  
                       __mediumconst 0000                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                    _Operation_Count 00DB                    ??_initDCmotorsPWM 0003  
                         ___flge@ff1 0001                           ___flge@ff2 0005  
                       ___xxtofl@arg 0016                         ___xxtofl@exp 0015  
                       ___xxtofl@val 000C                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0060  
            __end_of__initialization 4B4A             __end_of_color_read_Clear 4A02  
           __end_of_color_read_Green 49B2               ?_I2C_2_Master_RepStart 0001  
                      ___rparam_used 0001                           ___fltol@f1 0001  
                   ?_color_read_Blue 0005                       __pcstackCOMRAM 0001  
                       __pidataBANK0 4C40                    forward@delay_time 001F  
                     _RGB_to_HSV$320 0091                       _RGB_to_HSV$321 0095  
                     _RGB_to_HSV$317 0085                       _RGB_to_HSV$318 0089  
                 RGB_to_HSV@deltaRGB 00A1                calibration_routine@mL 0022  
              calibration_routine@mR 0023                           __pbssBANK0 00D8  
                         __pbssBANK1 0100                    _color_writetoaddr 4BF6  
                       _T2CLKCONbits 0FBF                   _adjust_calibration 4056  
                            ?___flge 0001                              ?___fleq 0001  
                 ?_color_writetoaddr 0003                              ?___wmul 0001  
                 backward@delay_time 001F                  ?_adjust_calibration 0001  
                ??_color_writetoaddr 0004                            ?_backward 0013  
                       ??_RGB_to_HSV 005C                    _delay_ms_function 4B50  
                         backward@mL 0013                           backward@mR 0014  
                          ?___xxtofl 000C                   ?_delay_ms_function 0001  
                            _SP4BRGH 0EE6                              _SP4BRGL 0EE5  
                            _SSP2ADD 0ED6                              _SSP2BUF 0ED5  
                        rightTURN@mL 0013                          rightTURN@mR 0014  
                          ?_leftTURN 0013                  ??_delay_ms_function 0003  
               ??_adjust_calibration 0002               color_writetoaddr@value 0003  
                   ??_color_read_Red 0007            __end_of_color_writetoaddr 4C16  
                        RGB_to_HSV@B 0072                          RGB_to_HSV@C 0076  
                        RGB_to_HSV@G 006E                          RGB_to_HSV@H 007A  
                        RGB_to_HSV@R 006A                          RGB_to_HSV@S 007B  
                        RGB_to_HSV@V 007C                          RGB_to_HSV@b 00B1  
                        RGB_to_HSV@g 00AD                   _I2C_2_Master_Start 4C2C  
                        RGB_to_HSV@r 00A9                   _I2C_2_Master_Write 4C16  
                            __Hparam 0000                   __end_of_RGB_to_HSV 1F60  
                            __Lparam 0000                    color_read_Red@tmp 000A  
                            ___fladd 2422                              ___fldiv 318E  
                            ___awdiv 4590                              ___flmul 2D64  
                            ___flsub 4A52                              ___fltol 42BC  
                ?_I2C_2_Master_Start 0001                              ___lwdiv 4840  
                ?_I2C_2_Master_Write 0001                         __psmallconst 0E00  
          __end_of_delay_ms_function 4B7E                              __pcinit 4B1A  
                            __ramtop 0E00                              __ptext0 44C6  
                            __ptext1 48B4                              __ptext2 1F60  
                            __ptext3 4ADA                              __ptext4 4BF6  
                            __ptext5 4B7E                              __ptext6 0E02  
                            __ptext7 4912                              __ptext8 4962  
                            __ptext9 49B2                           ??_backward 0015  
                          _T2CONbits 0FBD                              _forward 390A  
                         ??___xxtofl 0010                            _T2HLTbits 0FBE  
                      _RxBufWriteCnt 00DF                 ??_I2C_2_Master_Start 0002  
               ??_I2C_2_Master_Write 0002                         maze_search@c 00D3  
                       maze_search@i 00D6                 end_of_initialization 4B4A  
                         ??_leftTURN 0015                    __end_of_rightTURN 3C08  
            _pause_until_RF2_pressed 48B4                   leftTURN@delay_time 001F  
                  ?_color_click_init 0001                         maze_return@c 0021  
                       maze_return@i 002C                         maze_return@j 0027  
                 ??_color_click_init 0005             maze_return@distance_back 0029  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc2 0FDE                      _initDCmotorsPWM 47AC  
                          _PORTFbits 0F8E                   setMotorPWM@negDuty 0012  
                        ___fladd@grs 0010                        ___xxtofl@sign 0014  
                          _TRISAbits 0F81                   setMotorPWM@posDuty 0011  
                          _TRISCbits 0F83                            _TRISDbits 0F84  
                          _TRISEbits 0F85                            _TRISFbits 0F86  
                          _TRISGbits 0F87                            _TRISHbits 0F88  
adjust_calibration@calibration_label 0001  switch_calibration@calibration_index 0001  
                        ___fldiv@grs 0035                          ___fldiv@rem 002E  
           color_writetoaddr@address 0004              ??_I2C_2_Master_RepStart 0002  
                        ___flmul@grs 0048                          _CCP1CONbits 0FAB  
                _calibration_routine 3528                    ?_color_read_Clear 0005  
                       _EUSART4RXbuf 016E                         _EUSART4TXbuf 0100  
                        _CCP2CONbits 0FA7                    ?_color_read_Green 0005  
                        _CCP3CONbits 0F26          forward@Distance_Calibration 0018  
                        _CCP4CONbits 0F22                   ??_color_read_Clear 0007  
                 ??_color_read_Green 0007                   rightTURN@max_power 001D  
                  maze_return@i_1875 002A                           leftTURN@mL 0013  
                         leftTURN@mR 0014           __end_of_custom_floatmodulo 42BC  
                     __end_of___flge 44C6                       __end_of___fleq 47AC  
                     __end_of___wmul 4BF6            color_cardCheck@card_color 00C5  
               ?_calibration_routine 0021                     RGB_to_HSV@H_temp 009D  
                color_read_Clear@tmp 000A                  start_initialization 4B1A  
                      _TxBufWriteCnt 00DD         leftTURN@rotation_calibration 0018  
          ??_pause_until_RF2_pressed 0001                     RGB_to_HSV@maxRGB 00A5  
                   RGB_to_HSV@minRGB 008D                      _RGB_to_HSV$2715 007D  
                    _RGB_to_HSV$2716 0081                      _RGB_to_HSV$2717 0099  
                color_read_Green@tmp 000A              __end_of_initDCmotorsPWM 4840  
                           ??___flge 0009                             ??___fleq 0009  
                           ??___wmul 0005                  custom_floatmodulo@x 0054  
                custom_floatmodulo@y 0058                          __pdataBANK0 00FB  
                        _calibration 00E0                ??_calibration_routine 0024  
                          ___fladd@a 0005                            ___fladd@b 0001  
                      ??_maze_search 005E         backward@Distance_Calibration 0018  
                          ___fldiv@a 0026                            ___fldiv@b 0022  
                      ??_maze_return 0024                            ___flmul@a 003F  
                          ___flmul@b 003B                            ___flsub@a 001E  
                          ___flsub@b 001A                        __pcstackBANK0 0060  
               calibration_routine@c 0021            custom_floatmodulo@intPart 0068  
                   ___lwdiv@dividend 0007      __end_of_pause_until_RF2_pressed 4912  
                           ?___fladd 0001                             ?___fldiv 0022  
                           ?___awdiv 0001                             ?___flmul 003B  
                           ?___flsub 001A                             ?___fltol 0001  
                           ?___lwdiv 0007                            backward@i 0019  
                          backward@j 001B                           rightTURN@i 0019  
                         rightTURN@j 001B                 I2C_2_Master_Read@ack 0003  
               I2C_2_Master_Read@tmp 0004                          __smallconst 0E00  
                           ?_forward 0013                    _I2C_2_Master_Idle 4BA8  
                  _I2C_2_Master_Init 4B7E                    _I2C_2_Master_Read 4A98  
                  _I2C_2_Master_Stop 4C22                         _RxBufReadCnt 00DE  
                 ?_I2C_2_Master_Idle 0001                   ?_I2C_2_Master_Init 0001  
                 ?_I2C_2_Master_Read 0001                        ??_setMotorPWM 000F  
                 ?_I2C_2_Master_Stop 0001                     ___lwdiv@quotient 000B  
           initDCmotorsPWM@PWMperiod 0001                    ??_color_cardCheck 005E  
                __end_of_maze_search 2422                    backward@max_power 001D  
                __end_of_maze_return 2D64                  ??_I2C_2_Master_Idle 0001  
                ??_I2C_2_Master_Init 0001                  ??_I2C_2_Master_Read 0002  
                     ___wmul@product 0005                             _LATAbits 0F79  
                ??_I2C_2_Master_Stop 0002                             _LATCbits 0F7B  
                           _LATDbits 0F7C                             _LATEbits 0F7D  
                           _LATFbits 0F7E                             _LATGbits 0F7F  
                           _LATHbits 0F80                            _rightTURN 3A8A  
                           _PIE4bits 0E2D                             _PIR4bits 0E37  
                   ?_initDCmotorsPWM 0001                             _SSP2CON2 0EDA  
                           _SSP2STAT 0ED8            __end_of_I2C_2_Master_Idle 4BD0  
          __end_of_I2C_2_Master_Init 4BA8            __end_of_I2C_2_Master_Read 4ADA  
                  ___wmul@multiplier 0001            __end_of_I2C_2_Master_Stop 4C2C  
                       setMotorPWM@m 000E          I2C_2_Master_Write@data_byte 0002  
                  ??_color_read_Blue 0007                    leftTURN@max_power 001D  
                       _TxBufReadCnt 00DC                            leftTURN@i 0019  
                          leftTURN@j 001B        __end_of_I2C_2_Master_RepStart 4C40  
                 color_read_Blue@tmp 000A                  __end_of_setMotorPWM 4056  
                         ?_rightTURN 0013                             __Hrparam 0000  
                           __Lrparam 0000                            forward@mL 0013  
                          forward@mR 0014                             _backward 3D86  
                         _ANSELDbits 0EA7                           _ANSELFbits 0EB4  
                        _maze_search 1F60                             ___xxtofl 3756  
                        _maze_return 28E2                   _custom_floatmodulo 41A4  
                    ___lwdiv@divisor 0009           __end_of_switch_calibration 4702  
                    ___lwdiv@counter 000D                             __ptext10 4A02  
                           __ptext11 4C16                             __ptext20 42BC  
                           __ptext12 4C22                             __ptext21 4A52  
                           __ptext13 4C2C                             __ptext30 4654  
                           __ptext22 2422                             __ptext14 4C36  
                           __ptext31 3A8A                             __ptext23 2D64  
                           __ptext15 4A98                             __ptext40 4056  
                           __ptext32 3C08                             __ptext24 4702  
                           __ptext16 4BA8                             __ptext33 390A  
                           __ptext25 318E                             __ptext17 183A  
                           __ptext34 3D86                             __ptext26 43C2  
                           __ptext18 41A4                             __ptext35 3F02  
                           __ptext27 28E2                             __ptext19 3756  
                           __ptext36 4BD0                             __ptext28 47AC  
                           __ptext37 4840                             __ptext29 3528  
                           __ptext38 4B50                             __ptext39 4590  
        custom_floatmodulo@remainder 0064                         _SSP2CON1bits 0ED9  
                       _SSP2CON2bits 0EDA                             _leftTURN 3C08  
                ?_custom_floatmodulo 0054                             isa$xinst 0000  
                         _RC4STAbits 0EE7                 ??_custom_floatmodulo 005C  
                      maze_search@mL 00D4                        maze_search@mR 00D5  
                           forward@i 0019                             forward@j 001B  
                        _setMotorPWM 3F02                        maze_return@mL 0022  
                      maze_return@mR 0023                          ??_rightTURN 0015  
        __end_of_calibration_routine 3756           custom_floatmodulo@quotient 0060  
                   _color_click_init 4ADA                      _color_cardCheck 0E02  
                         _RGB_to_HSV 183A                    _Operation_History 013C  
                         _SSP2DATPPS 0E1D                           _SSP2CLKPPS 0E1C  
           ?_pause_until_RF2_pressed 0001                     color_cardCheck@H 00C7  
                   color_cardCheck@S 00CB                     color_cardCheck@V 00CF  
                   color_cardCheck@b 00BD                     color_cardCheck@c 00C1  
                   color_cardCheck@g 00B9                     color_cardCheck@r 00B5  
                      ___fladd@signs 000D                           _TX4STAbits 0EE8  
                rightTURN@delay_time 001F                         ___fladd@aexp 000E  
                       ___fladd@bexp 000F  
