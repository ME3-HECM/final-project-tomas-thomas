

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 18 02:23:52 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataBANK0
    94   004B6E                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for _forward_reset_threshold
    98   004B6E  0A                 	db	10
    99                           
   100                           ;initializer for _length
   101   004B6F  32                 	db	50
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _LATEbits	set	3965
   106   000000                     _TRISEbits	set	3973
   107   000000                     _LATHbits	set	3968
   108   000000                     _SSP2CON2bits	set	3802
   109   000000                     _RX4PPS	set	3605
   110   000000                     _SSP2CLKPPS	set	3612
   111   000000                     _SSP2DATPPS	set	3613
   112   000000                     _ANSELDbits	set	3751
   113   000000                     _SSP2ADD	set	3798
   114   000000                     _SSP2CON1bits	set	3801
   115   000000                     _LATAbits	set	3961
   116   000000                     _LATGbits	set	3967
   117   000000                     _TRISAbits	set	3969
   118   000000                     _TRISGbits	set	3975
   119   000000                     _TRISHbits	set	3976
   120   000000                     _PORTFbits	set	3982
   121   000000                     _TRISCbits	set	3971
   122   000000                     _TRISDbits	set	3972
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATCbits	set	3963
   125   000000                     _LATDbits	set	3964
   126   000000                     _LATFbits	set	3966
   127   000000                     _RC4REG	set	3811
   128   000000                     _SP4BRGL	set	3813
   129   000000                     _TX4STAbits	set	3816
   130   000000                     _BAUD4CONbits	set	3817
   131   000000                     _SSP2CON2	set	3802
   132   000000                     _CCPR4H	set	3873
   133   000000                     _CCPR3H	set	3877
   134   000000                     _SSP2STAT	set	3800
   135   000000                     _ANSELFbits	set	3764
   136   000000                     _SSP2BUF	set	3797
   137   000000                     _PIE4bits	set	3629
   138   000000                     _PIR4bits	set	3639
   139   000000                     _RC0PPS	set	3682
   140   000000                     _RC7PPS	set	3689
   141   000000                     _RD5PPS	set	3695
   142   000000                     _RE2PPS	set	3700
   143   000000                     _RD6PPS	set	3696
   144   000000                     _T2PR	set	4028
   145   000000                     _T2CONbits	set	4029
   146   000000                     _CCPR2H	set	4006
   147   000000                     _CCPR1H	set	4010
   148   000000                     _RE4PPS	set	3702
   149   000000                     _RG6PPS	set	3720
   150   000000                     _T2CLKCONbits	set	4031
   151   000000                     _T2HLTbits	set	4030
   152   000000                     _CCP1CONbits	set	4011
   153   000000                     _CCPTMRS0bits	set	4013
   154   000000                     _CCP2CONbits	set	4007
   155   000000                     _CCP3CONbits	set	3878
   156   000000                     _CCP4CONbits	set	3874
   157                           
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161   004A48                     __pcinit:
   162                           	callstack 0
   163   004A48                     start_initialization:
   164                           	callstack 0
   165   004A48                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Initialize objects allocated to BANK0 (2 bytes)
   169                           ; load TBLPTR registers with __pidataBANK0
   170   004A48  0E6E               	movlw	low __pidataBANK0
   171   004A4A  6EF6               	movwf	tblptrl,c
   172   004A4C  0E4B               	movlw	high __pidataBANK0
   173   004A4E  6EF7               	movwf	tblptrh,c
   174   004A50  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   175   004A52  6EF8               	movwf	tblptru,c
   176   004A54  0009               	tblrd		*+	;fetch initializer
   177   004A56  CFF5 F0FB          	movff	tablat,__pdataBANK0
   178   004A5A  0009               	tblrd		*+	;fetch initializer
   179   004A5C  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   180                           
   181                           ; Clear objects allocated to BANK1 (130 bytes)
   182   004A60  EE01  F000         	lfsr	0,__pbssBANK1
   183   004A64  0E82               	movlw	130
   184   004A66                     clear_0:
   185   004A66  6AEE               	clrf	postinc0,c
   186   004A68  06E8               	decf	wreg,f,c
   187   004A6A  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (35 bytes)
   190   004A6C  EE00  F0D8         	lfsr	0,__pbssBANK0
   191   004A70  0E23               	movlw	35
   192   004A72                     clear_1:
   193   004A72  6AEE               	clrf	postinc0,c
   194   004A74  06E8               	decf	wreg,f,c
   195   004A76  E1FD               	bnz	clear_1
   196   004A78                     end_of_initialization:
   197                           	callstack 0
   198   004A78                     __end_of__initialization:
   199                           	callstack 0
   200   004A78  0100               	movlb	0
   201   004A7A  EF2E  F022         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssBANK0
   204   0000D8                     __pbssBANK0:
   205                           	callstack 0
   206   0000D8                     _Color_Value:
   207                           	callstack 0
   208   0000D8                     	ds	2
   209   0000DA                     _Forward_Count:
   210                           	callstack 0
   211   0000DA                     	ds	1
   212   0000DB                     _Operation_Count:
   213                           	callstack 0
   214   0000DB                     	ds	1
   215   0000DC                     _TxBufReadCnt:
   216                           	callstack 0
   217   0000DC                     	ds	1
   218   0000DD                     _TxBufWriteCnt:
   219                           	callstack 0
   220   0000DD                     	ds	1
   221   0000DE                     _RxBufReadCnt:
   222                           	callstack 0
   223   0000DE                     	ds	1
   224   0000DF                     _RxBufWriteCnt:
   225                           	callstack 0
   226   0000DF                     	ds	1
   227   0000E0                     _calibration:
   228                           	callstack 0
   229   0000E0                     	ds	9
   230   0000E9                     _motorR:
   231                           	callstack 0
   232   0000E9                     	ds	9
   233   0000F2                     _motorL:
   234                           	callstack 0
   235   0000F2                     	ds	9
   236                           
   237                           	psect	dataBANK0
   238   0000FB                     __pdataBANK0:
   239                           	callstack 0
   240   0000FB                     _forward_reset_threshold:
   241                           	callstack 0
   242   0000FB                     	ds	1
   243   0000FC                     _length:
   244                           	callstack 0
   245   0000FC                     	ds	1
   246                           
   247                           	psect	bssBANK1
   248   000100                     __pbssBANK1:
   249                           	callstack 0
   250   000100                     _EUSART4TXbuf:
   251                           	callstack 0
   252   000100                     	ds	60
   253   00013C                     _Operation_History:
   254                           	callstack 0
   255   00013C                     	ds	50
   256   00016E                     _EUSART4RXbuf:
   257                           	callstack 0
   258   00016E                     	ds	20
   259                           
   260                           	psect	cstackBANK0
   261   000060                     __pcstackBANK0:
   262                           	callstack 0
   263   000060                     custom_floatmodulo@quotient:
   264                           	callstack 0
   265                           
   266                           ; 4 bytes @ 0x0
   267   000060                     	ds	4
   268   000064                     custom_floatmodulo@remainder:
   269                           	callstack 0
   270                           
   271                           ; 4 bytes @ 0x4
   272   000064                     	ds	4
   273   000068                     custom_floatmodulo@intPart:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x8
   277   000068                     	ds	2
   278   00006A                     RGB_to_HSV@R:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0xA
   282   00006A                     	ds	4
   283   00006E                     RGB_to_HSV@G:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0xE
   287   00006E                     	ds	4
   288   000072                     RGB_to_HSV@B:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x12
   292   000072                     	ds	4
   293   000076                     RGB_to_HSV@C:
   294                           	callstack 0
   295                           
   296                           ; 4 bytes @ 0x16
   297   000076                     	ds	4
   298   00007A                     RGB_to_HSV@H:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x1A
   302   00007A                     	ds	1
   303   00007B                     RGB_to_HSV@S:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x1B
   307   00007B                     	ds	1
   308   00007C                     RGB_to_HSV@V:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x1C
   312   00007C                     	ds	1
   313   00007D                     _RGB_to_HSV$2715:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x1D
   317   00007D                     	ds	4
   318   000081                     _RGB_to_HSV$2716:
   319                           	callstack 0
   320                           
   321                           ; 4 bytes @ 0x21
   322   000081                     	ds	4
   323   000085                     _RGB_to_HSV$317:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x25
   327   000085                     	ds	4
   328   000089                     _RGB_to_HSV$318:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x29
   332   000089                     	ds	4
   333   00008D                     RGB_to_HSV@minRGB:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x2D
   337   00008D                     	ds	4
   338   000091                     _RGB_to_HSV$320:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x31
   342   000091                     	ds	4
   343   000095                     _RGB_to_HSV$321:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x35
   347   000095                     	ds	4
   348   000099                     _RGB_to_HSV$2717:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x39
   352   000099                     	ds	4
   353   00009D                     RGB_to_HSV@H_temp:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x3D
   357   00009D                     	ds	4
   358   0000A1                     RGB_to_HSV@deltaRGB:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x41
   362   0000A1                     	ds	4
   363   0000A5                     RGB_to_HSV@maxRGB:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x45
   367   0000A5                     	ds	4
   368   0000A9                     RGB_to_HSV@r:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x49
   372   0000A9                     	ds	4
   373   0000AD                     RGB_to_HSV@g:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x4D
   377   0000AD                     	ds	4
   378   0000B1                     RGB_to_HSV@b:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x51
   382   0000B1                     	ds	4
   383   0000B5                     color_cardCheck@r:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x55
   387   0000B5                     	ds	4
   388   0000B9                     color_cardCheck@g:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x59
   392   0000B9                     	ds	4
   393   0000BD                     color_cardCheck@b:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x5D
   397   0000BD                     	ds	4
   398   0000C1                     color_cardCheck@c:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x61
   402   0000C1                     	ds	4
   403   0000C5                     color_cardCheck@card_color:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x65
   407   0000C5                     	ds	2
   408   0000C7                     color_cardCheck@H:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x67
   412   0000C7                     	ds	4
   413   0000CB                     color_cardCheck@S:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x6B
   417   0000CB                     	ds	4
   418   0000CF                     color_cardCheck@V:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x6F
   422   0000CF                     	ds	4
   423   0000D3                     maze_search@c:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x73
   427   0000D3                     	ds	1
   428   0000D4                     maze_search@mL:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x74
   432   0000D4                     	ds	1
   433   0000D5                     maze_search@mR:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x75
   437   0000D5                     	ds	1
   438   0000D6                     maze_search@i:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x76
   442   0000D6                     	ds	2
   443                           
   444                           	psect	cstackCOMRAM
   445   000001                     __pcstackCOMRAM:
   446                           	callstack 0
   447   000001                     ??_I2C_2_Master_Idle:
   448   000001                     ??_pause_until_RF2_pressed:
   449   000001                     ?___wmul:
   450                           	callstack 0
   451   000001                     ?___fladd:
   452                           	callstack 0
   453   000001                     ?___fltol:
   454                           	callstack 0
   455   000001                     adjust_calibration@calibration_label:
   456                           	callstack 0
   457   000001                     switch_calibration@calibration_index:
   458                           	callstack 0
   459   000001                     ___lbdiv@divisor:
   460                           	callstack 0
   461   000001                     initDCmotorsPWM@PWMperiod:
   462                           	callstack 0
   463   000001                     delay_ms_function@milliseconds:
   464                           	callstack 0
   465   000001                     ___wmul@multiplier:
   466                           	callstack 0
   467   000001                     ___fleq@ff1:
   468                           	callstack 0
   469   000001                     ___flge@ff1:
   470                           	callstack 0
   471   000001                     ___fltol@f1:
   472                           	callstack 0
   473   000001                     ___fladd@b:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x0
   477   000001                     	ds	1
   478   000002                     ??_I2C_2_Master_Read:
   479   000002                     ??_adjust_calibration:
   480   000002                     ??_switch_calibration:
   481   000002                     I2C_2_Master_Write@data_byte:
   482                           	callstack 0
   483   000002                     ___lbdiv@dividend:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1
   487   000002                     	ds	1
   488   000003                     ??_delay_ms_function:
   489   000003                     color_writetoaddr@value:
   490                           	callstack 0
   491   000003                     I2C_2_Master_Read@ack:
   492                           	callstack 0
   493   000003                     ___lbdiv@counter:
   494                           	callstack 0
   495   000003                     ___wmul@multiplicand:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x2
   499   000003                     	ds	1
   500   000004                     color_writetoaddr@address:
   501                           	callstack 0
   502   000004                     I2C_2_Master_Read@tmp:
   503                           	callstack 0
   504   000004                     ___lbdiv@quotient:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x3
   508   000004                     	ds	1
   509   000005                     ??_color_click_init:
   510   000005                     ??___fltol:
   511   000005                     ?_color_read_Red:
   512                           	callstack 0
   513   000005                     ?_color_read_Green:
   514                           	callstack 0
   515   000005                     ?_color_read_Blue:
   516                           	callstack 0
   517   000005                     ?_color_read_Clear:
   518                           	callstack 0
   519   000005                     ___wmul@product:
   520                           	callstack 0
   521   000005                     ___fleq@ff2:
   522                           	callstack 0
   523   000005                     ___flge@ff2:
   524                           	callstack 0
   525   000005                     ___fladd@a:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x4
   529   000005                     	ds	2
   530   000007                     ??_color_read_Red:
   531   000007                     ??_color_read_Green:
   532   000007                     ??_color_read_Blue:
   533   000007                     ??_color_read_Clear:
   534   000007                     ?___lwdiv:
   535                           	callstack 0
   536   000007                     ___lwdiv@dividend:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x6
   540   000007                     	ds	2
   541   000009                     ??___fladd:
   542   000009                     ??___fleq:
   543   000009                     ??___flge:
   544   000009                     ___fltol@sign1:
   545                           	callstack 0
   546   000009                     ___lwdiv@divisor:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x8
   550   000009                     	ds	1
   551   00000A                     ___fltol@exp1:
   552                           	callstack 0
   553   00000A                     color_read_Red@tmp:
   554                           	callstack 0
   555   00000A                     color_read_Green@tmp:
   556                           	callstack 0
   557   00000A                     color_read_Blue@tmp:
   558                           	callstack 0
   559   00000A                     color_read_Clear@tmp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x9
   563   00000A                     	ds	1
   564   00000B                     ___lwdiv@quotient:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0xA
   568   00000B                     	ds	1
   569   00000C                     ?___xxtofl:
   570                           	callstack 0
   571   00000C                     ___xxtofl@val:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0xB
   575   00000C                     	ds	1
   576   00000D                     ___lwdiv@counter:
   577                           	callstack 0
   578   00000D                     ___fladd@signs:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0xC
   582   00000D                     	ds	1
   583   00000E                     setMotorPWM@m:
   584                           	callstack 0
   585   00000E                     ___fladd@aexp:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0xD
   589   00000E                     	ds	1
   590   00000F                     ??_setMotorPWM:
   591   00000F                     ___fladd@bexp:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0xE
   595   00000F                     	ds	1
   596   000010                     ??___xxtofl:
   597   000010                     ___fladd@grs:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0xF
   601   000010                     	ds	1
   602   000011                     setMotorPWM@posDuty:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x10
   606   000011                     	ds	1
   607   000012                     setMotorPWM@negDuty:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x11
   611   000012                     	ds	1
   612   000013                     forward@mL:
   613                           	callstack 0
   614   000013                     backward@mL:
   615                           	callstack 0
   616   000013                     leftTURN@mL:
   617                           	callstack 0
   618   000013                     rightTURN@mL:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x12
   622   000013                     	ds	1
   623   000014                     forward@mR:
   624                           	callstack 0
   625   000014                     backward@mR:
   626                           	callstack 0
   627   000014                     leftTURN@mR:
   628                           	callstack 0
   629   000014                     rightTURN@mR:
   630                           	callstack 0
   631   000014                     ___xxtofl@sign:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x13
   635   000014                     	ds	1
   636   000015                     ??_rightTURN:
   637   000015                     ??_leftTURN:
   638   000015                     ??_forward:
   639   000015                     ??_backward:
   640   000015                     ___xxtofl@exp:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x14
   644   000015                     	ds	1
   645   000016                     forward@Distance_Calibration:
   646                           	callstack 0
   647   000016                     leftTURN@rotation_calibration:
   648                           	callstack 0
   649   000016                     rightTURN@rotation_calibration:
   650                           	callstack 0
   651   000016                     ___xxtofl@arg:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x15
   655   000016                     	ds	1
   656   000017                     forward@i:
   657                           	callstack 0
   658   000017                     leftTURN@i:
   659                           	callstack 0
   660   000017                     rightTURN@i:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x16
   664   000017                     	ds	1
   665   000018                     forward@j:
   666                           	callstack 0
   667   000018                     backward@Distance_Calibration:
   668                           	callstack 0
   669   000018                     leftTURN@j:
   670                           	callstack 0
   671   000018                     rightTURN@j:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x17
   675   000018                     	ds	1
   676   000019                     forward@max_power:
   677                           	callstack 0
   678   000019                     leftTURN@max_power:
   679                           	callstack 0
   680   000019                     rightTURN@max_power:
   681                           	callstack 0
   682   000019                     backward@i:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x18
   686   000019                     	ds	1
   687   00001A                     ?___flsub:
   688                           	callstack 0
   689   00001A                     forward@delay_time:
   690                           	callstack 0
   691   00001A                     leftTURN@delay_time:
   692                           	callstack 0
   693   00001A                     rightTURN@delay_time:
   694                           	callstack 0
   695   00001A                     ___flsub@b:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x19
   699   00001A                     	ds	1
   700   00001B                     backward@j:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x1A
   704   00001B                     	ds	2
   705   00001D                     backward@max_power:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x1C
   709   00001D                     	ds	1
   710   00001E                     backward@delay_time:
   711                           	callstack 0
   712   00001E                     ___flsub@a:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x1D
   716   00001E                     	ds	1
   717   00001F                     calibration_routine@c:
   718                           	callstack 0
   719   00001F                     maze_return@c:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x1E
   723   00001F                     	ds	1
   724   000020                     calibration_routine@mL:
   725                           	callstack 0
   726   000020                     maze_return@mL:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x1F
   730   000020                     	ds	1
   731   000021                     calibration_routine@mR:
   732                           	callstack 0
   733   000021                     maze_return@mR:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x20
   737   000021                     	ds	1
   738   000022                     ??_maze_return:
   739   000022                     ?___fldiv:
   740                           	callstack 0
   741   000022                     ___fldiv@b:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x21
   745   000022                     	ds	3
   746   000025                     maze_return@j:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x24
   750   000025                     	ds	1
   751   000026                     ___fldiv@a:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x25
   755   000026                     	ds	1
   756   000027                     maze_return@distance_back:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x26
   760   000027                     	ds	1
   761   000028                     maze_return@i_2039:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x27
   765   000028                     	ds	1
   766   000029                     maze_return@i:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x28
   770   000029                     	ds	1
   771   00002A                     ??___fldiv:
   772                           
   773                           ; 1 bytes @ 0x29
   774   00002A                     	ds	4
   775   00002E                     ___fldiv@rem:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x2D
   779   00002E                     	ds	4
   780   000032                     ___fldiv@sign:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x31
   784   000032                     	ds	1
   785   000033                     ___fldiv@new_exp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x32
   789   000033                     	ds	2
   790   000035                     ___fldiv@grs:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x34
   794   000035                     	ds	4
   795   000039                     ___fldiv@bexp:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x38
   799   000039                     	ds	1
   800   00003A                     ___fldiv@aexp:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x39
   804   00003A                     	ds	1
   805   00003B                     ?___flmul:
   806                           	callstack 0
   807   00003B                     ___flmul@b:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x3A
   811   00003B                     	ds	4
   812   00003F                     ___flmul@a:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x3E
   816   00003F                     	ds	4
   817   000043                     ??___flmul:
   818                           
   819                           ; 1 bytes @ 0x42
   820   000043                     	ds	4
   821   000047                     ___flmul@sign:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x46
   825   000047                     	ds	1
   826   000048                     ___flmul@grs:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x47
   830   000048                     	ds	4
   831   00004C                     ___flmul@aexp:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x4B
   835   00004C                     	ds	1
   836   00004D                     ___flmul@bexp:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x4C
   840   00004D                     	ds	1
   841   00004E                     ___flmul@prod:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x4D
   845   00004E                     	ds	4
   846   000052                     ___flmul@temp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x51
   850   000052                     	ds	2
   851   000054                     ?_custom_floatmodulo:
   852                           	callstack 0
   853   000054                     custom_floatmodulo@x:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x53
   857   000054                     	ds	4
   858   000058                     custom_floatmodulo@y:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x57
   862   000058                     	ds	4
   863   00005C                     ?_color_cardCheck:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x5B
   867   00005C                     	ds	2
   868   00005E                     ??_maze_search:
   869   00005E                     
   870                           ; 1 bytes @ 0x5D
   871   00005E                     	ds	2
   872   000060                     
   873                           ; 1 bytes @ 0x5F
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   876 ;;
   877 ;; *************** function _main *****************
   878 ;; Defined at:
   879 ;;		line 20 in file "main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  PWMperiod       2    0        unsigned int 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels required when called: 6
   899 ;; This function calls:
   900 ;;		_calibration_routine
   901 ;;		_initDCmotorsPWM
   902 ;;		_maze_return
   903 ;;		_maze_search
   904 ;;		_pause_until_RF2_pressed
   905 ;; This function is called by:
   906 ;;		Startup code after reset
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text0
   911   00445C                     __ptext0:
   912                           	callstack 0
   913   00445C                     _main:
   914                           	callstack 25
   915   00445C                     
   916                           ;main.c: 24:     initDCmotorsPWM(PWMperiod);
   917   00445C  0E00               	movlw	0
   918   00445E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   919   004460  0E63               	movlw	99
   920   004462  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   921   004464  EC3F  F023         	call	_initDCmotorsPWM	;wreg free
   922   004468                     
   923                           ;main.c: 28:     TRISDbits.TRISD7 = 0;
   924   004468  9E84               	bcf	132,7,c	;volatile
   925   00446A                     
   926                           ;main.c: 29:     LATDbits.LATD7 = 0;
   927   00446A  9E7C               	bcf	124,7,c	;volatile
   928   00446C                     
   929                           ;main.c: 31:     TRISHbits.TRISH3 = 0;
   930   00446C  9688               	bcf	136,3,c	;volatile
   931   00446E                     
   932                           ;main.c: 32:     LATHbits.LATH3 = 0;
   933   00446E  9680               	bcf	128,3,c	;volatile
   934   004470                     
   935                           ;main.c: 34:     TRISFbits.TRISF2=1;
   936   004470  8486               	bsf	134,2,c	;volatile
   937   004472                     
   938                           ;main.c: 35:     ANSELFbits.ANSELF2=0;
   939   004472  010E               	movlb	14	; () banked
   940   004474  95B4               	bcf	180,2,b	;volatile
   941   004476                     
   942                           ; BSR set to: 14
   943                           ;main.c: 37:     TRISFbits.TRISF3=1;
   944   004476  8686               	bsf	134,3,c	;volatile
   945   004478                     
   946                           ; BSR set to: 14
   947                           ;main.c: 38:     ANSELFbits.ANSELF3=0;
   948   004478  97B4               	bcf	180,3,b	;volatile
   949   00447A                     
   950                           ; BSR set to: 14
   951                           ;main.c: 42:     motorL.power=0;
   952   00447A  0E00               	movlw	0
   953   00447C  0100               	movlb	0	; () banked
   954   00447E  6FF2               	movwf	_motorL& (0+255),b
   955   004480                     
   956                           ; BSR set to: 0
   957                           ;main.c: 43:     motorL.direction=1;
   958   004480  0E01               	movlw	1
   959   004482  6FF3               	movwf	(_motorL+1)& (0+255),b
   960   004484                     
   961                           ; BSR set to: 0
   962                           ;main.c: 44:     motorL.brakemode=1;
   963   004484  0E01               	movlw	1
   964   004486  6FF4               	movwf	(_motorL+2)& (0+255),b
   965   004488                     
   966                           ; BSR set to: 0
   967                           ;main.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   968   004488  0EAA               	movlw	170
   969   00448A  6FF7               	movwf	(_motorL+5)& (0+255),b
   970   00448C  0E0F               	movlw	15
   971   00448E  6FF8               	movwf	(_motorL+6)& (0+255),b
   972   004490                     
   973                           ; BSR set to: 0
   974                           ;main.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   975   004490  0EA6               	movlw	166
   976   004492  6FF9               	movwf	(_motorL+7)& (0+255),b
   977   004494  0E0F               	movlw	15
   978   004496  6FFA               	movwf	(_motorL+8)& (0+255),b
   979   004498                     
   980                           ; BSR set to: 0
   981                           ;main.c: 47:     motorL.PWMperiod=PWMperiod;
   982   004498  0E00               	movlw	0
   983   00449A  6FF6               	movwf	(_motorL+4)& (0+255),b
   984   00449C  0E63               	movlw	99
   985   00449E  6FF5               	movwf	(_motorL+3)& (0+255),b
   986   0044A0                     
   987                           ; BSR set to: 0
   988                           ;main.c: 49:     motorR.power=0;
   989   0044A0  0E00               	movlw	0
   990   0044A2  6FE9               	movwf	_motorR& (0+255),b
   991   0044A4                     
   992                           ; BSR set to: 0
   993                           ;main.c: 50:     motorR.direction=1;
   994   0044A4  0E01               	movlw	1
   995   0044A6  6FEA               	movwf	(_motorR+1)& (0+255),b
   996   0044A8                     
   997                           ; BSR set to: 0
   998                           ;main.c: 51:     motorR.brakemode=1;
   999   0044A8  0E01               	movlw	1
  1000   0044AA  6FEB               	movwf	(_motorR+2)& (0+255),b
  1001   0044AC                     
  1002                           ; BSR set to: 0
  1003                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1004   0044AC  0E25               	movlw	37
  1005   0044AE  6FEE               	movwf	(_motorR+5)& (0+255),b
  1006   0044B0  0E0F               	movlw	15
  1007   0044B2  6FEF               	movwf	(_motorR+6)& (0+255),b
  1008   0044B4                     
  1009                           ; BSR set to: 0
  1010                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1011   0044B4  0E21               	movlw	33
  1012   0044B6  6FF0               	movwf	(_motorR+7)& (0+255),b
  1013   0044B8  0E0F               	movlw	15
  1014   0044BA  6FF1               	movwf	(_motorR+8)& (0+255),b
  1015   0044BC                     
  1016                           ; BSR set to: 0
  1017                           ;main.c: 54:     motorR.PWMperiod=PWMperiod;
  1018   0044BC  0E00               	movlw	0
  1019   0044BE  6FED               	movwf	(_motorR+4)& (0+255),b
  1020   0044C0  0E63               	movlw	99
  1021   0044C2  6FEC               	movwf	(_motorR+3)& (0+255),b
  1022   0044C4                     
  1023                           ; BSR set to: 0
  1024                           ;main.c: 58:     calibration.index = 1;
  1025   0044C4  0E01               	movlw	1
  1026   0044C6  6FE0               	movwf	_calibration& (0+255),b
  1027   0044C8                     
  1028                           ; BSR set to: 0
  1029                           ;main.c: 61:     calibration.right_90 = 25;
  1030   0044C8  0E19               	movlw	25
  1031   0044CA  6FE1               	movwf	(_calibration+1)& (0+255),b
  1032   0044CC                     
  1033                           ; BSR set to: 0
  1034                           ;main.c: 62:     calibration.left_90 = 25;
  1035   0044CC  0E19               	movlw	25
  1036   0044CE  6FE2               	movwf	(_calibration+2)& (0+255),b
  1037   0044D0                     
  1038                           ; BSR set to: 0
  1039                           ;main.c: 64:     calibration.right_135 = 40;
  1040   0044D0  0E28               	movlw	40
  1041   0044D2  6FE3               	movwf	(_calibration+3)& (0+255),b
  1042   0044D4                     
  1043                           ; BSR set to: 0
  1044                           ;main.c: 65:     calibration.left_135 = 40;
  1045   0044D4  0E28               	movlw	40
  1046   0044D6  6FE4               	movwf	(_calibration+4)& (0+255),b
  1047   0044D8                     
  1048                           ; BSR set to: 0
  1049                           ;main.c: 67:     calibration.forward_one = 100;
  1050   0044D8  0E64               	movlw	100
  1051   0044DA  6FE5               	movwf	(_calibration+5)& (0+255),b
  1052   0044DC                     
  1053                           ; BSR set to: 0
  1054                           ;main.c: 68:     calibration.backward_one = 100;
  1055   0044DC  0E64               	movlw	100
  1056   0044DE  6FE6               	movwf	(_calibration+6)& (0+255),b
  1057   0044E0                     
  1058                           ; BSR set to: 0
  1059                           ;main.c: 70:     calibration.forward_half = 33;
  1060   0044E0  0E21               	movlw	33
  1061   0044E2  6FE7               	movwf	(_calibration+7)& (0+255),b
  1062   0044E4                     
  1063                           ; BSR set to: 0
  1064                           ;main.c: 71:     calibration.backward_half = 33;
  1065   0044E4  0E21               	movlw	33
  1066   0044E6  6FE8               	movwf	(_calibration+8)& (0+255),b
  1067   0044E8                     l4501:
  1068                           
  1069                           ;main.c: 79:         pause_until_RF2_pressed();
  1070   0044E8  ECC3  F023         	call	_pause_until_RF2_pressed	;wreg free
  1071   0044EC                     
  1072                           ;main.c: 81:         calibration_routine(&calibration, &motorL, &motorR);
  1073   0044EC  0EE0               	movlw	low _calibration
  1074   0044EE  6E1F               	movwf	calibration_routine@c^0,c
  1075   0044F0  0EF2               	movlw	low _motorL
  1076   0044F2  6E20               	movwf	calibration_routine@mL^0,c
  1077   0044F4  0EE9               	movlw	low _motorR
  1078   0044F6  6E21               	movwf	calibration_routine@mR^0,c
  1079   0044F8  ECCB  F01A         	call	_calibration_routine	;wreg free
  1080   0044FC                     
  1081                           ;main.c: 83:         maze_search(&calibration, &motorL, &motorR);
  1082   0044FC  0EE0               	movlw	low _calibration
  1083   0044FE  0100               	movlb	0	; () banked
  1084   004500  6FD3               	movwf	maze_search@c& (0+255),b
  1085   004502  0EF2               	movlw	low _motorL
  1086   004504  6FD4               	movwf	maze_search@mL& (0+255),b
  1087   004506  0EE9               	movlw	low _motorR
  1088   004508  6FD5               	movwf	maze_search@mR& (0+255),b
  1089   00450A  ECB0  F00F         	call	_maze_search	;wreg free
  1090   00450E                     
  1091                           ;main.c: 85:         maze_return(&calibration, &motorL, &motorR);
  1092   00450E  0EE0               	movlw	low _calibration
  1093   004510  6E1F               	movwf	maze_return@c^0,c
  1094   004512  0EF2               	movlw	low _motorL
  1095   004514  6E20               	movwf	maze_return@mL^0,c
  1096   004516  0EE9               	movlw	low _motorR
  1097   004518  6E21               	movwf	maze_return@mR^0,c
  1098   00451A  EC8B  F014         	call	_maze_return	;wreg free
  1099   00451E  EF74  F022         	goto	l4501
  1100   004522  EF00  F000         	goto	start
  1101   004526                     __end_of_main:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _pause_until_RF2_pressed *****************
  1105 ;; Defined at:
  1106 ;;		line 5 in file "calibration.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;Total ram usage:        2 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text1
  1134   004786                     __ptext1:
  1135                           	callstack 0
  1136   004786                     _pause_until_RF2_pressed:
  1137                           	callstack 30
  1138   004786                     l178:
  1139                           
  1140                           ;calibration.c: 12:         LATDbits.LATD7 = 1;
  1141   004786  8E7C               	bsf	124,7,c	;volatile
  1142   004788                     
  1143                           ;calibration.c: 13:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1144   004788  0E09               	movlw	9
  1145   00478A  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1146   00478C  0E1E               	movlw	30
  1147   00478E  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1148   004790  0EE4               	movlw	228
  1149   004792                     u5087:
  1150   004792  2EE8               	decfsz	wreg,f,c
  1151   004794  D7FE               	bra	u5087
  1152   004796  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1153   004798  D7FC               	bra	u5087
  1154   00479A  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1155   00479C  D7FA               	bra	u5087
  1156   00479E  D000               	nop2	
  1157   0047A0                     
  1158                           ;calibration.c: 14:         LATDbits.LATD7 = 0;
  1159   0047A0  9E7C               	bcf	124,7,c	;volatile
  1160                           
  1161                           ;calibration.c: 15:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1162   0047A2  0E09               	movlw	9
  1163   0047A4  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1164   0047A6  0E1E               	movlw	30
  1165   0047A8  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1166   0047AA  0EE4               	movlw	228
  1167   0047AC                     u5097:
  1168   0047AC  2EE8               	decfsz	wreg,f,c
  1169   0047AE  D7FE               	bra	u5097
  1170   0047B0  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1171   0047B2  D7FC               	bra	u5097
  1172   0047B4  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1173   0047B6  D7FA               	bra	u5097
  1174   0047B8  D000               	nop2	
  1175   0047BA                     
  1176                           ;calibration.c: 17:         if(!PORTFbits.RF2){
  1177   0047BA  B48E               	btfsc	142,2,c	;volatile
  1178   0047BC  EFE2  F023         	goto	u4651
  1179   0047C0  EFE4  F023         	goto	u4650
  1180   0047C4                     u4651:
  1181   0047C4  EFC3  F023         	goto	l178
  1182   0047C8                     u4650:
  1183   0047C8                     
  1184                           ;calibration.c: 18:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1185   0047C8  0E11               	movlw	17
  1186   0047CA  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1187   0047CC  0E3C               	movlw	60
  1188   0047CE  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1189   0047D0  0ECB               	movlw	203
  1190   0047D2                     u5107:
  1191   0047D2  2EE8               	decfsz	wreg,f,c
  1192   0047D4  D7FE               	bra	u5107
  1193   0047D6  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1194   0047D8  D7FC               	bra	u5107
  1195   0047DA  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1196   0047DC  D7FA               	bra	u5107
  1197   0047DE  0000               	nop	
  1198   0047E0                     
  1199                           ;calibration.c: 19:         LATDbits.LATD7 = 0;
  1200   0047E0  9E7C               	bcf	124,7,c	;volatile
  1201   0047E2  0012               	return		;funcret
  1202   0047E4                     __end_of_pause_until_RF2_pressed:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _maze_search *****************
  1206 ;; Defined at:
  1207 ;;		line 6 in file "pathfinder.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  c               1  115[BANK0 ] PTR struct calibration_s
  1210 ;;		 -> calibration(9), 
  1211 ;;  mL              1  116[BANK0 ] PTR struct DC_motor
  1212 ;;		 -> motorL(9), 
  1213 ;;  mR              1  117[BANK0 ] PTR struct DC_motor
  1214 ;;		 -> motorR(9), 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  i               2  118[BANK0 ] int 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1226 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1227 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;Total ram usage:        7 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 5
  1233 ;; This function calls:
  1234 ;;		_backward
  1235 ;;		_color_cardCheck
  1236 ;;		_color_click_init
  1237 ;;		_forward
  1238 ;;		_leftTURN
  1239 ;;		_rightTURN
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text2
  1246   001F60                     __ptext2:
  1247                           	callstack 0
  1248   001F60                     _maze_search:
  1249                           	callstack 25
  1250   001F60                     
  1251                           ;pathfinder.c: 9:     color_click_init();
  1252   001F60  EC04  F025         	call	_color_click_init	;wreg free
  1253   001F64                     l4235:
  1254                           
  1255                           ;pathfinder.c: 13:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1256   001F64  0E29               	movlw	41
  1257   001F66  6E5F               	movwf	(??_maze_search+1)^0,c
  1258   001F68  0E96               	movlw	150
  1259   001F6A  6E5E               	movwf	??_maze_search^0,c
  1260   001F6C  0E7F               	movlw	127
  1261   001F6E                     u5117:
  1262   001F6E  2EE8               	decfsz	wreg,f,c
  1263   001F70  D7FE               	bra	u5117
  1264   001F72  2E5E               	decfsz	??_maze_search^0,f,c
  1265   001F74  D7FC               	bra	u5117
  1266   001F76  2E5F               	decfsz	(??_maze_search+1)^0,f,c
  1267   001F78  D7FA               	bra	u5117
  1268   001F7A  0000               	nop	
  1269   001F7C                     
  1270                           ;pathfinder.c: 14:         LATHbits.LATH3 = 1;
  1271   001F7C  8680               	bsf	128,3,c	;volatile
  1272   001F7E                     
  1273                           ;pathfinder.c: 15:         LATDbits.LATD7 = 1;
  1274   001F7E  8E7C               	bsf	124,7,c	;volatile
  1275   001F80                     
  1276                           ;pathfinder.c: 18:         forward(c->forward_one, mL, mR);
  1277   001F80  C0D4  F013         	movff	maze_search@mL,forward@mL
  1278   001F84  C0D5  F014         	movff	maze_search@mR,forward@mR
  1279   001F88  0100               	movlb	0	; () banked
  1280   001F8A  51D3               	movf	maze_search@c& (0+255),w,b
  1281   001F8C  6ED9               	movwf	fsr2l,c
  1282   001F8E  6ADA               	clrf	fsr2h,c
  1283   001F90  0E05               	movlw	5
  1284   001F92  26D9               	addwf	fsr2l,f,c
  1285   001F94  50DF               	movf	indf2,w,c
  1286   001F96  ECC2  F01E         	call	_forward
  1287   001F9A                     
  1288                           ;pathfinder.c: 19:         Forward_Count++;
  1289   001F9A  0100               	movlb	0	; () banked
  1290   001F9C  2BDA               	incf	_Forward_Count& (0+255),f,b
  1291   001F9E                     
  1292                           ; BSR set to: 0
  1293                           ;pathfinder.c: 20:         Color_Value = color_cardCheck();
  1294   001F9E  EC01  F007         	call	_color_cardCheck	;wreg free
  1295   001FA2  C05C  F0D8         	movff	?_color_cardCheck,_Color_Value
  1296   001FA6  C05D  F0D9         	movff	?_color_cardCheck+1,_Color_Value+1
  1297   001FAA                     
  1298                           ;pathfinder.c: 22:         LATHbits.LATH3 = 0;
  1299   001FAA  9680               	bcf	128,3,c	;volatile
  1300   001FAC                     
  1301                           ;pathfinder.c: 23:         LATDbits.LATD7 = 0;
  1302   001FAC  9E7C               	bcf	124,7,c	;volatile
  1303   001FAE  0E0A               	movlw	10
  1304   001FB0  0100               	movlb	0	; () banked
  1305   001FB2  65DA               	cpfsgt	_Forward_Count& (0+255),b
  1306   001FB4  EFDE  F00F         	goto	u4751
  1307   001FB8  EFE0  F00F         	goto	u4750
  1308   001FBC                     u4751:
  1309   001FBC  EF45  F010         	goto	l4265
  1310   001FC0                     u4750:
  1311   001FC0                     
  1312                           ; BSR set to: 0
  1313                           ;pathfinder.c: 29:             backward(c->backward_half, mL, mR);
  1314   001FC0  C0D4  F013         	movff	maze_search@mL,backward@mL
  1315   001FC4  C0D5  F014         	movff	maze_search@mR,backward@mR
  1316   001FC8  51D3               	movf	maze_search@c& (0+255),w,b
  1317   001FCA  6ED9               	movwf	fsr2l,c
  1318   001FCC  6ADA               	clrf	fsr2h,c
  1319   001FCE  0E08               	movlw	8
  1320   001FD0  26D9               	addwf	fsr2l,f,c
  1321   001FD2  50DF               	movf	indf2,w,c
  1322   001FD4  ECBC  F01C         	call	_backward
  1323                           
  1324                           ;pathfinder.c: 30:             rightTURN(c->right_90, mL, mR);
  1325   001FD8  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1326   001FDC  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1327   001FE0  0100               	movlb	0	; () banked
  1328   001FE2  51D3               	movf	maze_search@c& (0+255),w,b
  1329   001FE4  6ED9               	movwf	fsr2l,c
  1330   001FE6  6ADA               	clrf	fsr2h,c
  1331   001FE8  0E01               	movlw	1
  1332   001FEA  26D9               	addwf	fsr2l,f,c
  1333   001FEC  50DF               	movf	indf2,w,c
  1334   001FEE  EC61  F01F         	call	_rightTURN
  1335                           
  1336                           ;pathfinder.c: 31:             rightTURN(c->right_90, mL, mR);
  1337   001FF2  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1338   001FF6  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1339   001FFA  0100               	movlb	0	; () banked
  1340   001FFC  51D3               	movf	maze_search@c& (0+255),w,b
  1341   001FFE  6ED9               	movwf	fsr2l,c
  1342   002000  6ADA               	clrf	fsr2h,c
  1343   002002  0E01               	movlw	1
  1344   002004  26D9               	addwf	fsr2l,f,c
  1345   002006  50DF               	movf	indf2,w,c
  1346   002008  EC61  F01F         	call	_rightTURN
  1347                           
  1348                           ;pathfinder.c: 32:             backward(c->backward_one, mL, mR);
  1349   00200C  C0D4  F013         	movff	maze_search@mL,backward@mL
  1350   002010  C0D5  F014         	movff	maze_search@mR,backward@mR
  1351   002014  0100               	movlb	0	; () banked
  1352   002016  51D3               	movf	maze_search@c& (0+255),w,b
  1353   002018  6ED9               	movwf	fsr2l,c
  1354   00201A  6ADA               	clrf	fsr2h,c
  1355   00201C  0E06               	movlw	6
  1356   00201E  26D9               	addwf	fsr2l,f,c
  1357   002020  50DF               	movf	indf2,w,c
  1358   002022  ECBC  F01C         	call	_backward
  1359   002026                     
  1360                           ;pathfinder.c: 33:             for (int i = 0; i < forward_reset_threshold; i++) {
  1361   002026  0E00               	movlw	0
  1362   002028  0100               	movlb	0	; () banked
  1363   00202A  6FD7               	movwf	(maze_search@i+1)& (0+255),b
  1364   00202C  0E00               	movlw	0
  1365   00202E  6FD6               	movwf	maze_search@i& (0+255),b
  1366   002030  EF29  F010         	goto	l4261
  1367   002034                     l4257:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;pathfinder.c: 34:                  forward(c->forward_one, mL, mR);
  1371   002034  C0D4  F013         	movff	maze_search@mL,forward@mL
  1372   002038  C0D5  F014         	movff	maze_search@mR,forward@mR
  1373   00203C  51D3               	movf	maze_search@c& (0+255),w,b
  1374   00203E  6ED9               	movwf	fsr2l,c
  1375   002040  6ADA               	clrf	fsr2h,c
  1376   002042  0E05               	movlw	5
  1377   002044  26D9               	addwf	fsr2l,f,c
  1378   002046  50DF               	movf	indf2,w,c
  1379   002048  ECC2  F01E         	call	_forward
  1380   00204C                     
  1381                           ;pathfinder.c: 36:             }
  1382   00204C  0100               	movlb	0	; () banked
  1383   00204E  4BD6               	infsnz	maze_search@i& (0+255),f,b
  1384   002050  2BD7               	incf	(maze_search@i+1)& (0+255),f,b
  1385   002052                     l4261:
  1386                           
  1387                           ; BSR set to: 0
  1388   002052  BFD7               	btfsc	(maze_search@i+1)& (0+255),7,b
  1389   002054  EF35  F010         	goto	u4761
  1390   002058  51D7               	movf	(maze_search@i+1)& (0+255),w,b
  1391   00205A  E109               	bnz	u4760
  1392   00205C  0E0A               	movlw	10
  1393   00205E  5DD6               	subwf	maze_search@i& (0+255),w,b
  1394   002060  A0D8               	btfss	status,0,c
  1395   002062  EF35  F010         	goto	u4761
  1396   002066  EF37  F010         	goto	u4760
  1397   00206A                     u4761:
  1398   00206A  EF1A  F010         	goto	l4257
  1399   00206E                     u4760:
  1400   00206E                     
  1401                           ; BSR set to: 0
  1402                           ;pathfinder.c: 37:             backward(c->backward_half, mL, mR);
  1403   00206E  C0D4  F013         	movff	maze_search@mL,backward@mL
  1404   002072  C0D5  F014         	movff	maze_search@mR,backward@mR
  1405   002076  51D3               	movf	maze_search@c& (0+255),w,b
  1406   002078  6ED9               	movwf	fsr2l,c
  1407   00207A  6ADA               	clrf	fsr2h,c
  1408   00207C  0E08               	movlw	8
  1409   00207E  26D9               	addwf	fsr2l,f,c
  1410   002080  50DF               	movf	indf2,w,c
  1411   002082  ECBC  F01C         	call	_backward
  1412                           
  1413                           ;pathfinder.c: 38:             break;
  1414   002086  EF2A  F012         	goto	l568
  1415   00208A                     l4265:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;pathfinder.c: 41:         if(Color_Value != 0){
  1419   00208A  51D8               	movf	_Color_Value& (0+255),w,b
  1420   00208C  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1421   00208E  B4D8               	btfsc	status,2,c
  1422   002090  EF4C  F010         	goto	u4771
  1423   002094  EF4E  F010         	goto	u4770
  1424   002098                     u4771:
  1425   002098  EFB2  F00F         	goto	l4235
  1426   00209C                     u4770:
  1427   00209C                     
  1428                           ; BSR set to: 0
  1429                           ;pathfinder.c: 43:             Operation_History[Operation_Count] = Forward_Count + 10;
  1430   00209C  0E3C               	movlw	low _Operation_History
  1431   00209E  25DB               	addwf	_Operation_Count& (0+255),w,b
  1432   0020A0  6ED9               	movwf	fsr2l,c
  1433   0020A2  6ADA               	clrf	fsr2h,c
  1434   0020A4  0E01               	movlw	high _Operation_History
  1435   0020A6  22DA               	addwfc	fsr2h,f,c
  1436   0020A8  51DA               	movf	_Forward_Count& (0+255),w,b
  1437   0020AA  0F0A               	addlw	10
  1438   0020AC  6EDF               	movwf	indf2,c
  1439   0020AE                     
  1440                           ; BSR set to: 0
  1441                           ;pathfinder.c: 44:             Forward_Count = 0;
  1442   0020AE  0E00               	movlw	0
  1443   0020B0  6FDA               	movwf	_Forward_Count& (0+255),b
  1444   0020B2                     
  1445                           ; BSR set to: 0
  1446                           ;pathfinder.c: 45:             Operation_Count++;
  1447   0020B2  2BDB               	incf	_Operation_Count& (0+255),f,b
  1448   0020B4                     
  1449                           ; BSR set to: 0
  1450                           ;pathfinder.c: 47:             if(Color_Value == 1){
  1451   0020B4  05D8               	decf	_Color_Value& (0+255),w,b
  1452   0020B6  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1453   0020B8  A4D8               	btfss	status,2,c
  1454   0020BA  EF61  F010         	goto	u4781
  1455   0020BE  EF63  F010         	goto	u4780
  1456   0020C2                     u4781:
  1457   0020C2  EF87  F010         	goto	l4283
  1458   0020C6                     u4780:
  1459   0020C6                     
  1460                           ; BSR set to: 0
  1461                           ;pathfinder.c: 48:                 Operation_History[Operation_Count] = Color_Value;
  1462   0020C6  0E3C               	movlw	low _Operation_History
  1463   0020C8  25DB               	addwf	_Operation_Count& (0+255),w,b
  1464   0020CA  6ED9               	movwf	fsr2l,c
  1465   0020CC  6ADA               	clrf	fsr2h,c
  1466   0020CE  0E01               	movlw	high _Operation_History
  1467   0020D0  22DA               	addwfc	fsr2h,f,c
  1468   0020D2  C0D8  FFDF         	movff	_Color_Value,indf2
  1469   0020D6                     
  1470                           ; BSR set to: 0
  1471                           ;pathfinder.c: 49:                 Operation_Count++;
  1472   0020D6  2BDB               	incf	_Operation_Count& (0+255),f,b
  1473   0020D8                     
  1474                           ; BSR set to: 0
  1475                           ;pathfinder.c: 50:                 backward(c->backward_half, mL, mR);
  1476   0020D8  C0D4  F013         	movff	maze_search@mL,backward@mL
  1477   0020DC  C0D5  F014         	movff	maze_search@mR,backward@mR
  1478   0020E0  51D3               	movf	maze_search@c& (0+255),w,b
  1479   0020E2  6ED9               	movwf	fsr2l,c
  1480   0020E4  6ADA               	clrf	fsr2h,c
  1481   0020E6  0E08               	movlw	8
  1482   0020E8  26D9               	addwf	fsr2l,f,c
  1483   0020EA  50DF               	movf	indf2,w,c
  1484   0020EC  ECBC  F01C         	call	_backward
  1485   0020F0                     
  1486                           ;pathfinder.c: 51:                 rightTURN(c->right_90, mL, mR);
  1487   0020F0  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1488   0020F4  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1489   0020F8  0100               	movlb	0	; () banked
  1490   0020FA  51D3               	movf	maze_search@c& (0+255),w,b
  1491   0020FC  6ED9               	movwf	fsr2l,c
  1492   0020FE  6ADA               	clrf	fsr2h,c
  1493   002100  0E01               	movlw	1
  1494   002102  26D9               	addwf	fsr2l,f,c
  1495   002104  50DF               	movf	indf2,w,c
  1496   002106  EC61  F01F         	call	_rightTURN
  1497                           
  1498                           ;pathfinder.c: 52:             }
  1499   00210A  EFB2  F00F         	goto	l4235
  1500   00210E                     l4283:
  1501                           
  1502                           ; BSR set to: 0
  1503   00210E  0E02               	movlw	2
  1504   002110  19D8               	xorwf	_Color_Value& (0+255),w,b
  1505   002112  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1506   002114  A4D8               	btfss	status,2,c
  1507   002116  EF8F  F010         	goto	u4791
  1508   00211A  EF91  F010         	goto	u4790
  1509   00211E                     u4791:
  1510   00211E  EFB5  F010         	goto	l4293
  1511   002122                     u4790:
  1512   002122                     
  1513                           ; BSR set to: 0
  1514                           ;pathfinder.c: 55:                 Operation_History[Operation_Count] = Color_Value;
  1515   002122  0E3C               	movlw	low _Operation_History
  1516   002124  25DB               	addwf	_Operation_Count& (0+255),w,b
  1517   002126  6ED9               	movwf	fsr2l,c
  1518   002128  6ADA               	clrf	fsr2h,c
  1519   00212A  0E01               	movlw	high _Operation_History
  1520   00212C  22DA               	addwfc	fsr2h,f,c
  1521   00212E  C0D8  FFDF         	movff	_Color_Value,indf2
  1522   002132                     
  1523                           ; BSR set to: 0
  1524                           ;pathfinder.c: 56:                 Operation_Count++;
  1525   002132  2BDB               	incf	_Operation_Count& (0+255),f,b
  1526   002134                     
  1527                           ; BSR set to: 0
  1528                           ;pathfinder.c: 57:                 backward(c->backward_half, mL, mR);
  1529   002134  C0D4  F013         	movff	maze_search@mL,backward@mL
  1530   002138  C0D5  F014         	movff	maze_search@mR,backward@mR
  1531   00213C  51D3               	movf	maze_search@c& (0+255),w,b
  1532   00213E  6ED9               	movwf	fsr2l,c
  1533   002140  6ADA               	clrf	fsr2h,c
  1534   002142  0E08               	movlw	8
  1535   002144  26D9               	addwf	fsr2l,f,c
  1536   002146  50DF               	movf	indf2,w,c
  1537   002148  ECBC  F01C         	call	_backward
  1538   00214C                     
  1539                           ;pathfinder.c: 58:                 leftTURN(c->left_90, mL, mR);
  1540   00214C  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1541   002150  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1542   002154  0100               	movlb	0	; () banked
  1543   002156  51D3               	movf	maze_search@c& (0+255),w,b
  1544   002158  6ED9               	movwf	fsr2l,c
  1545   00215A  6ADA               	clrf	fsr2h,c
  1546   00215C  0E02               	movlw	2
  1547   00215E  26D9               	addwf	fsr2l,f,c
  1548   002160  50DF               	movf	indf2,w,c
  1549   002162  ECFF  F01F         	call	_leftTURN
  1550                           
  1551                           ;pathfinder.c: 59:             }
  1552   002166  EFB2  F00F         	goto	l4235
  1553   00216A                     l4293:
  1554                           
  1555                           ; BSR set to: 0
  1556   00216A  0E03               	movlw	3
  1557   00216C  19D8               	xorwf	_Color_Value& (0+255),w,b
  1558   00216E  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1559   002170  A4D8               	btfss	status,2,c
  1560   002172  EFBD  F010         	goto	u4801
  1561   002176  EFBF  F010         	goto	u4800
  1562   00217A                     u4801:
  1563   00217A  EF0A  F011         	goto	l4309
  1564   00217E                     u4800:
  1565   00217E                     
  1566                           ; BSR set to: 0
  1567                           ;pathfinder.c: 62:                 Operation_History[Operation_Count] = Color_Value;
  1568   00217E  0E3C               	movlw	low _Operation_History
  1569   002180  25DB               	addwf	_Operation_Count& (0+255),w,b
  1570   002182  6ED9               	movwf	fsr2l,c
  1571   002184  6ADA               	clrf	fsr2h,c
  1572   002186  0E01               	movlw	high _Operation_History
  1573   002188  22DA               	addwfc	fsr2h,f,c
  1574   00218A  C0D8  FFDF         	movff	_Color_Value,indf2
  1575   00218E                     
  1576                           ; BSR set to: 0
  1577                           ;pathfinder.c: 63:                 Operation_Count++;
  1578   00218E  2BDB               	incf	_Operation_Count& (0+255),f,b
  1579   002190                     
  1580                           ; BSR set to: 0
  1581                           ;pathfinder.c: 64:                 backward(c->backward_half, mL, mR);
  1582   002190  C0D4  F013         	movff	maze_search@mL,backward@mL
  1583   002194  C0D5  F014         	movff	maze_search@mR,backward@mR
  1584   002198  51D3               	movf	maze_search@c& (0+255),w,b
  1585   00219A  6ED9               	movwf	fsr2l,c
  1586   00219C  6ADA               	clrf	fsr2h,c
  1587   00219E  0E08               	movlw	8
  1588   0021A0  26D9               	addwf	fsr2l,f,c
  1589   0021A2  50DF               	movf	indf2,w,c
  1590   0021A4  ECBC  F01C         	call	_backward
  1591   0021A8                     
  1592                           ;pathfinder.c: 65:                 rightTURN(c->right_90, mL, mR);
  1593   0021A8  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1594   0021AC  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1595   0021B0  0100               	movlb	0	; () banked
  1596   0021B2  51D3               	movf	maze_search@c& (0+255),w,b
  1597   0021B4  6ED9               	movwf	fsr2l,c
  1598   0021B6  6ADA               	clrf	fsr2h,c
  1599   0021B8  0E01               	movlw	1
  1600   0021BA  26D9               	addwf	fsr2l,f,c
  1601   0021BC  50DF               	movf	indf2,w,c
  1602   0021BE  EC61  F01F         	call	_rightTURN
  1603   0021C2                     
  1604                           ;pathfinder.c: 66:                 rightTURN(c->right_90, mL, mR);
  1605   0021C2  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1606   0021C6  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1607   0021CA  0100               	movlb	0	; () banked
  1608   0021CC  51D3               	movf	maze_search@c& (0+255),w,b
  1609   0021CE  6ED9               	movwf	fsr2l,c
  1610   0021D0  6ADA               	clrf	fsr2h,c
  1611   0021D2  0E01               	movlw	1
  1612   0021D4  26D9               	addwf	fsr2l,f,c
  1613   0021D6  50DF               	movf	indf2,w,c
  1614   0021D8  EC61  F01F         	call	_rightTURN
  1615   0021DC                     
  1616                           ;pathfinder.c: 67:                 backward(c->backward_one, mL, mR);
  1617   0021DC  C0D4  F013         	movff	maze_search@mL,backward@mL
  1618   0021E0  C0D5  F014         	movff	maze_search@mR,backward@mR
  1619   0021E4  0100               	movlb	0	; () banked
  1620   0021E6  51D3               	movf	maze_search@c& (0+255),w,b
  1621   0021E8  6ED9               	movwf	fsr2l,c
  1622   0021EA  6ADA               	clrf	fsr2h,c
  1623   0021EC  0E06               	movlw	6
  1624   0021EE  26D9               	addwf	fsr2l,f,c
  1625   0021F0  50DF               	movf	indf2,w,c
  1626   0021F2  ECBC  F01C         	call	_backward
  1627   0021F6                     
  1628                           ;pathfinder.c: 68:                 forward(c->forward_half, mL, mR);
  1629   0021F6  C0D4  F013         	movff	maze_search@mL,forward@mL
  1630   0021FA  C0D5  F014         	movff	maze_search@mR,forward@mR
  1631   0021FE  0100               	movlb	0	; () banked
  1632   002200  51D3               	movf	maze_search@c& (0+255),w,b
  1633   002202  6ED9               	movwf	fsr2l,c
  1634   002204  6ADA               	clrf	fsr2h,c
  1635   002206  0E07               	movlw	7
  1636   002208  26D9               	addwf	fsr2l,f,c
  1637   00220A  50DF               	movf	indf2,w,c
  1638   00220C  ECC2  F01E         	call	_forward
  1639                           
  1640                           ;pathfinder.c: 69:             }
  1641   002210  EFB2  F00F         	goto	l4235
  1642   002214                     l4309:
  1643                           
  1644                           ; BSR set to: 0
  1645   002214  0E04               	movlw	4
  1646   002216  19D8               	xorwf	_Color_Value& (0+255),w,b
  1647   002218  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1648   00221A  A4D8               	btfss	status,2,c
  1649   00221C  EF12  F011         	goto	u4811
  1650   002220  EF14  F011         	goto	u4810
  1651   002224                     u4811:
  1652   002224  EF45  F011         	goto	l4321
  1653   002228                     u4810:
  1654   002228                     
  1655                           ; BSR set to: 0
  1656                           ;pathfinder.c: 72:                 Operation_History[Operation_Count] = Color_Value;
  1657   002228  0E3C               	movlw	low _Operation_History
  1658   00222A  25DB               	addwf	_Operation_Count& (0+255),w,b
  1659   00222C  6ED9               	movwf	fsr2l,c
  1660   00222E  6ADA               	clrf	fsr2h,c
  1661   002230  0E01               	movlw	high _Operation_History
  1662   002232  22DA               	addwfc	fsr2h,f,c
  1663   002234  C0D8  FFDF         	movff	_Color_Value,indf2
  1664   002238                     
  1665                           ; BSR set to: 0
  1666                           ;pathfinder.c: 73:                 Operation_Count++;
  1667   002238  2BDB               	incf	_Operation_Count& (0+255),f,b
  1668   00223A                     
  1669                           ; BSR set to: 0
  1670                           ;pathfinder.c: 74:                 backward(c->backward_half, mL, mR);
  1671   00223A  C0D4  F013         	movff	maze_search@mL,backward@mL
  1672   00223E  C0D5  F014         	movff	maze_search@mR,backward@mR
  1673   002242  51D3               	movf	maze_search@c& (0+255),w,b
  1674   002244  6ED9               	movwf	fsr2l,c
  1675   002246  6ADA               	clrf	fsr2h,c
  1676   002248  0E08               	movlw	8
  1677   00224A  26D9               	addwf	fsr2l,f,c
  1678   00224C  50DF               	movf	indf2,w,c
  1679   00224E  ECBC  F01C         	call	_backward
  1680   002252                     
  1681                           ;pathfinder.c: 75:                 backward(c->backward_one, mL, mR);
  1682   002252  C0D4  F013         	movff	maze_search@mL,backward@mL
  1683   002256  C0D5  F014         	movff	maze_search@mR,backward@mR
  1684   00225A  0100               	movlb	0	; () banked
  1685   00225C  51D3               	movf	maze_search@c& (0+255),w,b
  1686   00225E  6ED9               	movwf	fsr2l,c
  1687   002260  6ADA               	clrf	fsr2h,c
  1688   002262  0E06               	movlw	6
  1689   002264  26D9               	addwf	fsr2l,f,c
  1690   002266  50DF               	movf	indf2,w,c
  1691   002268  ECBC  F01C         	call	_backward
  1692   00226C                     
  1693                           ;pathfinder.c: 76:                 rightTURN(c->right_90, mL, mR);
  1694   00226C  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1695   002270  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1696   002274  0100               	movlb	0	; () banked
  1697   002276  51D3               	movf	maze_search@c& (0+255),w,b
  1698   002278  6ED9               	movwf	fsr2l,c
  1699   00227A  6ADA               	clrf	fsr2h,c
  1700   00227C  0E01               	movlw	1
  1701   00227E  26D9               	addwf	fsr2l,f,c
  1702   002280  50DF               	movf	indf2,w,c
  1703   002282  EC61  F01F         	call	_rightTURN
  1704                           
  1705                           ;pathfinder.c: 77:             }
  1706   002286  EFB2  F00F         	goto	l4235
  1707   00228A                     l4321:
  1708                           
  1709                           ; BSR set to: 0
  1710   00228A  0E05               	movlw	5
  1711   00228C  19D8               	xorwf	_Color_Value& (0+255),w,b
  1712   00228E  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1713   002290  A4D8               	btfss	status,2,c
  1714   002292  EF4D  F011         	goto	u4821
  1715   002296  EF4F  F011         	goto	u4820
  1716   00229A                     u4821:
  1717   00229A  EF80  F011         	goto	l4333
  1718   00229E                     u4820:
  1719   00229E                     
  1720                           ; BSR set to: 0
  1721                           ;pathfinder.c: 80:                 Operation_History[Operation_Count] = Color_Value;
  1722   00229E  0E3C               	movlw	low _Operation_History
  1723   0022A0  25DB               	addwf	_Operation_Count& (0+255),w,b
  1724   0022A2  6ED9               	movwf	fsr2l,c
  1725   0022A4  6ADA               	clrf	fsr2h,c
  1726   0022A6  0E01               	movlw	high _Operation_History
  1727   0022A8  22DA               	addwfc	fsr2h,f,c
  1728   0022AA  C0D8  FFDF         	movff	_Color_Value,indf2
  1729   0022AE                     
  1730                           ; BSR set to: 0
  1731                           ;pathfinder.c: 81:                 Operation_Count++;
  1732   0022AE  2BDB               	incf	_Operation_Count& (0+255),f,b
  1733   0022B0                     
  1734                           ; BSR set to: 0
  1735                           ;pathfinder.c: 82:                 backward(c->backward_half, mL, mR);
  1736   0022B0  C0D4  F013         	movff	maze_search@mL,backward@mL
  1737   0022B4  C0D5  F014         	movff	maze_search@mR,backward@mR
  1738   0022B8  51D3               	movf	maze_search@c& (0+255),w,b
  1739   0022BA  6ED9               	movwf	fsr2l,c
  1740   0022BC  6ADA               	clrf	fsr2h,c
  1741   0022BE  0E08               	movlw	8
  1742   0022C0  26D9               	addwf	fsr2l,f,c
  1743   0022C2  50DF               	movf	indf2,w,c
  1744   0022C4  ECBC  F01C         	call	_backward
  1745   0022C8                     
  1746                           ;pathfinder.c: 83:                 backward(c->backward_one, mL, mR);
  1747   0022C8  C0D4  F013         	movff	maze_search@mL,backward@mL
  1748   0022CC  C0D5  F014         	movff	maze_search@mR,backward@mR
  1749   0022D0  0100               	movlb	0	; () banked
  1750   0022D2  51D3               	movf	maze_search@c& (0+255),w,b
  1751   0022D4  6ED9               	movwf	fsr2l,c
  1752   0022D6  6ADA               	clrf	fsr2h,c
  1753   0022D8  0E06               	movlw	6
  1754   0022DA  26D9               	addwf	fsr2l,f,c
  1755   0022DC  50DF               	movf	indf2,w,c
  1756   0022DE  ECBC  F01C         	call	_backward
  1757   0022E2                     
  1758                           ;pathfinder.c: 84:                 leftTURN(c->left_90, mL, mR);
  1759   0022E2  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1760   0022E6  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1761   0022EA  0100               	movlb	0	; () banked
  1762   0022EC  51D3               	movf	maze_search@c& (0+255),w,b
  1763   0022EE  6ED9               	movwf	fsr2l,c
  1764   0022F0  6ADA               	clrf	fsr2h,c
  1765   0022F2  0E02               	movlw	2
  1766   0022F4  26D9               	addwf	fsr2l,f,c
  1767   0022F6  50DF               	movf	indf2,w,c
  1768   0022F8  ECFF  F01F         	call	_leftTURN
  1769                           
  1770                           ;pathfinder.c: 85:             }
  1771   0022FC  EFB2  F00F         	goto	l4235
  1772   002300                     l4333:
  1773                           
  1774                           ; BSR set to: 0
  1775   002300  0E06               	movlw	6
  1776   002302  19D8               	xorwf	_Color_Value& (0+255),w,b
  1777   002304  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1778   002306  A4D8               	btfss	status,2,c
  1779   002308  EF88  F011         	goto	u4831
  1780   00230C  EF8A  F011         	goto	u4830
  1781   002310                     u4831:
  1782   002310  EFAE  F011         	goto	l4343
  1783   002314                     u4830:
  1784   002314                     
  1785                           ; BSR set to: 0
  1786                           ;pathfinder.c: 88:                 Operation_History[Operation_Count] = Color_Value;
  1787   002314  0E3C               	movlw	low _Operation_History
  1788   002316  25DB               	addwf	_Operation_Count& (0+255),w,b
  1789   002318  6ED9               	movwf	fsr2l,c
  1790   00231A  6ADA               	clrf	fsr2h,c
  1791   00231C  0E01               	movlw	high _Operation_History
  1792   00231E  22DA               	addwfc	fsr2h,f,c
  1793   002320  C0D8  FFDF         	movff	_Color_Value,indf2
  1794   002324                     
  1795                           ; BSR set to: 0
  1796                           ;pathfinder.c: 89:                 Operation_Count++;
  1797   002324  2BDB               	incf	_Operation_Count& (0+255),f,b
  1798   002326                     
  1799                           ; BSR set to: 0
  1800                           ;pathfinder.c: 90:                 backward(c->backward_half, mL, mR);
  1801   002326  C0D4  F013         	movff	maze_search@mL,backward@mL
  1802   00232A  C0D5  F014         	movff	maze_search@mR,backward@mR
  1803   00232E  51D3               	movf	maze_search@c& (0+255),w,b
  1804   002330  6ED9               	movwf	fsr2l,c
  1805   002332  6ADA               	clrf	fsr2h,c
  1806   002334  0E08               	movlw	8
  1807   002336  26D9               	addwf	fsr2l,f,c
  1808   002338  50DF               	movf	indf2,w,c
  1809   00233A  ECBC  F01C         	call	_backward
  1810   00233E                     
  1811                           ;pathfinder.c: 91:                 rightTURN(c->right_135, mL, mR);
  1812   00233E  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1813   002342  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1814   002346  0100               	movlb	0	; () banked
  1815   002348  51D3               	movf	maze_search@c& (0+255),w,b
  1816   00234A  6ED9               	movwf	fsr2l,c
  1817   00234C  6ADA               	clrf	fsr2h,c
  1818   00234E  0E03               	movlw	3
  1819   002350  26D9               	addwf	fsr2l,f,c
  1820   002352  50DF               	movf	indf2,w,c
  1821   002354  EC61  F01F         	call	_rightTURN
  1822                           
  1823                           ;pathfinder.c: 92:             }
  1824   002358  EFB2  F00F         	goto	l4235
  1825   00235C                     l4343:
  1826                           
  1827                           ; BSR set to: 0
  1828   00235C  0E07               	movlw	7
  1829   00235E  19D8               	xorwf	_Color_Value& (0+255),w,b
  1830   002360  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1831   002362  A4D8               	btfss	status,2,c
  1832   002364  EFB6  F011         	goto	u4841
  1833   002368  EFB8  F011         	goto	u4840
  1834   00236C                     u4841:
  1835   00236C  EFDC  F011         	goto	l4353
  1836   002370                     u4840:
  1837   002370                     
  1838                           ; BSR set to: 0
  1839                           ;pathfinder.c: 95:                 Operation_History[Operation_Count] = Color_Value;
  1840   002370  0E3C               	movlw	low _Operation_History
  1841   002372  25DB               	addwf	_Operation_Count& (0+255),w,b
  1842   002374  6ED9               	movwf	fsr2l,c
  1843   002376  6ADA               	clrf	fsr2h,c
  1844   002378  0E01               	movlw	high _Operation_History
  1845   00237A  22DA               	addwfc	fsr2h,f,c
  1846   00237C  C0D8  FFDF         	movff	_Color_Value,indf2
  1847   002380                     
  1848                           ; BSR set to: 0
  1849                           ;pathfinder.c: 96:                 Operation_Count++;
  1850   002380  2BDB               	incf	_Operation_Count& (0+255),f,b
  1851   002382                     
  1852                           ; BSR set to: 0
  1853                           ;pathfinder.c: 97:                 backward(c->backward_half, mL, mR);
  1854   002382  C0D4  F013         	movff	maze_search@mL,backward@mL
  1855   002386  C0D5  F014         	movff	maze_search@mR,backward@mR
  1856   00238A  51D3               	movf	maze_search@c& (0+255),w,b
  1857   00238C  6ED9               	movwf	fsr2l,c
  1858   00238E  6ADA               	clrf	fsr2h,c
  1859   002390  0E08               	movlw	8
  1860   002392  26D9               	addwf	fsr2l,f,c
  1861   002394  50DF               	movf	indf2,w,c
  1862   002396  ECBC  F01C         	call	_backward
  1863   00239A                     
  1864                           ;pathfinder.c: 98:                 leftTURN(c->left_135, mL, mR);
  1865   00239A  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1866   00239E  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1867   0023A2  0100               	movlb	0	; () banked
  1868   0023A4  51D3               	movf	maze_search@c& (0+255),w,b
  1869   0023A6  6ED9               	movwf	fsr2l,c
  1870   0023A8  6ADA               	clrf	fsr2h,c
  1871   0023AA  0E04               	movlw	4
  1872   0023AC  26D9               	addwf	fsr2l,f,c
  1873   0023AE  50DF               	movf	indf2,w,c
  1874   0023B0  ECFF  F01F         	call	_leftTURN
  1875                           
  1876                           ;pathfinder.c: 99:             }
  1877   0023B4  EFB2  F00F         	goto	l4235
  1878   0023B8                     l4353:
  1879                           
  1880                           ; BSR set to: 0
  1881   0023B8  0E08               	movlw	8
  1882   0023BA  19D8               	xorwf	_Color_Value& (0+255),w,b
  1883   0023BC  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1884   0023BE  A4D8               	btfss	status,2,c
  1885   0023C0  EFE4  F011         	goto	u4851
  1886   0023C4  EFE6  F011         	goto	u4850
  1887   0023C8                     u4851:
  1888   0023C8  EF28  F012         	goto	l561
  1889   0023CC                     u4850:
  1890   0023CC                     
  1891                           ; BSR set to: 0
  1892                           ;pathfinder.c: 103:                 backward(c->backward_half, mL, mR);
  1893   0023CC  C0D4  F013         	movff	maze_search@mL,backward@mL
  1894   0023D0  C0D5  F014         	movff	maze_search@mR,backward@mR
  1895   0023D4  51D3               	movf	maze_search@c& (0+255),w,b
  1896   0023D6  6ED9               	movwf	fsr2l,c
  1897   0023D8  6ADA               	clrf	fsr2h,c
  1898   0023DA  0E08               	movlw	8
  1899   0023DC  26D9               	addwf	fsr2l,f,c
  1900   0023DE  50DF               	movf	indf2,w,c
  1901   0023E0  ECBC  F01C         	call	_backward
  1902                           
  1903                           ;pathfinder.c: 104:                 rightTURN(c->right_90, mL, mR);
  1904   0023E4  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1905   0023E8  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1906   0023EC  0100               	movlb	0	; () banked
  1907   0023EE  51D3               	movf	maze_search@c& (0+255),w,b
  1908   0023F0  6ED9               	movwf	fsr2l,c
  1909   0023F2  6ADA               	clrf	fsr2h,c
  1910   0023F4  0E01               	movlw	1
  1911   0023F6  26D9               	addwf	fsr2l,f,c
  1912   0023F8  50DF               	movf	indf2,w,c
  1913   0023FA  EC61  F01F         	call	_rightTURN
  1914                           
  1915                           ;pathfinder.c: 105:                 rightTURN(c->right_90, mL, mR);
  1916   0023FE  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1917   002402  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1918   002406  0100               	movlb	0	; () banked
  1919   002408  51D3               	movf	maze_search@c& (0+255),w,b
  1920   00240A  6ED9               	movwf	fsr2l,c
  1921   00240C  6ADA               	clrf	fsr2h,c
  1922   00240E  0E01               	movlw	1
  1923   002410  26D9               	addwf	fsr2l,f,c
  1924   002412  50DF               	movf	indf2,w,c
  1925   002414  EC61  F01F         	call	_rightTURN
  1926                           
  1927                           ;pathfinder.c: 106:                 backward(c->backward_one, mL, mR);
  1928   002418  C0D4  F013         	movff	maze_search@mL,backward@mL
  1929   00241C  C0D5  F014         	movff	maze_search@mR,backward@mR
  1930   002420  0100               	movlb	0	; () banked
  1931   002422  51D3               	movf	maze_search@c& (0+255),w,b
  1932   002424  6ED9               	movwf	fsr2l,c
  1933   002426  6ADA               	clrf	fsr2h,c
  1934   002428  0E06               	movlw	6
  1935   00242A  26D9               	addwf	fsr2l,f,c
  1936   00242C  50DF               	movf	indf2,w,c
  1937   00242E  ECBC  F01C         	call	_backward
  1938                           
  1939                           ;pathfinder.c: 107:                 forward(c->forward_half, mL, mR);
  1940   002432  C0D4  F013         	movff	maze_search@mL,forward@mL
  1941   002436  C0D5  F014         	movff	maze_search@mR,forward@mR
  1942   00243A  0100               	movlb	0	; () banked
  1943   00243C  51D3               	movf	maze_search@c& (0+255),w,b
  1944   00243E  6ED9               	movwf	fsr2l,c
  1945   002440  6ADA               	clrf	fsr2h,c
  1946   002442  0E07               	movlw	7
  1947   002444  26D9               	addwf	fsr2l,f,c
  1948   002446  50DF               	movf	indf2,w,c
  1949   002448  ECC2  F01E         	call	_forward
  1950                           
  1951                           ;pathfinder.c: 108:                 break;
  1952   00244C  EF2A  F012         	goto	l568
  1953   002450                     l561:
  1954                           
  1955                           ; BSR set to: 0
  1956   002450  EFB2  F00F         	goto	l4235
  1957   002454                     l568:
  1958   002454  0012               	return		;funcret
  1959   002456                     __end_of_maze_search:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _color_click_init *****************
  1963 ;; Defined at:
  1964 ;;		line 7 in file "color.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 3
  1985 ;; This function calls:
  1986 ;;		_I2C_2_Master_Init
  1987 ;;		_color_writetoaddr
  1988 ;; This function is called by:
  1989 ;;		_maze_search
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text3
  1994   004A08                     __ptext3:
  1995                           	callstack 0
  1996   004A08                     _color_click_init:
  1997                           	callstack 26
  1998   004A08                     
  1999                           ;color.c: 10:     I2C_2_Master_Init();
  2000   004A08  EC56  F025         	call	_I2C_2_Master_Init	;wreg free
  2001   004A0C                     
  2002                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  2003   004A0C  0E01               	movlw	1
  2004   004A0E  6E03               	movwf	color_writetoaddr@value^0,c
  2005   004A10  0E00               	movlw	0
  2006   004A12  EC92  F025         	call	_color_writetoaddr
  2007   004A16                     
  2008                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2009   004A16  0E3F               	movlw	63
  2010   004A18  6E05               	movwf	??_color_click_init^0,c
  2011   004A1A  0E55               	movlw	85
  2012   004A1C                     u5127:
  2013   004A1C  2EE8               	decfsz	wreg,f,c
  2014   004A1E  D7FE               	bra	u5127
  2015   004A20  2E05               	decfsz	??_color_click_init^0,f,c
  2016   004A22  D7FC               	bra	u5127
  2017   004A24  0000               	nop	
  2018   004A26                     
  2019                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  2020   004A26  0E03               	movlw	3
  2021   004A28  6E03               	movwf	color_writetoaddr@value^0,c
  2022   004A2A  0E00               	movlw	0
  2023   004A2C  EC92  F025         	call	_color_writetoaddr
  2024   004A30                     
  2025                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  2026   004A30  0ED5               	movlw	213
  2027   004A32  6E03               	movwf	color_writetoaddr@value^0,c
  2028   004A34  0E01               	movlw	1
  2029   004A36  EC92  F025         	call	_color_writetoaddr
  2030   004A3A                     
  2031                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  2032   004A3A  9287               	bcf	135,1,c	;volatile
  2033   004A3C                     
  2034                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  2035   004A3C  9881               	bcf	129,4,c	;volatile
  2036   004A3E                     
  2037                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  2038   004A3E  9E86               	bcf	134,7,c	;volatile
  2039   004A40                     
  2040                           ;color.c: 30:     LATGbits.LATG1 = 1;
  2041   004A40  827F               	bsf	127,1,c	;volatile
  2042   004A42                     
  2043                           ;color.c: 31:     LATAbits.LATA4 = 1;
  2044   004A42  8879               	bsf	121,4,c	;volatile
  2045   004A44                     
  2046                           ;color.c: 32:     LATFbits.LATF7 = 1;
  2047   004A44  8E7E               	bsf	126,7,c	;volatile
  2048   004A46  0012               	return		;funcret
  2049   004A48                     __end_of_color_click_init:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _color_writetoaddr *****************
  2053 ;; Defined at:
  2054 ;;		line 37 in file "color.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  address         1    wreg     unsigned char 
  2057 ;;  value           1    2[COMRAM] unsigned char 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  address         1    3[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2069 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;Total ram usage:        2 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 2
  2076 ;; This function calls:
  2077 ;;		_I2C_2_Master_Start
  2078 ;;		_I2C_2_Master_Stop
  2079 ;;		_I2C_2_Master_Write
  2080 ;; This function is called by:
  2081 ;;		_color_click_init
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text4
  2086   004B24                     __ptext4:
  2087                           	callstack 0
  2088   004B24                     _color_writetoaddr:
  2089                           	callstack 26
  2090                           
  2091                           ;incstack = 0
  2092                           ;color_writetoaddr@address stored from wreg
  2093   004B24  6E04               	movwf	color_writetoaddr@address^0,c
  2094   004B26                     
  2095                           ;color.c: 38:     I2C_2_Master_Start();
  2096   004B26  ECAD  F025         	call	_I2C_2_Master_Start	;wreg free
  2097                           
  2098                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2099   004B2A  0E52               	movlw	82
  2100   004B2C  ECA2  F025         	call	_I2C_2_Master_Write
  2101                           
  2102                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  2103   004B30  5004               	movf	color_writetoaddr@address^0,w,c
  2104   004B32  0980               	iorlw	128
  2105   004B34  ECA2  F025         	call	_I2C_2_Master_Write
  2106                           
  2107                           ;color.c: 41:     I2C_2_Master_Write(value);
  2108   004B38  5003               	movf	color_writetoaddr@value^0,w,c
  2109   004B3A  ECA2  F025         	call	_I2C_2_Master_Write
  2110                           
  2111                           ;color.c: 42:     I2C_2_Master_Stop();
  2112   004B3E  ECA8  F025         	call	_I2C_2_Master_Stop	;wreg free
  2113   004B42  0012               	return		;funcret
  2114   004B44                     __end_of_color_writetoaddr:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _I2C_2_Master_Init *****************
  2118 ;; Defined at:
  2119 ;;		line 4 in file "i2c.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_color_click_init
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text5
  2147   004AAC                     __ptext5:
  2148                           	callstack 0
  2149   004AAC                     _I2C_2_Master_Init:
  2150                           	callstack 28
  2151   004AAC                     
  2152                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2153   004AAC  010E               	movlb	14	; () banked
  2154   004AAE  51D9               	movf	217,w,b	;volatile
  2155   004AB0  0BF0               	andlw	-16
  2156   004AB2  0908               	iorlw	8
  2157   004AB4  6FD9               	movwf	217,b	;volatile
  2158   004AB6                     
  2159                           ; BSR set to: 14
  2160                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2161   004AB6  8BD9               	bsf	217,5,b	;volatile
  2162                           
  2163                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2164   004AB8  0E9F               	movlw	159
  2165   004ABA  6FD6               	movwf	214,b	;volatile
  2166   004ABC                     
  2167                           ; BSR set to: 14
  2168                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2169   004ABC  8A84               	bsf	132,5,c	;volatile
  2170   004ABE                     
  2171                           ; BSR set to: 14
  2172                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2173   004ABE  8C84               	bsf	132,6,c	;volatile
  2174   004AC0                     
  2175                           ; BSR set to: 14
  2176                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2177   004AC0  9BA7               	bcf	167,5,b	;volatile
  2178   004AC2                     
  2179                           ; BSR set to: 14
  2180                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2181   004AC2  9DA7               	bcf	167,6,b	;volatile
  2182                           
  2183                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2184   004AC4  0E1D               	movlw	29
  2185   004AC6  6F1D               	movwf	29,b	;volatile
  2186                           
  2187                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2188   004AC8  0E1E               	movlw	30
  2189   004ACA  6F1C               	movwf	28,b	;volatile
  2190                           
  2191                           ;i2c.c: 18:   RD5PPS=0x1C;
  2192   004ACC  0E1C               	movlw	28
  2193   004ACE  6F6F               	movwf	111,b	;volatile
  2194                           
  2195                           ;i2c.c: 19:   RD6PPS=0x1B;
  2196   004AD0  0E1B               	movlw	27
  2197   004AD2  6F70               	movwf	112,b	;volatile
  2198   004AD4                     
  2199                           ; BSR set to: 14
  2200   004AD4  0012               	return		;funcret
  2201   004AD6                     __end_of_I2C_2_Master_Init:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _color_cardCheck *****************
  2205 ;; Defined at:
  2206 ;;		line 166 in file "color.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  V               4  111[BANK0 ] float 
  2211 ;;  S               4  107[BANK0 ] float 
  2212 ;;  H               4  103[BANK0 ] float 
  2213 ;;  c               4   97[BANK0 ] float 
  2214 ;;  b               4   93[BANK0 ] float 
  2215 ;;  g               4   89[BANK0 ] float 
  2216 ;;  r               4   85[BANK0 ] float 
  2217 ;;  card_color      2  101[BANK0 ] unsigned int 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  2   91[COMRAM] unsigned int 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;Total ram usage:       32 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 4
  2234 ;; This function calls:
  2235 ;;		_RGB_to_HSV
  2236 ;;		___flge
  2237 ;;		___xxtofl
  2238 ;;		_color_read_Blue
  2239 ;;		_color_read_Clear
  2240 ;;		_color_read_Green
  2241 ;;		_color_read_Red
  2242 ;; This function is called by:
  2243 ;;		_maze_search
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text6
  2248   000E02                     __ptext6:
  2249                           	callstack 0
  2250   000E02                     _color_cardCheck:
  2251                           	callstack 25
  2252   000E02                     
  2253                           ;color.c: 169:     float r = color_read_Red();
  2254   000E02  EC20  F024         	call	_color_read_Red	;wreg free
  2255   000E06  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2256   000E0A  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2257   000E0E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2258   000E10  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2259   000E12  0E00               	movlw	0
  2260   000E14  ECE2  F01B         	call	___xxtofl
  2261   000E18  C00C  F0B5         	movff	?___xxtofl,color_cardCheck@r
  2262   000E1C  C00D  F0B6         	movff	?___xxtofl+1,color_cardCheck@r+1
  2263   000E20  C00E  F0B7         	movff	?___xxtofl+2,color_cardCheck@r+2
  2264   000E24  C00F  F0B8         	movff	?___xxtofl+3,color_cardCheck@r+3
  2265                           
  2266                           ;color.c: 170:     float g = color_read_Green();
  2267   000E28  EC48  F024         	call	_color_read_Green	;wreg free
  2268   000E2C  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2269   000E30  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2270   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2271   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2272   000E38  0E00               	movlw	0
  2273   000E3A  ECE2  F01B         	call	___xxtofl
  2274   000E3E  C00C  F0B9         	movff	?___xxtofl,color_cardCheck@g
  2275   000E42  C00D  F0BA         	movff	?___xxtofl+1,color_cardCheck@g+1
  2276   000E46  C00E  F0BB         	movff	?___xxtofl+2,color_cardCheck@g+2
  2277   000E4A  C00F  F0BC         	movff	?___xxtofl+3,color_cardCheck@g+3
  2278                           
  2279                           ;color.c: 171:     float b = color_read_Blue();
  2280   000E4E  EC98  F024         	call	_color_read_Blue	;wreg free
  2281   000E52  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2282   000E56  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2283   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2284   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2285   000E5E  0E00               	movlw	0
  2286   000E60  ECE2  F01B         	call	___xxtofl
  2287   000E64  C00C  F0BD         	movff	?___xxtofl,color_cardCheck@b
  2288   000E68  C00D  F0BE         	movff	?___xxtofl+1,color_cardCheck@b+1
  2289   000E6C  C00E  F0BF         	movff	?___xxtofl+2,color_cardCheck@b+2
  2290   000E70  C00F  F0C0         	movff	?___xxtofl+3,color_cardCheck@b+3
  2291                           
  2292                           ;color.c: 174:     float c = color_read_Clear();
  2293   000E74  EC70  F024         	call	_color_read_Clear	;wreg free
  2294   000E78  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2295   000E7C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2296   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2297   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2298   000E84  0E00               	movlw	0
  2299   000E86  ECE2  F01B         	call	___xxtofl
  2300   000E8A  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@c
  2301   000E8E  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@c+1
  2302   000E92  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@c+2
  2303   000E96  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@c+3
  2304   000E9A                     
  2305                           ;color.c: 177:     float H;;color.c: 178:     float S;;color.c: 179:     float V;;color.
      +                          c: 181:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  2306   000E9A  C0B5  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  2307   000E9E  C0B6  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  2308   000EA2  C0B7  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  2309   000EA6  C0B8  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  2310   000EAA  C0B9  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  2311   000EAE  C0BA  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  2312   000EB2  C0BB  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  2313   000EB6  C0BC  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  2314   000EBA  C0BD  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  2315   000EBE  C0BE  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  2316   000EC2  C0BF  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  2317   000EC6  C0C0  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  2318   000ECA  C0C1  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  2319   000ECE  C0C2  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  2320   000ED2  C0C3  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  2321   000ED6  C0C4  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  2322   000EDA  0EC7               	movlw	low color_cardCheck@H
  2323   000EDC  0100               	movlb	0	; () banked
  2324   000EDE  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  2325   000EE0  0ECB               	movlw	low color_cardCheck@S
  2326   000EE2  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  2327   000EE4  0ECF               	movlw	low color_cardCheck@V
  2328   000EE6  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  2329   000EE8  EC1D  F00C         	call	_RGB_to_HSV	;wreg free
  2330   000EEC                     
  2331                           ;color.c: 186:     unsigned int card_color = 0;
  2332   000EEC  0E00               	movlw	0
  2333   000EEE  0100               	movlb	0	; () banked
  2334   000EF0  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2335   000EF2  0E00               	movlw	0
  2336   000EF4  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2337   000EF6                     
  2338                           ; BSR set to: 0
  2339                           ;color.c: 189:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  2340   000EF6  0E00               	movlw	0
  2341   000EF8  6E01               	movwf	___flge@ff1^0,c
  2342   000EFA  0E80               	movlw	128
  2343   000EFC  6E02               	movwf	(___flge@ff1+1)^0,c
  2344   000EFE  0EB1               	movlw	177
  2345   000F00  6E03               	movwf	(___flge@ff1+2)^0,c
  2346   000F02  0E43               	movlw	67
  2347   000F04  6E04               	movwf	(___flge@ff1+3)^0,c
  2348   000F06  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2349   000F0A  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2350   000F0E  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2351   000F12  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2352   000F16  ECAC  F021         	call	___flge	;wreg free
  2353   000F1A  B0D8               	btfsc	status,0,c
  2354   000F1C  EF92  F007         	goto	u3881
  2355   000F20  EF94  F007         	goto	u3880
  2356   000F24                     u3881:
  2357   000F24  EF18  F008         	goto	l3791
  2358   000F28                     u3880:
  2359   000F28  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2360   000F2C  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2361   000F30  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2362   000F34  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2363   000F38  0E00               	movlw	0
  2364   000F3A  6E05               	movwf	___flge@ff2^0,c
  2365   000F3C  0E00               	movlw	0
  2366   000F3E  6E06               	movwf	(___flge@ff2+1)^0,c
  2367   000F40  0EB4               	movlw	180
  2368   000F42  6E07               	movwf	(___flge@ff2+2)^0,c
  2369   000F44  0E43               	movlw	67
  2370   000F46  6E08               	movwf	(___flge@ff2+3)^0,c
  2371   000F48  ECAC  F021         	call	___flge	;wreg free
  2372   000F4C  B0D8               	btfsc	status,0,c
  2373   000F4E  EFAB  F007         	goto	u3891
  2374   000F52  EFAD  F007         	goto	u3890
  2375   000F56                     u3891:
  2376   000F56  EF18  F008         	goto	l3791
  2377   000F5A                     u3890:
  2378   000F5A  0E00               	movlw	0
  2379   000F5C  6E01               	movwf	___flge@ff1^0,c
  2380   000F5E  0E00               	movlw	0
  2381   000F60  6E02               	movwf	(___flge@ff1+1)^0,c
  2382   000F62  0EAA               	movlw	170
  2383   000F64  6E03               	movwf	(___flge@ff1+2)^0,c
  2384   000F66  0E42               	movlw	66
  2385   000F68  6E04               	movwf	(___flge@ff1+3)^0,c
  2386   000F6A  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2387   000F6E  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2388   000F72  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2389   000F76  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2390   000F7A  ECAC  F021         	call	___flge	;wreg free
  2391   000F7E  B0D8               	btfsc	status,0,c
  2392   000F80  EFC4  F007         	goto	u3901
  2393   000F84  EFC6  F007         	goto	u3900
  2394   000F88                     u3901:
  2395   000F88  EF18  F008         	goto	l3791
  2396   000F8C                     u3900:
  2397   000F8C  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2398   000F90  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2399   000F94  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2400   000F98  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2401   000F9C  0E00               	movlw	0
  2402   000F9E  6E05               	movwf	___flge@ff2^0,c
  2403   000FA0  0E00               	movlw	0
  2404   000FA2  6E06               	movwf	(___flge@ff2+1)^0,c
  2405   000FA4  0EB4               	movlw	180
  2406   000FA6  6E07               	movwf	(___flge@ff2+2)^0,c
  2407   000FA8  0E42               	movlw	66
  2408   000FAA  6E08               	movwf	(___flge@ff2+3)^0,c
  2409   000FAC  ECAC  F021         	call	___flge	;wreg free
  2410   000FB0  B0D8               	btfsc	status,0,c
  2411   000FB2  EFDD  F007         	goto	u3911
  2412   000FB6  EFDF  F007         	goto	u3910
  2413   000FBA                     u3911:
  2414   000FBA  EF18  F008         	goto	l3791
  2415   000FBE                     u3910:
  2416   000FBE  0E00               	movlw	0
  2417   000FC0  6E01               	movwf	___flge@ff1^0,c
  2418   000FC2  0E00               	movlw	0
  2419   000FC4  6E02               	movwf	(___flge@ff1+1)^0,c
  2420   000FC6  0EA0               	movlw	160
  2421   000FC8  6E03               	movwf	(___flge@ff1+2)^0,c
  2422   000FCA  0E42               	movlw	66
  2423   000FCC  6E04               	movwf	(___flge@ff1+3)^0,c
  2424   000FCE  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2425   000FD2  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2426   000FD6  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2427   000FDA  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2428   000FDE  ECAC  F021         	call	___flge	;wreg free
  2429   000FE2  B0D8               	btfsc	status,0,c
  2430   000FE4  EFF6  F007         	goto	u3921
  2431   000FE8  EFF8  F007         	goto	u3920
  2432   000FEC                     u3921:
  2433   000FEC  EF18  F008         	goto	l3791
  2434   000FF0                     u3920:
  2435   000FF0  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2436   000FF4  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2437   000FF8  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2438   000FFC  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2439   001000  0E00               	movlw	0
  2440   001002  6E05               	movwf	___flge@ff2^0,c
  2441   001004  0E00               	movlw	0
  2442   001006  6E06               	movwf	(___flge@ff2+1)^0,c
  2443   001008  0EAA               	movlw	170
  2444   00100A  6E07               	movwf	(___flge@ff2+2)^0,c
  2445   00100C  0E42               	movlw	66
  2446   00100E  6E08               	movwf	(___flge@ff2+3)^0,c
  2447   001010  ECAC  F021         	call	___flge	;wreg free
  2448   001014  B0D8               	btfsc	status,0,c
  2449   001016  EF0F  F008         	goto	u3931
  2450   00101A  EF11  F008         	goto	u3930
  2451   00101E                     u3931:
  2452   00101E  EF18  F008         	goto	l3791
  2453   001022                     u3930:
  2454   001022  0E00               	movlw	0
  2455   001024  0100               	movlb	0	; () banked
  2456   001026  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2457   001028  0E01               	movlw	1
  2458   00102A  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2459   00102C  EF18  F00C         	goto	l3883
  2460   001030                     l3791:
  2461   001030  0E00               	movlw	0
  2462   001032  6E01               	movwf	___flge@ff1^0,c
  2463   001034  0E00               	movlw	0
  2464   001036  6E02               	movwf	(___flge@ff1+1)^0,c
  2465   001038  0E86               	movlw	134
  2466   00103A  6E03               	movwf	(___flge@ff1+2)^0,c
  2467   00103C  0E42               	movlw	66
  2468   00103E  6E04               	movwf	(___flge@ff1+3)^0,c
  2469   001040  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2470   001044  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2471   001048  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2472   00104C  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2473   001050  ECAC  F021         	call	___flge	;wreg free
  2474   001054  B0D8               	btfsc	status,0,c
  2475   001056  EF2F  F008         	goto	u3941
  2476   00105A  EF31  F008         	goto	u3940
  2477   00105E                     u3941:
  2478   00105E  EFB5  F008         	goto	l3805
  2479   001062                     u3940:
  2480   001062  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2481   001066  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2482   00106A  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2483   00106E  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2484   001072  0E00               	movlw	0
  2485   001074  6E05               	movwf	___flge@ff2^0,c
  2486   001076  0E00               	movlw	0
  2487   001078  6E06               	movwf	(___flge@ff2+1)^0,c
  2488   00107A  0E9E               	movlw	158
  2489   00107C  6E07               	movwf	(___flge@ff2+2)^0,c
  2490   00107E  0E42               	movlw	66
  2491   001080  6E08               	movwf	(___flge@ff2+3)^0,c
  2492   001082  ECAC  F021         	call	___flge	;wreg free
  2493   001086  B0D8               	btfsc	status,0,c
  2494   001088  EF48  F008         	goto	u3951
  2495   00108C  EF4A  F008         	goto	u3950
  2496   001090                     u3951:
  2497   001090  EFB5  F008         	goto	l3805
  2498   001094                     u3950:
  2499   001094  0E00               	movlw	0
  2500   001096  6E01               	movwf	___flge@ff1^0,c
  2501   001098  0E00               	movlw	0
  2502   00109A  6E02               	movwf	(___flge@ff1+1)^0,c
  2503   00109C  0E48               	movlw	72
  2504   00109E  6E03               	movwf	(___flge@ff1+2)^0,c
  2505   0010A0  0E42               	movlw	66
  2506   0010A2  6E04               	movwf	(___flge@ff1+3)^0,c
  2507   0010A4  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2508   0010A8  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2509   0010AC  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2510   0010B0  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2511   0010B4  ECAC  F021         	call	___flge	;wreg free
  2512   0010B8  B0D8               	btfsc	status,0,c
  2513   0010BA  EF61  F008         	goto	u3961
  2514   0010BE  EF63  F008         	goto	u3960
  2515   0010C2                     u3961:
  2516   0010C2  EFB5  F008         	goto	l3805
  2517   0010C6                     u3960:
  2518   0010C6  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2519   0010CA  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2520   0010CE  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2521   0010D2  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2522   0010D6  0E00               	movlw	0
  2523   0010D8  6E05               	movwf	___flge@ff2^0,c
  2524   0010DA  0E00               	movlw	0
  2525   0010DC  6E06               	movwf	(___flge@ff2+1)^0,c
  2526   0010DE  0E64               	movlw	100
  2527   0010E0  6E07               	movwf	(___flge@ff2+2)^0,c
  2528   0010E2  0E42               	movlw	66
  2529   0010E4  6E08               	movwf	(___flge@ff2+3)^0,c
  2530   0010E6  ECAC  F021         	call	___flge	;wreg free
  2531   0010EA  B0D8               	btfsc	status,0,c
  2532   0010EC  EF7A  F008         	goto	u3971
  2533   0010F0  EF7C  F008         	goto	u3970
  2534   0010F4                     u3971:
  2535   0010F4  EFB5  F008         	goto	l3805
  2536   0010F8                     u3970:
  2537   0010F8  0E00               	movlw	0
  2538   0010FA  6E01               	movwf	___flge@ff1^0,c
  2539   0010FC  0E00               	movlw	0
  2540   0010FE  6E02               	movwf	(___flge@ff1+1)^0,c
  2541   001100  0E20               	movlw	32
  2542   001102  6E03               	movwf	(___flge@ff1+2)^0,c
  2543   001104  0E42               	movlw	66
  2544   001106  6E04               	movwf	(___flge@ff1+3)^0,c
  2545   001108  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2546   00110C  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2547   001110  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2548   001114  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2549   001118  ECAC  F021         	call	___flge	;wreg free
  2550   00111C  B0D8               	btfsc	status,0,c
  2551   00111E  EF93  F008         	goto	u3981
  2552   001122  EF95  F008         	goto	u3980
  2553   001126                     u3981:
  2554   001126  EFB5  F008         	goto	l3805
  2555   00112A                     u3980:
  2556   00112A  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2557   00112E  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2558   001132  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2559   001136  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2560   00113A  0E00               	movlw	0
  2561   00113C  6E05               	movwf	___flge@ff2^0,c
  2562   00113E  0E00               	movlw	0
  2563   001140  6E06               	movwf	(___flge@ff2+1)^0,c
  2564   001142  0E38               	movlw	56
  2565   001144  6E07               	movwf	(___flge@ff2+2)^0,c
  2566   001146  0E42               	movlw	66
  2567   001148  6E08               	movwf	(___flge@ff2+3)^0,c
  2568   00114A  ECAC  F021         	call	___flge	;wreg free
  2569   00114E  B0D8               	btfsc	status,0,c
  2570   001150  EFAC  F008         	goto	u3991
  2571   001154  EFAE  F008         	goto	u3990
  2572   001158                     u3991:
  2573   001158  EFB5  F008         	goto	l3805
  2574   00115C                     u3990:
  2575   00115C  0E00               	movlw	0
  2576   00115E  0100               	movlb	0	; () banked
  2577   001160  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2578   001162  0E02               	movlw	2
  2579   001164  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2580   001166  EF18  F00C         	goto	l3883
  2581   00116A                     l3805:
  2582   00116A  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2583   00116E  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2584   001172  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2585   001176  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2586   00117A  0E00               	movlw	0
  2587   00117C  6E05               	movwf	___flge@ff2^0,c
  2588   00117E  0E00               	movlw	0
  2589   001180  6E06               	movwf	(___flge@ff2+1)^0,c
  2590   001182  0E20               	movlw	32
  2591   001184  6E07               	movwf	(___flge@ff2+2)^0,c
  2592   001186  0E41               	movlw	65
  2593   001188  6E08               	movwf	(___flge@ff2+3)^0,c
  2594   00118A  ECAC  F021         	call	___flge	;wreg free
  2595   00118E  B0D8               	btfsc	status,0,c
  2596   001190  EFCC  F008         	goto	u4001
  2597   001194  EFCE  F008         	goto	u4000
  2598   001198                     u4001:
  2599   001198  EF07  F009         	goto	l3813
  2600   00119C                     u4000:
  2601   00119C  0E00               	movlw	0
  2602   00119E  6E01               	movwf	___flge@ff1^0,c
  2603   0011A0  0E00               	movlw	0
  2604   0011A2  6E02               	movwf	(___flge@ff1+1)^0,c
  2605   0011A4  0EF0               	movlw	240
  2606   0011A6  6E03               	movwf	(___flge@ff1+2)^0,c
  2607   0011A8  0E41               	movlw	65
  2608   0011AA  6E04               	movwf	(___flge@ff1+3)^0,c
  2609   0011AC  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2610   0011B0  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2611   0011B4  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2612   0011B8  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2613   0011BC  ECAC  F021         	call	___flge	;wreg free
  2614   0011C0  B0D8               	btfsc	status,0,c
  2615   0011C2  EFE5  F008         	goto	u4011
  2616   0011C6  EFE7  F008         	goto	u4010
  2617   0011CA                     u4011:
  2618   0011CA  EF07  F009         	goto	l3813
  2619   0011CE                     u4010:
  2620   0011CE  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2621   0011D2  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2622   0011D6  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2623   0011DA  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2624   0011DE  0E00               	movlw	0
  2625   0011E0  6E05               	movwf	___flge@ff2^0,c
  2626   0011E2  0E00               	movlw	0
  2627   0011E4  6E06               	movwf	(___flge@ff2+1)^0,c
  2628   0011E6  0E20               	movlw	32
  2629   0011E8  6E07               	movwf	(___flge@ff2+2)^0,c
  2630   0011EA  0E42               	movlw	66
  2631   0011EC  6E08               	movwf	(___flge@ff2+3)^0,c
  2632   0011EE  ECAC  F021         	call	___flge	;wreg free
  2633   0011F2  B0D8               	btfsc	status,0,c
  2634   0011F4  EFFE  F008         	goto	u4021
  2635   0011F8  EF00  F009         	goto	u4020
  2636   0011FC                     u4021:
  2637   0011FC  EF07  F009         	goto	l3813
  2638   001200                     u4020:
  2639   001200  0E00               	movlw	0
  2640   001202  0100               	movlb	0	; () banked
  2641   001204  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2642   001206  0E03               	movlw	3
  2643   001208  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2644   00120A  EF18  F00C         	goto	l3883
  2645   00120E                     l3813:
  2646   00120E  0E00               	movlw	0
  2647   001210  6E01               	movwf	___flge@ff1^0,c
  2648   001212  0E00               	movlw	0
  2649   001214  6E02               	movwf	(___flge@ff1+1)^0,c
  2650   001216  0EA0               	movlw	160
  2651   001218  6E03               	movwf	(___flge@ff1+2)^0,c
  2652   00121A  0E41               	movlw	65
  2653   00121C  6E04               	movwf	(___flge@ff1+3)^0,c
  2654   00121E  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2655   001222  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2656   001226  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2657   00122A  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2658   00122E  ECAC  F021         	call	___flge	;wreg free
  2659   001232  B0D8               	btfsc	status,0,c
  2660   001234  EF1E  F009         	goto	u4031
  2661   001238  EF20  F009         	goto	u4030
  2662   00123C                     u4031:
  2663   00123C  EFA4  F009         	goto	l3827
  2664   001240                     u4030:
  2665   001240  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2666   001244  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2667   001248  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2668   00124C  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2669   001250  0E00               	movlw	0
  2670   001252  6E05               	movwf	___flge@ff2^0,c
  2671   001254  0E00               	movlw	0
  2672   001256  6E06               	movwf	(___flge@ff2+1)^0,c
  2673   001258  0EC8               	movlw	200
  2674   00125A  6E07               	movwf	(___flge@ff2+2)^0,c
  2675   00125C  0E41               	movlw	65
  2676   00125E  6E08               	movwf	(___flge@ff2+3)^0,c
  2677   001260  ECAC  F021         	call	___flge	;wreg free
  2678   001264  B0D8               	btfsc	status,0,c
  2679   001266  EF37  F009         	goto	u4041
  2680   00126A  EF39  F009         	goto	u4040
  2681   00126E                     u4041:
  2682   00126E  EFA4  F009         	goto	l3827
  2683   001272                     u4040:
  2684   001272  0E00               	movlw	0
  2685   001274  6E01               	movwf	___flge@ff1^0,c
  2686   001276  0E00               	movlw	0
  2687   001278  6E02               	movwf	(___flge@ff1+1)^0,c
  2688   00127A  0E82               	movlw	130
  2689   00127C  6E03               	movwf	(___flge@ff1+2)^0,c
  2690   00127E  0E42               	movlw	66
  2691   001280  6E04               	movwf	(___flge@ff1+3)^0,c
  2692   001282  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2693   001286  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2694   00128A  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2695   00128E  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2696   001292  ECAC  F021         	call	___flge	;wreg free
  2697   001296  B0D8               	btfsc	status,0,c
  2698   001298  EF50  F009         	goto	u4051
  2699   00129C  EF52  F009         	goto	u4050
  2700   0012A0                     u4051:
  2701   0012A0  EFA4  F009         	goto	l3827
  2702   0012A4                     u4050:
  2703   0012A4  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2704   0012A8  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2705   0012AC  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2706   0012B0  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2707   0012B4  0E00               	movlw	0
  2708   0012B6  6E05               	movwf	___flge@ff2^0,c
  2709   0012B8  0E00               	movlw	0
  2710   0012BA  6E06               	movwf	(___flge@ff2+1)^0,c
  2711   0012BC  0E8C               	movlw	140
  2712   0012BE  6E07               	movwf	(___flge@ff2+2)^0,c
  2713   0012C0  0E42               	movlw	66
  2714   0012C2  6E08               	movwf	(___flge@ff2+3)^0,c
  2715   0012C4  ECAC  F021         	call	___flge	;wreg free
  2716   0012C8  B0D8               	btfsc	status,0,c
  2717   0012CA  EF69  F009         	goto	u4061
  2718   0012CE  EF6B  F009         	goto	u4060
  2719   0012D2                     u4061:
  2720   0012D2  EFA4  F009         	goto	l3827
  2721   0012D6                     u4060:
  2722   0012D6  0E00               	movlw	0
  2723   0012D8  6E01               	movwf	___flge@ff1^0,c
  2724   0012DA  0E00               	movlw	0
  2725   0012DC  6E02               	movwf	(___flge@ff1+1)^0,c
  2726   0012DE  0E58               	movlw	88
  2727   0012E0  6E03               	movwf	(___flge@ff1+2)^0,c
  2728   0012E2  0E42               	movlw	66
  2729   0012E4  6E04               	movwf	(___flge@ff1+3)^0,c
  2730   0012E6  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2731   0012EA  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2732   0012EE  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2733   0012F2  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2734   0012F6  ECAC  F021         	call	___flge	;wreg free
  2735   0012FA  B0D8               	btfsc	status,0,c
  2736   0012FC  EF82  F009         	goto	u4071
  2737   001300  EF84  F009         	goto	u4070
  2738   001304                     u4071:
  2739   001304  EFA4  F009         	goto	l3827
  2740   001308                     u4070:
  2741   001308  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2742   00130C  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2743   001310  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2744   001314  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2745   001318  0E00               	movlw	0
  2746   00131A  6E05               	movwf	___flge@ff2^0,c
  2747   00131C  0E00               	movlw	0
  2748   00131E  6E06               	movwf	(___flge@ff2+1)^0,c
  2749   001320  0E64               	movlw	100
  2750   001322  6E07               	movwf	(___flge@ff2+2)^0,c
  2751   001324  0E42               	movlw	66
  2752   001326  6E08               	movwf	(___flge@ff2+3)^0,c
  2753   001328  ECAC  F021         	call	___flge	;wreg free
  2754   00132C  B0D8               	btfsc	status,0,c
  2755   00132E  EF9B  F009         	goto	u4081
  2756   001332  EF9D  F009         	goto	u4080
  2757   001336                     u4081:
  2758   001336  EFA4  F009         	goto	l3827
  2759   00133A                     u4080:
  2760   00133A  0E00               	movlw	0
  2761   00133C  0100               	movlb	0	; () banked
  2762   00133E  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2763   001340  0E04               	movlw	4
  2764   001342  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2765   001344  EF18  F00C         	goto	l3883
  2766   001348                     l3827:
  2767   001348  0E00               	movlw	0
  2768   00134A  6E01               	movwf	___flge@ff1^0,c
  2769   00134C  0E00               	movlw	0
  2770   00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  2771   001350  0E50               	movlw	80
  2772   001352  6E03               	movwf	(___flge@ff1+2)^0,c
  2773   001354  0E41               	movlw	65
  2774   001356  6E04               	movwf	(___flge@ff1+3)^0,c
  2775   001358  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2776   00135C  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2777   001360  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2778   001364  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2779   001368  ECAC  F021         	call	___flge	;wreg free
  2780   00136C  B0D8               	btfsc	status,0,c
  2781   00136E  EFBB  F009         	goto	u4091
  2782   001372  EFBD  F009         	goto	u4090
  2783   001376                     u4091:
  2784   001376  EF41  F00A         	goto	l3841
  2785   00137A                     u4090:
  2786   00137A  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2787   00137E  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2788   001382  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2789   001386  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2790   00138A  0E00               	movlw	0
  2791   00138C  6E05               	movwf	___flge@ff2^0,c
  2792   00138E  0E00               	movlw	0
  2793   001390  6E06               	movwf	(___flge@ff2+1)^0,c
  2794   001392  0E90               	movlw	144
  2795   001394  6E07               	movwf	(___flge@ff2+2)^0,c
  2796   001396  0E41               	movlw	65
  2797   001398  6E08               	movwf	(___flge@ff2+3)^0,c
  2798   00139A  ECAC  F021         	call	___flge	;wreg free
  2799   00139E  B0D8               	btfsc	status,0,c
  2800   0013A0  EFD4  F009         	goto	u4101
  2801   0013A4  EFD6  F009         	goto	u4100
  2802   0013A8                     u4101:
  2803   0013A8  EF41  F00A         	goto	l3841
  2804   0013AC                     u4100:
  2805   0013AC  0E00               	movlw	0
  2806   0013AE  6E01               	movwf	___flge@ff1^0,c
  2807   0013B0  0E00               	movlw	0
  2808   0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  2809   0013B4  0E5C               	movlw	92
  2810   0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  2811   0013B8  0E42               	movlw	66
  2812   0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  2813   0013BC  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2814   0013C0  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2815   0013C4  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2816   0013C8  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2817   0013CC  ECAC  F021         	call	___flge	;wreg free
  2818   0013D0  B0D8               	btfsc	status,0,c
  2819   0013D2  EFED  F009         	goto	u4111
  2820   0013D6  EFEF  F009         	goto	u4110
  2821   0013DA                     u4111:
  2822   0013DA  EF41  F00A         	goto	l3841
  2823   0013DE                     u4110:
  2824   0013DE  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2825   0013E2  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2826   0013E6  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2827   0013EA  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2828   0013EE  0E00               	movlw	0
  2829   0013F0  6E05               	movwf	___flge@ff2^0,c
  2830   0013F2  0E00               	movlw	0
  2831   0013F4  6E06               	movwf	(___flge@ff2+1)^0,c
  2832   0013F6  0E70               	movlw	112
  2833   0013F8  6E07               	movwf	(___flge@ff2+2)^0,c
  2834   0013FA  0E42               	movlw	66
  2835   0013FC  6E08               	movwf	(___flge@ff2+3)^0,c
  2836   0013FE  ECAC  F021         	call	___flge	;wreg free
  2837   001402  B0D8               	btfsc	status,0,c
  2838   001404  EF06  F00A         	goto	u4121
  2839   001408  EF08  F00A         	goto	u4120
  2840   00140C                     u4121:
  2841   00140C  EF41  F00A         	goto	l3841
  2842   001410                     u4120:
  2843   001410  0E00               	movlw	0
  2844   001412  6E01               	movwf	___flge@ff1^0,c
  2845   001414  0E00               	movlw	0
  2846   001416  6E02               	movwf	(___flge@ff1+1)^0,c
  2847   001418  0E48               	movlw	72
  2848   00141A  6E03               	movwf	(___flge@ff1+2)^0,c
  2849   00141C  0E42               	movlw	66
  2850   00141E  6E04               	movwf	(___flge@ff1+3)^0,c
  2851   001420  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2852   001424  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2853   001428  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2854   00142C  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2855   001430  ECAC  F021         	call	___flge	;wreg free
  2856   001434  B0D8               	btfsc	status,0,c
  2857   001436  EF1F  F00A         	goto	u4131
  2858   00143A  EF21  F00A         	goto	u4130
  2859   00143E                     u4131:
  2860   00143E  EF41  F00A         	goto	l3841
  2861   001442                     u4130:
  2862   001442  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2863   001446  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2864   00144A  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2865   00144E  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2866   001452  0E00               	movlw	0
  2867   001454  6E05               	movwf	___flge@ff2^0,c
  2868   001456  0E00               	movlw	0
  2869   001458  6E06               	movwf	(___flge@ff2+1)^0,c
  2870   00145A  0E58               	movlw	88
  2871   00145C  6E07               	movwf	(___flge@ff2+2)^0,c
  2872   00145E  0E42               	movlw	66
  2873   001460  6E08               	movwf	(___flge@ff2+3)^0,c
  2874   001462  ECAC  F021         	call	___flge	;wreg free
  2875   001466  B0D8               	btfsc	status,0,c
  2876   001468  EF38  F00A         	goto	u4141
  2877   00146C  EF3A  F00A         	goto	u4140
  2878   001470                     u4141:
  2879   001470  EF41  F00A         	goto	l3841
  2880   001474                     u4140:
  2881   001474  0E00               	movlw	0
  2882   001476  0100               	movlb	0	; () banked
  2883   001478  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2884   00147A  0E05               	movlw	5
  2885   00147C  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2886   00147E  EF18  F00C         	goto	l3883
  2887   001482                     l3841:
  2888   001482  0E00               	movlw	0
  2889   001484  6E01               	movwf	___flge@ff1^0,c
  2890   001486  0E00               	movlw	0
  2891   001488  6E02               	movwf	(___flge@ff1+1)^0,c
  2892   00148A  0EA0               	movlw	160
  2893   00148C  6E03               	movwf	(___flge@ff1+2)^0,c
  2894   00148E  0E40               	movlw	64
  2895   001490  6E04               	movwf	(___flge@ff1+3)^0,c
  2896   001492  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2897   001496  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2898   00149A  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2899   00149E  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2900   0014A2  ECAC  F021         	call	___flge	;wreg free
  2901   0014A6  B0D8               	btfsc	status,0,c
  2902   0014A8  EF58  F00A         	goto	u4151
  2903   0014AC  EF5A  F00A         	goto	u4150
  2904   0014B0                     u4151:
  2905   0014B0  EFDE  F00A         	goto	l3855
  2906   0014B4                     u4150:
  2907   0014B4  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2908   0014B8  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2909   0014BC  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2910   0014C0  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2911   0014C4  0E00               	movlw	0
  2912   0014C6  6E05               	movwf	___flge@ff2^0,c
  2913   0014C8  0E00               	movlw	0
  2914   0014CA  6E06               	movwf	(___flge@ff2+1)^0,c
  2915   0014CC  0E20               	movlw	32
  2916   0014CE  6E07               	movwf	(___flge@ff2+2)^0,c
  2917   0014D0  0E41               	movlw	65
  2918   0014D2  6E08               	movwf	(___flge@ff2+3)^0,c
  2919   0014D4  ECAC  F021         	call	___flge	;wreg free
  2920   0014D8  B0D8               	btfsc	status,0,c
  2921   0014DA  EF71  F00A         	goto	u4161
  2922   0014DE  EF73  F00A         	goto	u4160
  2923   0014E2                     u4161:
  2924   0014E2  EFDE  F00A         	goto	l3855
  2925   0014E6                     u4160:
  2926   0014E6  0E00               	movlw	0
  2927   0014E8  6E01               	movwf	___flge@ff1^0,c
  2928   0014EA  0E00               	movlw	0
  2929   0014EC  6E02               	movwf	(___flge@ff1+1)^0,c
  2930   0014EE  0E8C               	movlw	140
  2931   0014F0  6E03               	movwf	(___flge@ff1+2)^0,c
  2932   0014F2  0E42               	movlw	66
  2933   0014F4  6E04               	movwf	(___flge@ff1+3)^0,c
  2934   0014F6  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2935   0014FA  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2936   0014FE  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2937   001502  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2938   001506  ECAC  F021         	call	___flge	;wreg free
  2939   00150A  B0D8               	btfsc	status,0,c
  2940   00150C  EF8A  F00A         	goto	u4171
  2941   001510  EF8C  F00A         	goto	u4170
  2942   001514                     u4171:
  2943   001514  EFDE  F00A         	goto	l3855
  2944   001518                     u4170:
  2945   001518  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2946   00151C  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2947   001520  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2948   001524  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2949   001528  0E00               	movlw	0
  2950   00152A  6E05               	movwf	___flge@ff2^0,c
  2951   00152C  0E00               	movlw	0
  2952   00152E  6E06               	movwf	(___flge@ff2+1)^0,c
  2953   001530  0E96               	movlw	150
  2954   001532  6E07               	movwf	(___flge@ff2+2)^0,c
  2955   001534  0E42               	movlw	66
  2956   001536  6E08               	movwf	(___flge@ff2+3)^0,c
  2957   001538  ECAC  F021         	call	___flge	;wreg free
  2958   00153C  B0D8               	btfsc	status,0,c
  2959   00153E  EFA3  F00A         	goto	u4181
  2960   001542  EFA5  F00A         	goto	u4180
  2961   001546                     u4181:
  2962   001546  EFDE  F00A         	goto	l3855
  2963   00154A                     u4180:
  2964   00154A  0E00               	movlw	0
  2965   00154C  6E01               	movwf	___flge@ff1^0,c
  2966   00154E  0E00               	movlw	0
  2967   001550  6E02               	movwf	(___flge@ff1+1)^0,c
  2968   001552  0E78               	movlw	120
  2969   001554  6E03               	movwf	(___flge@ff1+2)^0,c
  2970   001556  0E42               	movlw	66
  2971   001558  6E04               	movwf	(___flge@ff1+3)^0,c
  2972   00155A  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2973   00155E  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2974   001562  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2975   001566  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2976   00156A  ECAC  F021         	call	___flge	;wreg free
  2977   00156E  B0D8               	btfsc	status,0,c
  2978   001570  EFBC  F00A         	goto	u4191
  2979   001574  EFBE  F00A         	goto	u4190
  2980   001578                     u4191:
  2981   001578  EFDE  F00A         	goto	l3855
  2982   00157C                     u4190:
  2983   00157C  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2984   001580  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2985   001584  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2986   001588  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2987   00158C  0E00               	movlw	0
  2988   00158E  6E05               	movwf	___flge@ff2^0,c
  2989   001590  0E00               	movlw	0
  2990   001592  6E06               	movwf	(___flge@ff2+1)^0,c
  2991   001594  0E86               	movlw	134
  2992   001596  6E07               	movwf	(___flge@ff2+2)^0,c
  2993   001598  0E42               	movlw	66
  2994   00159A  6E08               	movwf	(___flge@ff2+3)^0,c
  2995   00159C  ECAC  F021         	call	___flge	;wreg free
  2996   0015A0  B0D8               	btfsc	status,0,c
  2997   0015A2  EFD5  F00A         	goto	u4201
  2998   0015A6  EFD7  F00A         	goto	u4200
  2999   0015AA                     u4201:
  3000   0015AA  EFDE  F00A         	goto	l3855
  3001   0015AE                     u4200:
  3002   0015AE  0E00               	movlw	0
  3003   0015B0  0100               	movlb	0	; () banked
  3004   0015B2  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3005   0015B4  0E06               	movlw	6
  3006   0015B6  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  3007   0015B8  EF18  F00C         	goto	l3883
  3008   0015BC                     l3855:
  3009   0015BC  0E00               	movlw	0
  3010   0015BE  6E01               	movwf	___flge@ff1^0,c
  3011   0015C0  0E00               	movlw	0
  3012   0015C2  6E02               	movwf	(___flge@ff1+1)^0,c
  3013   0015C4  0E94               	movlw	148
  3014   0015C6  6E03               	movwf	(___flge@ff1+2)^0,c
  3015   0015C8  0E42               	movlw	66
  3016   0015CA  6E04               	movwf	(___flge@ff1+3)^0,c
  3017   0015CC  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  3018   0015D0  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3019   0015D4  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3020   0015D8  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3021   0015DC  ECAC  F021         	call	___flge	;wreg free
  3022   0015E0  B0D8               	btfsc	status,0,c
  3023   0015E2  EFF5  F00A         	goto	u4211
  3024   0015E6  EFF7  F00A         	goto	u4210
  3025   0015EA                     u4211:
  3026   0015EA  EF7B  F00B         	goto	l3869
  3027   0015EE                     u4210:
  3028   0015EE  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  3029   0015F2  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3030   0015F6  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3031   0015FA  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3032   0015FE  0E00               	movlw	0
  3033   001600  6E05               	movwf	___flge@ff2^0,c
  3034   001602  0E00               	movlw	0
  3035   001604  6E06               	movwf	(___flge@ff2+1)^0,c
  3036   001606  0EAA               	movlw	170
  3037   001608  6E07               	movwf	(___flge@ff2+2)^0,c
  3038   00160A  0E42               	movlw	66
  3039   00160C  6E08               	movwf	(___flge@ff2+3)^0,c
  3040   00160E  ECAC  F021         	call	___flge	;wreg free
  3041   001612  B0D8               	btfsc	status,0,c
  3042   001614  EF0E  F00B         	goto	u4221
  3043   001618  EF10  F00B         	goto	u4220
  3044   00161C                     u4221:
  3045   00161C  EF7B  F00B         	goto	l3869
  3046   001620                     u4220:
  3047   001620  0E00               	movlw	0
  3048   001622  6E01               	movwf	___flge@ff1^0,c
  3049   001624  0E00               	movlw	0
  3050   001626  6E02               	movwf	(___flge@ff1+1)^0,c
  3051   001628  0EE0               	movlw	224
  3052   00162A  6E03               	movwf	(___flge@ff1+2)^0,c
  3053   00162C  0E41               	movlw	65
  3054   00162E  6E04               	movwf	(___flge@ff1+3)^0,c
  3055   001630  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  3056   001634  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3057   001638  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3058   00163C  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3059   001640  ECAC  F021         	call	___flge	;wreg free
  3060   001644  B0D8               	btfsc	status,0,c
  3061   001646  EF27  F00B         	goto	u4231
  3062   00164A  EF29  F00B         	goto	u4230
  3063   00164E                     u4231:
  3064   00164E  EF7B  F00B         	goto	l3869
  3065   001652                     u4230:
  3066   001652  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  3067   001656  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3068   00165A  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3069   00165E  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3070   001662  0E00               	movlw	0
  3071   001664  6E05               	movwf	___flge@ff2^0,c
  3072   001666  0E00               	movlw	0
  3073   001668  6E06               	movwf	(___flge@ff2+1)^0,c
  3074   00166A  0E04               	movlw	4
  3075   00166C  6E07               	movwf	(___flge@ff2+2)^0,c
  3076   00166E  0E42               	movlw	66
  3077   001670  6E08               	movwf	(___flge@ff2+3)^0,c
  3078   001672  ECAC  F021         	call	___flge	;wreg free
  3079   001676  B0D8               	btfsc	status,0,c
  3080   001678  EF40  F00B         	goto	u4241
  3081   00167C  EF42  F00B         	goto	u4240
  3082   001680                     u4241:
  3083   001680  EF7B  F00B         	goto	l3869
  3084   001684                     u4240:
  3085   001684  0E00               	movlw	0
  3086   001686  6E01               	movwf	___flge@ff1^0,c
  3087   001688  0E00               	movlw	0
  3088   00168A  6E02               	movwf	(___flge@ff1+1)^0,c
  3089   00168C  0E14               	movlw	20
  3090   00168E  6E03               	movwf	(___flge@ff1+2)^0,c
  3091   001690  0E42               	movlw	66
  3092   001692  6E04               	movwf	(___flge@ff1+3)^0,c
  3093   001694  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  3094   001698  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3095   00169C  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3096   0016A0  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3097   0016A4  ECAC  F021         	call	___flge	;wreg free
  3098   0016A8  B0D8               	btfsc	status,0,c
  3099   0016AA  EF59  F00B         	goto	u4251
  3100   0016AE  EF5B  F00B         	goto	u4250
  3101   0016B2                     u4251:
  3102   0016B2  EF7B  F00B         	goto	l3869
  3103   0016B6                     u4250:
  3104   0016B6  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  3105   0016BA  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3106   0016BE  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3107   0016C2  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3108   0016C6  0E00               	movlw	0
  3109   0016C8  6E05               	movwf	___flge@ff2^0,c
  3110   0016CA  0E00               	movlw	0
  3111   0016CC  6E06               	movwf	(___flge@ff2+1)^0,c
  3112   0016CE  0E28               	movlw	40
  3113   0016D0  6E07               	movwf	(___flge@ff2+2)^0,c
  3114   0016D2  0E42               	movlw	66
  3115   0016D4  6E08               	movwf	(___flge@ff2+3)^0,c
  3116   0016D6  ECAC  F021         	call	___flge	;wreg free
  3117   0016DA  B0D8               	btfsc	status,0,c
  3118   0016DC  EF72  F00B         	goto	u4261
  3119   0016E0  EF74  F00B         	goto	u4260
  3120   0016E4                     u4261:
  3121   0016E4  EF7B  F00B         	goto	l3869
  3122   0016E8                     u4260:
  3123   0016E8  0E00               	movlw	0
  3124   0016EA  0100               	movlb	0	; () banked
  3125   0016EC  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3126   0016EE  0E07               	movlw	7
  3127   0016F0  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  3128   0016F2  EF18  F00C         	goto	l3883
  3129   0016F6                     l3869:
  3130   0016F6  0E00               	movlw	0
  3131   0016F8  6E01               	movwf	___flge@ff1^0,c
  3132   0016FA  0E00               	movlw	0
  3133   0016FC  6E02               	movwf	(___flge@ff1+1)^0,c
  3134   0016FE  0EB0               	movlw	176
  3135   001700  6E03               	movwf	(___flge@ff1+2)^0,c
  3136   001702  0E41               	movlw	65
  3137   001704  6E04               	movwf	(___flge@ff1+3)^0,c
  3138   001706  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  3139   00170A  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3140   00170E  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3141   001712  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3142   001716  ECAC  F021         	call	___flge	;wreg free
  3143   00171A  B0D8               	btfsc	status,0,c
  3144   00171C  EF92  F00B         	goto	u4271
  3145   001720  EF94  F00B         	goto	u4270
  3146   001724                     u4271:
  3147   001724  EF18  F00C         	goto	l99
  3148   001728                     u4270:
  3149   001728  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  3150   00172C  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3151   001730  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3152   001734  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3153   001738  0E00               	movlw	0
  3154   00173A  6E05               	movwf	___flge@ff2^0,c
  3155   00173C  0E00               	movlw	0
  3156   00173E  6E06               	movwf	(___flge@ff2+1)^0,c
  3157   001740  0ED8               	movlw	216
  3158   001742  6E07               	movwf	(___flge@ff2+2)^0,c
  3159   001744  0E41               	movlw	65
  3160   001746  6E08               	movwf	(___flge@ff2+3)^0,c
  3161   001748  ECAC  F021         	call	___flge	;wreg free
  3162   00174C  B0D8               	btfsc	status,0,c
  3163   00174E  EFAB  F00B         	goto	u4281
  3164   001752  EFAD  F00B         	goto	u4280
  3165   001756                     u4281:
  3166   001756  EF18  F00C         	goto	l99
  3167   00175A                     u4280:
  3168   00175A  0E00               	movlw	0
  3169   00175C  6E01               	movwf	___flge@ff1^0,c
  3170   00175E  0E00               	movlw	0
  3171   001760  6E02               	movwf	(___flge@ff1+1)^0,c
  3172   001762  0E40               	movlw	64
  3173   001764  6E03               	movwf	(___flge@ff1+2)^0,c
  3174   001766  0E42               	movlw	66
  3175   001768  6E04               	movwf	(___flge@ff1+3)^0,c
  3176   00176A  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  3177   00176E  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3178   001772  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3179   001776  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3180   00177A  ECAC  F021         	call	___flge	;wreg free
  3181   00177E  B0D8               	btfsc	status,0,c
  3182   001780  EFC4  F00B         	goto	u4291
  3183   001784  EFC6  F00B         	goto	u4290
  3184   001788                     u4291:
  3185   001788  EF18  F00C         	goto	l99
  3186   00178C                     u4290:
  3187   00178C  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  3188   001790  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3189   001794  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3190   001798  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3191   00179C  0E00               	movlw	0
  3192   00179E  6E05               	movwf	___flge@ff2^0,c
  3193   0017A0  0E00               	movlw	0
  3194   0017A2  6E06               	movwf	(___flge@ff2+1)^0,c
  3195   0017A4  0E54               	movlw	84
  3196   0017A6  6E07               	movwf	(___flge@ff2+2)^0,c
  3197   0017A8  0E42               	movlw	66
  3198   0017AA  6E08               	movwf	(___flge@ff2+3)^0,c
  3199   0017AC  ECAC  F021         	call	___flge	;wreg free
  3200   0017B0  B0D8               	btfsc	status,0,c
  3201   0017B2  EFDD  F00B         	goto	u4301
  3202   0017B6  EFDF  F00B         	goto	u4300
  3203   0017BA                     u4301:
  3204   0017BA  EF18  F00C         	goto	l99
  3205   0017BE                     u4300:
  3206   0017BE  0E00               	movlw	0
  3207   0017C0  6E01               	movwf	___flge@ff1^0,c
  3208   0017C2  0E00               	movlw	0
  3209   0017C4  6E02               	movwf	(___flge@ff1+1)^0,c
  3210   0017C6  0E34               	movlw	52
  3211   0017C8  6E03               	movwf	(___flge@ff1+2)^0,c
  3212   0017CA  0E42               	movlw	66
  3213   0017CC  6E04               	movwf	(___flge@ff1+3)^0,c
  3214   0017CE  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  3215   0017D2  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3216   0017D6  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3217   0017DA  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3218   0017DE  ECAC  F021         	call	___flge	;wreg free
  3219   0017E2  B0D8               	btfsc	status,0,c
  3220   0017E4  EFF6  F00B         	goto	u4311
  3221   0017E8  EFF8  F00B         	goto	u4310
  3222   0017EC                     u4311:
  3223   0017EC  EF18  F00C         	goto	l99
  3224   0017F0                     u4310:
  3225   0017F0  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  3226   0017F4  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3227   0017F8  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3228   0017FC  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3229   001800  0E00               	movlw	0
  3230   001802  6E05               	movwf	___flge@ff2^0,c
  3231   001804  0E00               	movlw	0
  3232   001806  6E06               	movwf	(___flge@ff2+1)^0,c
  3233   001808  0E48               	movlw	72
  3234   00180A  6E07               	movwf	(___flge@ff2+2)^0,c
  3235   00180C  0E42               	movlw	66
  3236   00180E  6E08               	movwf	(___flge@ff2+3)^0,c
  3237   001810  ECAC  F021         	call	___flge	;wreg free
  3238   001814  B0D8               	btfsc	status,0,c
  3239   001816  EF0F  F00C         	goto	u4321
  3240   00181A  EF11  F00C         	goto	u4320
  3241   00181E                     u4321:
  3242   00181E  EF18  F00C         	goto	l99
  3243   001822                     u4320:
  3244   001822  0E00               	movlw	0
  3245   001824  0100               	movlb	0	; () banked
  3246   001826  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3247   001828  0E08               	movlw	8
  3248   00182A  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  3249   00182C  EF18  F00C         	goto	l3883
  3250   001830                     l99:
  3251   001830                     l3883:
  3252                           
  3253                           ;color.c: 213:     return card_color;
  3254   001830  C0C5  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  3255   001834  C0C6  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  3256   001838  0012               	return		;funcret
  3257   00183A                     __end_of_color_cardCheck:
  3258                           	callstack 0
  3259                           
  3260 ;; *************** function _color_read_Red *****************
  3261 ;; Defined at:
  3262 ;;		line 46 in file "color.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  tmp             2    9[COMRAM] unsigned int 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  2    4[COMRAM] unsigned int 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;Total ram usage:        7 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 2
  3283 ;; This function calls:
  3284 ;;		_I2C_2_Master_Read
  3285 ;;		_I2C_2_Master_RepStart
  3286 ;;		_I2C_2_Master_Start
  3287 ;;		_I2C_2_Master_Stop
  3288 ;;		_I2C_2_Master_Write
  3289 ;; This function is called by:
  3290 ;;		_color_cardCheck
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text7
  3295   004840                     __ptext7:
  3296                           	callstack 0
  3297   004840                     _color_read_Red:
  3298                           	callstack 26
  3299   004840                     
  3300                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  3301   004840  ECAD  F025         	call	_I2C_2_Master_Start	;wreg free
  3302                           
  3303                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  3304   004844  0E52               	movlw	82
  3305   004846  ECA2  F025         	call	_I2C_2_Master_Write
  3306                           
  3307                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  3308   00484A  0EB6               	movlw	182
  3309   00484C  ECA2  F025         	call	_I2C_2_Master_Write
  3310                           
  3311                           ;color.c: 52:  I2C_2_Master_RepStart();
  3312   004850  ECB2  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3313                           
  3314                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  3315   004854  0E53               	movlw	83
  3316   004856  ECA2  F025         	call	_I2C_2_Master_Write
  3317                           
  3318                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  3319   00485A  0E01               	movlw	1
  3320   00485C  ECE3  F024         	call	_I2C_2_Master_Read
  3321   004860  6E07               	movwf	??_color_read_Red^0,c
  3322   004862  5007               	movf	??_color_read_Red^0,w,c
  3323   004864  6E0A               	movwf	color_read_Red@tmp^0,c
  3324   004866  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3325                           
  3326                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3327   004868  0E00               	movlw	0
  3328   00486A  ECE3  F024         	call	_I2C_2_Master_Read
  3329   00486E  6E07               	movwf	??_color_read_Red^0,c
  3330   004870  5007               	movf	??_color_read_Red^0,w,c
  3331   004872  6E09               	movwf	(??_color_read_Red+2)^0,c
  3332   004874  6A08               	clrf	(??_color_read_Red+1)^0,c
  3333   004876  500A               	movf	color_read_Red@tmp^0,w,c
  3334   004878  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3335   00487A  6E0A               	movwf	color_read_Red@tmp^0,c
  3336   00487C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3337   00487E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3338   004880  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3339                           
  3340                           ;color.c: 56:  I2C_2_Master_Stop();
  3341   004882  ECA8  F025         	call	_I2C_2_Master_Stop	;wreg free
  3342   004886                     
  3343                           ;color.c: 57:  return tmp;
  3344   004886  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3345   00488A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3346   00488E  0012               	return		;funcret
  3347   004890                     __end_of_color_read_Red:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _color_read_Green *****************
  3351 ;; Defined at:
  3352 ;;		line 60 in file "color.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  tmp             2    9[COMRAM] unsigned int 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2    4[COMRAM] unsigned int 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;Total ram usage:        7 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 2
  3373 ;; This function calls:
  3374 ;;		_I2C_2_Master_Read
  3375 ;;		_I2C_2_Master_RepStart
  3376 ;;		_I2C_2_Master_Start
  3377 ;;		_I2C_2_Master_Stop
  3378 ;;		_I2C_2_Master_Write
  3379 ;; This function is called by:
  3380 ;;		_color_cardCheck
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text8
  3385   004890                     __ptext8:
  3386                           	callstack 0
  3387   004890                     _color_read_Green:
  3388                           	callstack 26
  3389   004890                     
  3390                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  3391   004890  ECAD  F025         	call	_I2C_2_Master_Start	;wreg free
  3392                           
  3393                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  3394   004894  0E52               	movlw	82
  3395   004896  ECA2  F025         	call	_I2C_2_Master_Write
  3396                           
  3397                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  3398   00489A  0EB8               	movlw	184
  3399   00489C  ECA2  F025         	call	_I2C_2_Master_Write
  3400                           
  3401                           ;color.c: 66:  I2C_2_Master_RepStart();
  3402   0048A0  ECB2  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3403                           
  3404                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  3405   0048A4  0E53               	movlw	83
  3406   0048A6  ECA2  F025         	call	_I2C_2_Master_Write
  3407                           
  3408                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  3409   0048AA  0E01               	movlw	1
  3410   0048AC  ECE3  F024         	call	_I2C_2_Master_Read
  3411   0048B0  6E07               	movwf	??_color_read_Green^0,c
  3412   0048B2  5007               	movf	??_color_read_Green^0,w,c
  3413   0048B4  6E0A               	movwf	color_read_Green@tmp^0,c
  3414   0048B6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3415                           
  3416                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3417   0048B8  0E00               	movlw	0
  3418   0048BA  ECE3  F024         	call	_I2C_2_Master_Read
  3419   0048BE  6E07               	movwf	??_color_read_Green^0,c
  3420   0048C0  5007               	movf	??_color_read_Green^0,w,c
  3421   0048C2  6E09               	movwf	(??_color_read_Green+2)^0,c
  3422   0048C4  6A08               	clrf	(??_color_read_Green+1)^0,c
  3423   0048C6  500A               	movf	color_read_Green@tmp^0,w,c
  3424   0048C8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3425   0048CA  6E0A               	movwf	color_read_Green@tmp^0,c
  3426   0048CC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3427   0048CE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3428   0048D0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3429                           
  3430                           ;color.c: 70:  I2C_2_Master_Stop();
  3431   0048D2  ECA8  F025         	call	_I2C_2_Master_Stop	;wreg free
  3432   0048D6                     
  3433                           ;color.c: 71:  return tmp;
  3434   0048D6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3435   0048DA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3436   0048DE  0012               	return		;funcret
  3437   0048E0                     __end_of_color_read_Green:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _color_read_Clear *****************
  3441 ;; Defined at:
  3442 ;;		line 88 in file "color.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  tmp             2    9[COMRAM] unsigned int 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2    4[COMRAM] unsigned int 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;Total ram usage:        7 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 2
  3463 ;; This function calls:
  3464 ;;		_I2C_2_Master_Read
  3465 ;;		_I2C_2_Master_RepStart
  3466 ;;		_I2C_2_Master_Start
  3467 ;;		_I2C_2_Master_Stop
  3468 ;;		_I2C_2_Master_Write
  3469 ;; This function is called by:
  3470 ;;		_color_cardCheck
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text9
  3475   0048E0                     __ptext9:
  3476                           	callstack 0
  3477   0048E0                     _color_read_Clear:
  3478                           	callstack 26
  3479   0048E0                     
  3480                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3481   0048E0  ECAD  F025         	call	_I2C_2_Master_Start	;wreg free
  3482                           
  3483                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3484   0048E4  0E52               	movlw	82
  3485   0048E6  ECA2  F025         	call	_I2C_2_Master_Write
  3486                           
  3487                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  3488   0048EA  0EB4               	movlw	180
  3489   0048EC  ECA2  F025         	call	_I2C_2_Master_Write
  3490                           
  3491                           ;color.c: 96:  I2C_2_Master_RepStart();
  3492   0048F0  ECB2  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3493                           
  3494                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3495   0048F4  0E53               	movlw	83
  3496   0048F6  ECA2  F025         	call	_I2C_2_Master_Write
  3497                           
  3498                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3499   0048FA  0E01               	movlw	1
  3500   0048FC  ECE3  F024         	call	_I2C_2_Master_Read
  3501   004900  6E07               	movwf	??_color_read_Clear^0,c
  3502   004902  5007               	movf	??_color_read_Clear^0,w,c
  3503   004904  6E0A               	movwf	color_read_Clear@tmp^0,c
  3504   004906  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3505                           
  3506                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3507   004908  0E00               	movlw	0
  3508   00490A  ECE3  F024         	call	_I2C_2_Master_Read
  3509   00490E  6E07               	movwf	??_color_read_Clear^0,c
  3510   004910  5007               	movf	??_color_read_Clear^0,w,c
  3511   004912  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3512   004914  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3513   004916  500A               	movf	color_read_Clear@tmp^0,w,c
  3514   004918  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3515   00491A  6E0A               	movwf	color_read_Clear@tmp^0,c
  3516   00491C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3517   00491E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3518   004920  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3519                           
  3520                           ;color.c: 100:  I2C_2_Master_Stop();
  3521   004922  ECA8  F025         	call	_I2C_2_Master_Stop	;wreg free
  3522   004926                     
  3523                           ;color.c: 101:  return tmp;
  3524   004926  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3525   00492A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3526   00492E  0012               	return		;funcret
  3527   004930                     __end_of_color_read_Clear:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _color_read_Blue *****************
  3531 ;; Defined at:
  3532 ;;		line 74 in file "color.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  tmp             2    9[COMRAM] unsigned int 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  2    4[COMRAM] unsigned int 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;Total ram usage:        7 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 2
  3553 ;; This function calls:
  3554 ;;		_I2C_2_Master_Read
  3555 ;;		_I2C_2_Master_RepStart
  3556 ;;		_I2C_2_Master_Start
  3557 ;;		_I2C_2_Master_Stop
  3558 ;;		_I2C_2_Master_Write
  3559 ;; This function is called by:
  3560 ;;		_color_cardCheck
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text10
  3565   004930                     __ptext10:
  3566                           	callstack 0
  3567   004930                     _color_read_Blue:
  3568                           	callstack 26
  3569   004930                     
  3570                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  3571   004930  ECAD  F025         	call	_I2C_2_Master_Start	;wreg free
  3572                           
  3573                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  3574   004934  0E52               	movlw	82
  3575   004936  ECA2  F025         	call	_I2C_2_Master_Write
  3576                           
  3577                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  3578   00493A  0EBA               	movlw	186
  3579   00493C  ECA2  F025         	call	_I2C_2_Master_Write
  3580                           
  3581                           ;color.c: 80:  I2C_2_Master_RepStart();
  3582   004940  ECB2  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3583                           
  3584                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3585   004944  0E53               	movlw	83
  3586   004946  ECA2  F025         	call	_I2C_2_Master_Write
  3587                           
  3588                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  3589   00494A  0E01               	movlw	1
  3590   00494C  ECE3  F024         	call	_I2C_2_Master_Read
  3591   004950  6E07               	movwf	??_color_read_Blue^0,c
  3592   004952  5007               	movf	??_color_read_Blue^0,w,c
  3593   004954  6E0A               	movwf	color_read_Blue@tmp^0,c
  3594   004956  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3595                           
  3596                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3597   004958  0E00               	movlw	0
  3598   00495A  ECE3  F024         	call	_I2C_2_Master_Read
  3599   00495E  6E07               	movwf	??_color_read_Blue^0,c
  3600   004960  5007               	movf	??_color_read_Blue^0,w,c
  3601   004962  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3602   004964  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3603   004966  500A               	movf	color_read_Blue@tmp^0,w,c
  3604   004968  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3605   00496A  6E0A               	movwf	color_read_Blue@tmp^0,c
  3606   00496C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3607   00496E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3608   004970  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3609                           
  3610                           ;color.c: 84:  I2C_2_Master_Stop();
  3611   004972  ECA8  F025         	call	_I2C_2_Master_Stop	;wreg free
  3612   004976                     
  3613                           ;color.c: 85:  return tmp;
  3614   004976  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3615   00497A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3616   00497E  0012               	return		;funcret
  3617   004980                     __end_of_color_read_Blue:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _I2C_2_Master_Write *****************
  3621 ;; Defined at:
  3622 ;;		line 45 in file "i2c.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  data_byte       1    wreg     unsigned char 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  data_byte       1    1[COMRAM] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;Total ram usage:        1 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 1
  3643 ;; This function calls:
  3644 ;;		_I2C_2_Master_Idle
  3645 ;; This function is called by:
  3646 ;;		_color_writetoaddr
  3647 ;;		_color_read_Red
  3648 ;;		_color_read_Green
  3649 ;;		_color_read_Blue
  3650 ;;		_color_read_Clear
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text11
  3655   004B44                     __ptext11:
  3656                           	callstack 0
  3657   004B44                     _I2C_2_Master_Write:
  3658                           	callstack 26
  3659                           
  3660                           ;incstack = 0
  3661                           ;I2C_2_Master_Write@data_byte stored from wreg
  3662   004B44  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3663   004B46                     
  3664                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3665   004B46  EC6B  F025         	call	_I2C_2_Master_Idle	;wreg free
  3666   004B4A                     
  3667                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3668   004B4A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3669   004B4E  0012               	return		;funcret
  3670   004B50                     __end_of_I2C_2_Master_Write:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _I2C_2_Master_Stop *****************
  3674 ;; Defined at:
  3675 ;;		line 39 in file "i2c.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 1
  3696 ;; This function calls:
  3697 ;;		_I2C_2_Master_Idle
  3698 ;; This function is called by:
  3699 ;;		_color_writetoaddr
  3700 ;;		_color_read_Red
  3701 ;;		_color_read_Green
  3702 ;;		_color_read_Blue
  3703 ;;		_color_read_Clear
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text12
  3708   004B50                     __ptext12:
  3709                           	callstack 0
  3710   004B50                     _I2C_2_Master_Stop:
  3711                           	callstack 26
  3712   004B50                     
  3713                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3714   004B50  EC6B  F025         	call	_I2C_2_Master_Idle	;wreg free
  3715   004B54                     
  3716                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3717   004B54  010E               	movlb	14	; () banked
  3718   004B56  85DA               	bsf	218,2,b	;volatile
  3719   004B58                     
  3720                           ; BSR set to: 14
  3721   004B58  0012               	return		;funcret
  3722   004B5A                     __end_of_I2C_2_Master_Stop:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _I2C_2_Master_Start *****************
  3726 ;; Defined at:
  3727 ;;		line 27 in file "i2c.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;Total ram usage:        0 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 1
  3748 ;; This function calls:
  3749 ;;		_I2C_2_Master_Idle
  3750 ;; This function is called by:
  3751 ;;		_color_writetoaddr
  3752 ;;		_color_read_Red
  3753 ;;		_color_read_Green
  3754 ;;		_color_read_Blue
  3755 ;;		_color_read_Clear
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text13
  3760   004B5A                     __ptext13:
  3761                           	callstack 0
  3762   004B5A                     _I2C_2_Master_Start:
  3763                           	callstack 26
  3764   004B5A                     
  3765                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3766   004B5A  EC6B  F025         	call	_I2C_2_Master_Idle	;wreg free
  3767   004B5E                     
  3768                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3769   004B5E  010E               	movlb	14	; () banked
  3770   004B60  81DA               	bsf	218,0,b	;volatile
  3771   004B62                     
  3772                           ; BSR set to: 14
  3773   004B62  0012               	return		;funcret
  3774   004B64                     __end_of_I2C_2_Master_Start:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _I2C_2_Master_RepStart *****************
  3778 ;; Defined at:
  3779 ;;		line 33 in file "i2c.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 1
  3800 ;; This function calls:
  3801 ;;		_I2C_2_Master_Idle
  3802 ;; This function is called by:
  3803 ;;		_color_read_Red
  3804 ;;		_color_read_Green
  3805 ;;		_color_read_Blue
  3806 ;;		_color_read_Clear
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text14
  3811   004B64                     __ptext14:
  3812                           	callstack 0
  3813   004B64                     _I2C_2_Master_RepStart:
  3814                           	callstack 26
  3815   004B64                     
  3816                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3817   004B64  EC6B  F025         	call	_I2C_2_Master_Idle	;wreg free
  3818   004B68                     
  3819                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3820   004B68  010E               	movlb	14	; () banked
  3821   004B6A  83DA               	bsf	218,1,b	;volatile
  3822   004B6C                     
  3823                           ; BSR set to: 14
  3824   004B6C  0012               	return		;funcret
  3825   004B6E                     __end_of_I2C_2_Master_RepStart:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _I2C_2_Master_Read *****************
  3829 ;; Defined at:
  3830 ;;		line 51 in file "i2c.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  ack             1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  ack             1    2[COMRAM] unsigned char 
  3835 ;;  tmp             1    3[COMRAM] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      unsigned char 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;Total ram usage:        3 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; Hardware stack levels required when called: 1
  3852 ;; This function calls:
  3853 ;;		_I2C_2_Master_Idle
  3854 ;; This function is called by:
  3855 ;;		_color_read_Red
  3856 ;;		_color_read_Green
  3857 ;;		_color_read_Blue
  3858 ;;		_color_read_Clear
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text15
  3863   0049C6                     __ptext15:
  3864                           	callstack 0
  3865   0049C6                     _I2C_2_Master_Read:
  3866                           	callstack 26
  3867                           
  3868                           ; BSR set to: 14
  3869                           ;incstack = 0
  3870                           ;I2C_2_Master_Read@ack stored from wreg
  3871   0049C6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3872   0049C8                     
  3873                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3874   0049C8  EC6B  F025         	call	_I2C_2_Master_Idle	;wreg free
  3875   0049CC                     
  3876                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3877   0049CC  010E               	movlb	14	; () banked
  3878   0049CE  87DA               	bsf	218,3,b	;volatile
  3879                           
  3880                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3881   0049D0  EC6B  F025         	call	_I2C_2_Master_Idle	;wreg free
  3882   0049D4                     
  3883                           ;i2c.c: 57:   tmp = SSP2BUF;
  3884   0049D4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3885                           
  3886                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3887   0049D8  EC6B  F025         	call	_I2C_2_Master_Idle	;wreg free
  3888   0049DC                     
  3889                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3890   0049DC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3891   0049DE  B4D8               	btfsc	status,2,c
  3892   0049E0  EFF4  F024         	goto	u3591
  3893   0049E4  EFF8  F024         	goto	u3590
  3894   0049E8                     u3591:
  3895   0049E8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3896   0049EA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3897   0049EC  EFF9  F024         	goto	u3608
  3898   0049F0                     u3590:
  3899   0049F0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3900   0049F2                     u3608:
  3901   0049F2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3902   0049F4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3903   0049F6  010E               	movlb	14	; () banked
  3904   0049F8  51DA               	movf	218,w,b	;volatile
  3905   0049FA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3906   0049FC  0BDF               	andlw	-33
  3907   0049FE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3908   004A00  6FDA               	movwf	218,b	;volatile
  3909   004A02                     
  3910                           ; BSR set to: 14
  3911                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3912   004A02  89DA               	bsf	218,4,b	;volatile
  3913   004A04                     
  3914                           ; BSR set to: 14
  3915                           ;i2c.c: 61:   return tmp;
  3916   004A04  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3917   004A06                     
  3918                           ; BSR set to: 14
  3919   004A06  0012               	return		;funcret
  3920   004A08                     __end_of_I2C_2_Master_Read:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function _I2C_2_Master_Idle *****************
  3924 ;; Defined at:
  3925 ;;		line 22 in file "i2c.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;Total ram usage:        1 bytes
  3944 ;; Hardware stack levels used: 1
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_I2C_2_Master_Start
  3949 ;;		_I2C_2_Master_RepStart
  3950 ;;		_I2C_2_Master_Stop
  3951 ;;		_I2C_2_Master_Write
  3952 ;;		_I2C_2_Master_Read
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text16
  3957   004AD6                     __ptext16:
  3958                           	callstack 0
  3959   004AD6                     _I2C_2_Master_Idle:
  3960                           	callstack 26
  3961   004AD6                     l135:
  3962   004AD6  010E               	movlb	14	; () banked
  3963   004AD8  B5D8               	btfsc	216,2,b	;volatile
  3964   004ADA  EF71  F025         	goto	u2951
  3965   004ADE  EF73  F025         	goto	u2950
  3966   004AE2                     u2951:
  3967   004AE2  EF6B  F025         	goto	l135
  3968   004AE6                     u2950:
  3969   004AE6                     
  3970                           ; BSR set to: 14
  3971   004AE6  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3972   004AEA  0E1F               	movlw	31
  3973   004AEC  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3974   004AEE  A4D8               	btfss	status,2,c
  3975   004AF0  EF7C  F025         	goto	u2961
  3976   004AF4  EF7E  F025         	goto	u2960
  3977   004AF8                     u2961:
  3978   004AF8  EF6B  F025         	goto	l135
  3979   004AFC                     u2960:
  3980   004AFC                     
  3981                           ; BSR set to: 14
  3982   004AFC  0012               	return		;funcret
  3983   004AFE                     __end_of_I2C_2_Master_Idle:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function _RGB_to_HSV *****************
  3987 ;; Defined at:
  3988 ;;		line 125 in file "color.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  R               4   10[BANK0 ] float 
  3991 ;;  G               4   14[BANK0 ] float 
  3992 ;;  B               4   18[BANK0 ] float 
  3993 ;;  C               4   22[BANK0 ] float 
  3994 ;;  H               1   26[BANK0 ] PTR float 
  3995 ;;		 -> color_cardCheck@H(4), 
  3996 ;;  S               1   27[BANK0 ] PTR float 
  3997 ;;		 -> color_cardCheck@S(4), 
  3998 ;;  V               1   28[BANK0 ] PTR float 
  3999 ;;		 -> color_cardCheck@V(4), 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  b               4   81[BANK0 ] float 
  4002 ;;  g               4   77[BANK0 ] float 
  4003 ;;  r               4   73[BANK0 ] float 
  4004 ;;  maxRGB          4   69[BANK0 ] float 
  4005 ;;  deltaRGB        4   65[BANK0 ] float 
  4006 ;;  H_temp          4   61[BANK0 ] float 
  4007 ;;  minRGB          4   45[BANK0 ] float 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4017 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Totals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;Total ram usage:       75 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 3
  4024 ;; This function calls:
  4025 ;;		___fladd
  4026 ;;		___fldiv
  4027 ;;		___fleq
  4028 ;;		___flge
  4029 ;;		___flmul
  4030 ;;		___flsub
  4031 ;;		_custom_floatmodulo
  4032 ;; This function is called by:
  4033 ;;		_color_cardCheck
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text17
  4038   00183A                     __ptext17:
  4039                           	callstack 0
  4040   00183A                     _RGB_to_HSV:
  4041                           	callstack 25
  4042   00183A                     
  4043                           ;color.c: 128:     float r = R/C;
  4044   00183A  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  4045   00183E  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  4046   001842  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  4047   001846  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  4048   00184A  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4049   00184E  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4050   001852  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4051   001856  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4052   00185A  ECFE  F018         	call	___fldiv	;wreg free
  4053   00185E  C022  F0A9         	movff	?___fldiv,RGB_to_HSV@r
  4054   001862  C023  F0AA         	movff	?___fldiv+1,RGB_to_HSV@r+1
  4055   001866  C024  F0AB         	movff	?___fldiv+2,RGB_to_HSV@r+2
  4056   00186A  C025  F0AC         	movff	?___fldiv+3,RGB_to_HSV@r+3
  4057                           
  4058                           ;color.c: 129:     float g = G/C;
  4059   00186E  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  4060   001872  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  4061   001876  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  4062   00187A  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  4063   00187E  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4064   001882  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4065   001886  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4066   00188A  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4067   00188E  ECFE  F018         	call	___fldiv	;wreg free
  4068   001892  C022  F0AD         	movff	?___fldiv,RGB_to_HSV@g
  4069   001896  C023  F0AE         	movff	?___fldiv+1,RGB_to_HSV@g+1
  4070   00189A  C024  F0AF         	movff	?___fldiv+2,RGB_to_HSV@g+2
  4071   00189E  C025  F0B0         	movff	?___fldiv+3,RGB_to_HSV@g+3
  4072                           
  4073                           ;color.c: 130:     float b = B/C;
  4074   0018A2  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  4075   0018A6  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  4076   0018AA  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  4077   0018AE  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  4078   0018B2  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4079   0018B6  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4080   0018BA  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4081   0018BE  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4082   0018C2  ECFE  F018         	call	___fldiv	;wreg free
  4083   0018C6  C022  F0B1         	movff	?___fldiv,RGB_to_HSV@b
  4084   0018CA  C023  F0B2         	movff	?___fldiv+1,RGB_to_HSV@b+1
  4085   0018CE  C024  F0B3         	movff	?___fldiv+2,RGB_to_HSV@b+2
  4086   0018D2  C025  F0B4         	movff	?___fldiv+3,RGB_to_HSV@b+3
  4087                           
  4088                           ;color.c: 133:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  4089   0018D6  C0AD  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4090   0018DA  C0AE  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4091   0018DE  C0AF  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4092   0018E2  C0B0  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4093   0018E6  C0A9  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4094   0018EA  C0AA  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4095   0018EE  C0AB  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4096   0018F2  C0AC  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4097   0018F6  ECAC  F021         	call	___flge	;wreg free
  4098   0018FA  A0D8               	btfss	status,0,c
  4099   0018FC  EF82  F00C         	goto	u3701
  4100   001900  EF84  F00C         	goto	u3700
  4101   001904                     u3701:
  4102   001904  EFB9  F00C         	goto	l3651
  4103   001908                     u3700:
  4104   001908  C0B1  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4105   00190C  C0B2  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4106   001910  C0B3  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4107   001914  C0B4  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4108   001918  C0AD  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4109   00191C  C0AE  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4110   001920  C0AF  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4111   001924  C0B0  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4112   001928  ECAC  F021         	call	___flge	;wreg free
  4113   00192C  A0D8               	btfss	status,0,c
  4114   00192E  EF9B  F00C         	goto	u3711
  4115   001932  EF9D  F00C         	goto	u3710
  4116   001936                     u3711:
  4117   001936  EFA7  F00C         	goto	l58
  4118   00193A                     u3710:
  4119   00193A  C0B1  F085         	movff	RGB_to_HSV@b,_RGB_to_HSV$317
  4120   00193E  C0B2  F086         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$317+1
  4121   001942  C0B3  F087         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$317+2
  4122   001946  C0B4  F088         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$317+3
  4123   00194A  EFAF  F00C         	goto	l60
  4124   00194E                     l58:
  4125   00194E  C0AD  F085         	movff	RGB_to_HSV@g,_RGB_to_HSV$317
  4126   001952  C0AE  F086         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$317+1
  4127   001956  C0AF  F087         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$317+2
  4128   00195A  C0B0  F088         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$317+3
  4129   00195E                     l60:
  4130   00195E  C085  F0A5         	movff	_RGB_to_HSV$317,RGB_to_HSV@maxRGB
  4131   001962  C086  F0A6         	movff	_RGB_to_HSV$317+1,RGB_to_HSV@maxRGB+1
  4132   001966  C087  F0A7         	movff	_RGB_to_HSV$317+2,RGB_to_HSV@maxRGB+2
  4133   00196A  C088  F0A8         	movff	_RGB_to_HSV$317+3,RGB_to_HSV@maxRGB+3
  4134   00196E  EFEC  F00C         	goto	l3655
  4135   001972                     l3651:
  4136   001972  C0B1  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4137   001976  C0B2  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4138   00197A  C0B3  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4139   00197E  C0B4  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4140   001982  C0A9  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4141   001986  C0AA  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4142   00198A  C0AB  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4143   00198E  C0AC  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4144   001992  ECAC  F021         	call	___flge	;wreg free
  4145   001996  A0D8               	btfss	status,0,c
  4146   001998  EFD0  F00C         	goto	u3721
  4147   00199C  EFD2  F00C         	goto	u3720
  4148   0019A0                     u3721:
  4149   0019A0  EFDC  F00C         	goto	l62
  4150   0019A4                     u3720:
  4151   0019A4  C0B1  F089         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  4152   0019A8  C0B2  F08A         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  4153   0019AC  C0B3  F08B         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  4154   0019B0  C0B4  F08C         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  4155   0019B4  EFE4  F00C         	goto	l64
  4156   0019B8                     l62:
  4157   0019B8  C0A9  F089         	movff	RGB_to_HSV@r,_RGB_to_HSV$318
  4158   0019BC  C0AA  F08A         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$318+1
  4159   0019C0  C0AB  F08B         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$318+2
  4160   0019C4  C0AC  F08C         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$318+3
  4161   0019C8                     l64:
  4162   0019C8  C089  F0A5         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  4163   0019CC  C08A  F0A6         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  4164   0019D0  C08B  F0A7         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  4165   0019D4  C08C  F0A8         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  4166   0019D8                     l3655:
  4167                           
  4168                           ;color.c: 134:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  4169   0019D8  C0A9  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4170   0019DC  C0AA  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4171   0019E0  C0AB  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4172   0019E4  C0AC  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4173   0019E8  C0AD  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4174   0019EC  C0AE  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4175   0019F0  C0AF  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4176   0019F4  C0B0  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4177   0019F8  ECAC  F021         	call	___flge	;wreg free
  4178   0019FC  A0D8               	btfss	status,0,c
  4179   0019FE  EF03  F00D         	goto	u3731
  4180   001A02  EF05  F00D         	goto	u3730
  4181   001A06                     u3731:
  4182   001A06  EF3A  F00D         	goto	l3661
  4183   001A0A                     u3730:
  4184   001A0A  C0AD  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4185   001A0E  C0AE  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4186   001A12  C0AF  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4187   001A16  C0B0  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4188   001A1A  C0B1  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4189   001A1E  C0B2  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4190   001A22  C0B3  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4191   001A26  C0B4  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4192   001A2A  ECAC  F021         	call	___flge	;wreg free
  4193   001A2E  A0D8               	btfss	status,0,c
  4194   001A30  EF1C  F00D         	goto	u3741
  4195   001A34  EF1E  F00D         	goto	u3740
  4196   001A38                     u3741:
  4197   001A38  EF28  F00D         	goto	l70
  4198   001A3C                     u3740:
  4199   001A3C  C0B1  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$320
  4200   001A40  C0B2  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$320+1
  4201   001A44  C0B3  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$320+2
  4202   001A48  C0B4  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$320+3
  4203   001A4C  EF30  F00D         	goto	l72
  4204   001A50                     l70:
  4205   001A50  C0AD  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$320
  4206   001A54  C0AE  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$320+1
  4207   001A58  C0AF  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$320+2
  4208   001A5C  C0B0  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$320+3
  4209   001A60                     l72:
  4210   001A60  C091  F08D         	movff	_RGB_to_HSV$320,RGB_to_HSV@minRGB
  4211   001A64  C092  F08E         	movff	_RGB_to_HSV$320+1,RGB_to_HSV@minRGB+1
  4212   001A68  C093  F08F         	movff	_RGB_to_HSV$320+2,RGB_to_HSV@minRGB+2
  4213   001A6C  C094  F090         	movff	_RGB_to_HSV$320+3,RGB_to_HSV@minRGB+3
  4214   001A70  EF6D  F00D         	goto	l3665
  4215   001A74                     l3661:
  4216   001A74  C0A9  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4217   001A78  C0AA  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4218   001A7C  C0AB  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4219   001A80  C0AC  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4220   001A84  C0B1  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4221   001A88  C0B2  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4222   001A8C  C0B3  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4223   001A90  C0B4  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4224   001A94  ECAC  F021         	call	___flge	;wreg free
  4225   001A98  A0D8               	btfss	status,0,c
  4226   001A9A  EF51  F00D         	goto	u3751
  4227   001A9E  EF53  F00D         	goto	u3750
  4228   001AA2                     u3751:
  4229   001AA2  EF5D  F00D         	goto	l74
  4230   001AA6                     u3750:
  4231   001AA6  C0B1  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  4232   001AAA  C0B2  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  4233   001AAE  C0B3  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  4234   001AB2  C0B4  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  4235   001AB6  EF65  F00D         	goto	l76
  4236   001ABA                     l74:
  4237   001ABA  C0A9  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$321
  4238   001ABE  C0AA  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$321+1
  4239   001AC2  C0AB  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$321+2
  4240   001AC6  C0AC  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$321+3
  4241   001ACA                     l76:
  4242   001ACA  C095  F08D         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  4243   001ACE  C096  F08E         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  4244   001AD2  C097  F08F         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  4245   001AD6  C098  F090         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  4246   001ADA                     l3665:
  4247                           
  4248                           ;color.c: 135:     float deltaRGB = maxRGB - minRGB;
  4249   001ADA  C0A5  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  4250   001ADE  C0A6  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  4251   001AE2  C0A7  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  4252   001AE6  C0A8  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  4253   001AEA  C08D  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  4254   001AEE  C08E  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  4255   001AF2  C08F  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  4256   001AF6  C090  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  4257   001AFA  ECC0  F024         	call	___flsub	;wreg free
  4258   001AFE  C01A  F0A1         	movff	?___flsub,RGB_to_HSV@deltaRGB
  4259   001B02  C01B  F0A2         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  4260   001B06  C01C  F0A3         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  4261   001B0A  C01D  F0A4         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  4262                           
  4263                           ;color.c: 140:     float H_temp;;color.c: 142:     if (deltaRGB == 0) {H_temp = 0;}
  4264   001B0E  C0A1  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  4265   001B12  C0A2  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  4266   001B16  C0A3  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  4267   001B1A  C0A4  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  4268   001B1E  0E00               	movlw	0
  4269   001B20  6E05               	movwf	___fleq@ff2^0,c
  4270   001B22  0E00               	movlw	0
  4271   001B24  6E06               	movwf	(___fleq@ff2+1)^0,c
  4272   001B26  0E00               	movlw	0
  4273   001B28  6E07               	movwf	(___fleq@ff2+2)^0,c
  4274   001B2A  0E00               	movlw	0
  4275   001B2C  6E08               	movwf	(___fleq@ff2+3)^0,c
  4276   001B2E  ECEA  F022         	call	___fleq	;wreg free
  4277   001B32  A0D8               	btfss	status,0,c
  4278   001B34  EF9E  F00D         	goto	u3761
  4279   001B38  EFA0  F00D         	goto	u3760
  4280   001B3C                     u3761:
  4281   001B3C  EFAB  F00D         	goto	l3669
  4282   001B40                     u3760:
  4283   001B40  0E00               	movlw	0
  4284   001B42  0100               	movlb	0	; () banked
  4285   001B44  6F9D               	movwf	RGB_to_HSV@H_temp& (0+255),b
  4286   001B46  0E00               	movlw	0
  4287   001B48  6F9E               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  4288   001B4A  0E00               	movlw	0
  4289   001B4C  6F9F               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  4290   001B4E  0E00               	movlw	0
  4291   001B50  6FA0               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  4292   001B52  EF0C  F00F         	goto	l3689
  4293   001B56                     l3669:
  4294   001B56  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4295   001B5A  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4296   001B5E  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4297   001B62  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4298   001B66  C0A9  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  4299   001B6A  C0AA  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  4300   001B6E  C0AB  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  4301   001B72  C0AC  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  4302   001B76  ECEA  F022         	call	___fleq	;wreg free
  4303   001B7A  A0D8               	btfss	status,0,c
  4304   001B7C  EFC2  F00D         	goto	u3771
  4305   001B80  EFC4  F00D         	goto	u3770
  4306   001B84                     u3771:
  4307   001B84  EF26  F00E         	goto	l3677
  4308   001B88                     u3770:
  4309   001B88  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4310   001B8C  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4311   001B90  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4312   001B94  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4313   001B98  C0B1  F01E         	movff	RGB_to_HSV@b,___flsub@a
  4314   001B9C  C0B2  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  4315   001BA0  C0B3  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  4316   001BA4  C0B4  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  4317   001BA8  C0AD  F01A         	movff	RGB_to_HSV@g,___flsub@b
  4318   001BAC  C0AE  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  4319   001BB0  C0AF  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  4320   001BB4  C0B0  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  4321   001BB8  ECC0  F024         	call	___flsub	;wreg free
  4322   001BBC  C01A  F022         	movff	?___flsub,___fldiv@b
  4323   001BC0  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4324   001BC4  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4325   001BC8  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4326   001BCC  ECFE  F018         	call	___fldiv	;wreg free
  4327   001BD0  C022  F07D         	movff	?___fldiv,_RGB_to_HSV$2715
  4328   001BD4  C023  F07E         	movff	?___fldiv+1,_RGB_to_HSV$2715+1
  4329   001BD8  C024  F07F         	movff	?___fldiv+2,_RGB_to_HSV$2715+2
  4330   001BDC  C025  F080         	movff	?___fldiv+3,_RGB_to_HSV$2715+3
  4331   001BE0  0E00               	movlw	0
  4332   001BE2  6E58               	movwf	custom_floatmodulo@y^0,c
  4333   001BE4  0E00               	movlw	0
  4334   001BE6  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  4335   001BE8  0EC0               	movlw	192
  4336   001BEA  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  4337   001BEC  0E40               	movlw	64
  4338   001BEE  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  4339   001BF0  C07D  F054         	movff	_RGB_to_HSV$2715,custom_floatmodulo@x
  4340   001BF4  C07E  F055         	movff	_RGB_to_HSV$2715+1,custom_floatmodulo@x+1
  4341   001BF8  C07F  F056         	movff	_RGB_to_HSV$2715+2,custom_floatmodulo@x+2
  4342   001BFC  C080  F057         	movff	_RGB_to_HSV$2715+3,custom_floatmodulo@x+3
  4343   001C00  EC9D  F020         	call	_custom_floatmodulo	;wreg free
  4344   001C04  C054  F081         	movff	?_custom_floatmodulo,_RGB_to_HSV$2716
  4345   001C08  C055  F082         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2716+1
  4346   001C0C  C056  F083         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2716+2
  4347   001C10  C057  F084         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2716+3
  4348   001C14  C081  F03B         	movff	_RGB_to_HSV$2716,___flmul@b
  4349   001C18  C082  F03C         	movff	_RGB_to_HSV$2716+1,___flmul@b+1
  4350   001C1C  C083  F03D         	movff	_RGB_to_HSV$2716+2,___flmul@b+2
  4351   001C20  C084  F03E         	movff	_RGB_to_HSV$2716+3,___flmul@b+3
  4352   001C24  0E00               	movlw	0
  4353   001C26  6E3F               	movwf	___flmul@a^0,c
  4354   001C28  0E00               	movlw	0
  4355   001C2A  6E40               	movwf	(___flmul@a+1)^0,c
  4356   001C2C  0E70               	movlw	112
  4357   001C2E  6E41               	movwf	(___flmul@a+2)^0,c
  4358   001C30  0E42               	movlw	66
  4359   001C32  6E42               	movwf	(___flmul@a+3)^0,c
  4360   001C34  ECE9  F016         	call	___flmul	;wreg free
  4361   001C38  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4362   001C3C  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4363   001C40  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4364   001C44  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4365   001C48  EF0C  F00F         	goto	l3689
  4366   001C4C                     l3677:
  4367   001C4C  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4368   001C50  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4369   001C54  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4370   001C58  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4371   001C5C  C0AD  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  4372   001C60  C0AE  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  4373   001C64  C0AF  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  4374   001C68  C0B0  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  4375   001C6C  ECEA  F022         	call	___fleq	;wreg free
  4376   001C70  A0D8               	btfss	status,0,c
  4377   001C72  EF3D  F00E         	goto	u3781
  4378   001C76  EF3F  F00E         	goto	u3780
  4379   001C7A                     u3781:
  4380   001C7A  EF99  F00E         	goto	l3683
  4381   001C7E                     u3780:
  4382   001C7E  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4383   001C82  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4384   001C86  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4385   001C8A  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4386   001C8E  C0A9  F01E         	movff	RGB_to_HSV@r,___flsub@a
  4387   001C92  C0AA  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  4388   001C96  C0AB  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  4389   001C9A  C0AC  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  4390   001C9E  C0B1  F01A         	movff	RGB_to_HSV@b,___flsub@b
  4391   001CA2  C0B2  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  4392   001CA6  C0B3  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  4393   001CAA  C0B4  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  4394   001CAE  ECC0  F024         	call	___flsub	;wreg free
  4395   001CB2  C01A  F022         	movff	?___flsub,___fldiv@b
  4396   001CB6  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4397   001CBA  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4398   001CBE  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4399   001CC2  ECFE  F018         	call	___fldiv	;wreg free
  4400   001CC6  C022  F099         	movff	?___fldiv,_RGB_to_HSV$2717
  4401   001CCA  C023  F09A         	movff	?___fldiv+1,_RGB_to_HSV$2717+1
  4402   001CCE  C024  F09B         	movff	?___fldiv+2,_RGB_to_HSV$2717+2
  4403   001CD2  C025  F09C         	movff	?___fldiv+3,_RGB_to_HSV$2717+3
  4404   001CD6  0E00               	movlw	0
  4405   001CD8  6E05               	movwf	___fladd@a^0,c
  4406   001CDA  0E00               	movlw	0
  4407   001CDC  6E06               	movwf	(___fladd@a+1)^0,c
  4408   001CDE  0E00               	movlw	0
  4409   001CE0  6E07               	movwf	(___fladd@a+2)^0,c
  4410   001CE2  0E40               	movlw	64
  4411   001CE4  6E08               	movwf	(___fladd@a+3)^0,c
  4412   001CE6  C099  F001         	movff	_RGB_to_HSV$2717,___fladd@b
  4413   001CEA  C09A  F002         	movff	_RGB_to_HSV$2717+1,___fladd@b+1
  4414   001CEE  C09B  F003         	movff	_RGB_to_HSV$2717+2,___fladd@b+2
  4415   001CF2  C09C  F004         	movff	_RGB_to_HSV$2717+3,___fladd@b+3
  4416   001CF6  EC2B  F012         	call	___fladd	;wreg free
  4417   001CFA  C001  F03B         	movff	?___fladd,___flmul@b
  4418   001CFE  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4419   001D02  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4420   001D06  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4421   001D0A  0E00               	movlw	0
  4422   001D0C  6E3F               	movwf	___flmul@a^0,c
  4423   001D0E  0E00               	movlw	0
  4424   001D10  6E40               	movwf	(___flmul@a+1)^0,c
  4425   001D12  0E70               	movlw	112
  4426   001D14  6E41               	movwf	(___flmul@a+2)^0,c
  4427   001D16  0E42               	movlw	66
  4428   001D18  6E42               	movwf	(___flmul@a+3)^0,c
  4429   001D1A  ECE9  F016         	call	___flmul	;wreg free
  4430   001D1E  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4431   001D22  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4432   001D26  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4433   001D2A  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4434   001D2E  EF0C  F00F         	goto	l3689
  4435   001D32                     l3683:
  4436   001D32  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4437   001D36  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4438   001D3A  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4439   001D3E  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4440   001D42  C0B1  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  4441   001D46  C0B2  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  4442   001D4A  C0B3  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  4443   001D4E  C0B4  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  4444   001D52  ECEA  F022         	call	___fleq	;wreg free
  4445   001D56  A0D8               	btfss	status,0,c
  4446   001D58  EFB0  F00E         	goto	u3791
  4447   001D5C  EFB2  F00E         	goto	u3790
  4448   001D60                     u3791:
  4449   001D60  EF0C  F00F         	goto	l80
  4450   001D64                     u3790:
  4451   001D64  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4452   001D68  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4453   001D6C  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4454   001D70  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4455   001D74  C0AD  F01E         	movff	RGB_to_HSV@g,___flsub@a
  4456   001D78  C0AE  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  4457   001D7C  C0AF  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  4458   001D80  C0B0  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  4459   001D84  C0A9  F01A         	movff	RGB_to_HSV@r,___flsub@b
  4460   001D88  C0AA  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  4461   001D8C  C0AB  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  4462   001D90  C0AC  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  4463   001D94  ECC0  F024         	call	___flsub	;wreg free
  4464   001D98  C01A  F022         	movff	?___flsub,___fldiv@b
  4465   001D9C  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4466   001DA0  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4467   001DA4  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4468   001DA8  ECFE  F018         	call	___fldiv	;wreg free
  4469   001DAC  C022  F099         	movff	?___fldiv,_RGB_to_HSV$2717
  4470   001DB0  C023  F09A         	movff	?___fldiv+1,_RGB_to_HSV$2717+1
  4471   001DB4  C024  F09B         	movff	?___fldiv+2,_RGB_to_HSV$2717+2
  4472   001DB8  C025  F09C         	movff	?___fldiv+3,_RGB_to_HSV$2717+3
  4473   001DBC  0E00               	movlw	0
  4474   001DBE  6E05               	movwf	___fladd@a^0,c
  4475   001DC0  0E00               	movlw	0
  4476   001DC2  6E06               	movwf	(___fladd@a+1)^0,c
  4477   001DC4  0E80               	movlw	128
  4478   001DC6  6E07               	movwf	(___fladd@a+2)^0,c
  4479   001DC8  0E40               	movlw	64
  4480   001DCA  6E08               	movwf	(___fladd@a+3)^0,c
  4481   001DCC  C099  F001         	movff	_RGB_to_HSV$2717,___fladd@b
  4482   001DD0  C09A  F002         	movff	_RGB_to_HSV$2717+1,___fladd@b+1
  4483   001DD4  C09B  F003         	movff	_RGB_to_HSV$2717+2,___fladd@b+2
  4484   001DD8  C09C  F004         	movff	_RGB_to_HSV$2717+3,___fladd@b+3
  4485   001DDC  EC2B  F012         	call	___fladd	;wreg free
  4486   001DE0  C001  F03B         	movff	?___fladd,___flmul@b
  4487   001DE4  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4488   001DE8  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4489   001DEC  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4490   001DF0  0E00               	movlw	0
  4491   001DF2  6E3F               	movwf	___flmul@a^0,c
  4492   001DF4  0E00               	movlw	0
  4493   001DF6  6E40               	movwf	(___flmul@a+1)^0,c
  4494   001DF8  0E70               	movlw	112
  4495   001DFA  6E41               	movwf	(___flmul@a+2)^0,c
  4496   001DFC  0E42               	movlw	66
  4497   001DFE  6E42               	movwf	(___flmul@a+3)^0,c
  4498   001E00  ECE9  F016         	call	___flmul	;wreg free
  4499   001E04  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4500   001E08  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4501   001E0C  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4502   001E10  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4503   001E14  EF0C  F00F         	goto	l3689
  4504   001E18                     l80:
  4505   001E18                     l3689:
  4506                           
  4507                           ;color.c: 150:     if (H_temp < 0) {H_temp = H_temp + 360;}
  4508   001E18  0100               	movlb	0	; () banked
  4509   001E1A  BFA0               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  4510   001E1C  EF14  F00F         	goto	u3800
  4511   001E20  EF12  F00F         	goto	u3801
  4512   001E24                     u3801:
  4513   001E24  EF2E  F00F         	goto	l3693
  4514   001E28                     u3800:
  4515   001E28                     
  4516                           ; BSR set to: 0
  4517   001E28  C09D  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  4518   001E2C  C09E  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  4519   001E30  C09F  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  4520   001E34  C0A0  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  4521   001E38  0E00               	movlw	0
  4522   001E3A  6E05               	movwf	___fladd@a^0,c
  4523   001E3C  0E00               	movlw	0
  4524   001E3E  6E06               	movwf	(___fladd@a+1)^0,c
  4525   001E40  0EB4               	movlw	180
  4526   001E42  6E07               	movwf	(___fladd@a+2)^0,c
  4527   001E44  0E43               	movlw	67
  4528   001E46  6E08               	movwf	(___fladd@a+3)^0,c
  4529   001E48  EC2B  F012         	call	___fladd	;wreg free
  4530   001E4C  C001  F09D         	movff	?___fladd,RGB_to_HSV@H_temp
  4531   001E50  C002  F09E         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  4532   001E54  C003  F09F         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  4533   001E58  C004  F0A0         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  4534   001E5C                     l3693:
  4535                           
  4536                           ;color.c: 153:     *H = H_temp;
  4537   001E5C  0100               	movlb	0	; () banked
  4538   001E5E  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  4539   001E60  6ED9               	movwf	fsr2l,c
  4540   001E62  6ADA               	clrf	fsr2h,c
  4541   001E64  C09D  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  4542   001E68  C09E  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  4543   001E6C  C09F  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  4544   001E70  C0A0  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  4545   001E74                     
  4546                           ; BSR set to: 0
  4547                           ;color.c: 156:     if (maxRGB == 0) {*S = 0;}
  4548   001E74  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4549   001E78  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4550   001E7C  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4551   001E80  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4552   001E84  0E00               	movlw	0
  4553   001E86  6E05               	movwf	___fleq@ff2^0,c
  4554   001E88  0E00               	movlw	0
  4555   001E8A  6E06               	movwf	(___fleq@ff2+1)^0,c
  4556   001E8C  0E00               	movlw	0
  4557   001E8E  6E07               	movwf	(___fleq@ff2+2)^0,c
  4558   001E90  0E00               	movlw	0
  4559   001E92  6E08               	movwf	(___fleq@ff2+3)^0,c
  4560   001E94  ECEA  F022         	call	___fleq	;wreg free
  4561   001E98  A0D8               	btfss	status,0,c
  4562   001E9A  EF51  F00F         	goto	u3811
  4563   001E9E  EF53  F00F         	goto	u3810
  4564   001EA2                     u3811:
  4565   001EA2  EF61  F00F         	goto	l3699
  4566   001EA6                     u3810:
  4567   001EA6  0100               	movlb	0	; () banked
  4568   001EA8  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4569   001EAA  6ED9               	movwf	fsr2l,c
  4570   001EAC  6ADA               	clrf	fsr2h,c
  4571   001EAE  0E00               	movlw	0
  4572   001EB0  6EDE               	movwf	postinc2,c
  4573   001EB2  0E00               	movlw	0
  4574   001EB4  6EDE               	movwf	postinc2,c
  4575   001EB6  0E00               	movlw	0
  4576   001EB8  6EDE               	movwf	postinc2,c
  4577   001EBA  0E00               	movlw	0
  4578   001EBC  6EDD               	movwf	postdec2,c
  4579   001EBE  EF91  F00F         	goto	l86
  4580   001EC2                     l3699:
  4581                           
  4582                           ;color.c: 159:         *S = (deltaRGB/maxRGB) * 100;
  4583   001EC2  C0A5  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  4584   001EC6  C0A6  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  4585   001ECA  C0A7  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  4586   001ECE  C0A8  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  4587   001ED2  C0A1  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  4588   001ED6  C0A2  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  4589   001EDA  C0A3  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  4590   001EDE  C0A4  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  4591   001EE2  ECFE  F018         	call	___fldiv	;wreg free
  4592   001EE6  C022  F03B         	movff	?___fldiv,___flmul@b
  4593   001EEA  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  4594   001EEE  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  4595   001EF2  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  4596   001EF6  0E00               	movlw	0
  4597   001EF8  6E3F               	movwf	___flmul@a^0,c
  4598   001EFA  0E00               	movlw	0
  4599   001EFC  6E40               	movwf	(___flmul@a+1)^0,c
  4600   001EFE  0EC8               	movlw	200
  4601   001F00  6E41               	movwf	(___flmul@a+2)^0,c
  4602   001F02  0E42               	movlw	66
  4603   001F04  6E42               	movwf	(___flmul@a+3)^0,c
  4604   001F06  ECE9  F016         	call	___flmul	;wreg free
  4605   001F0A  0100               	movlb	0	; () banked
  4606   001F0C  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4607   001F0E  6ED9               	movwf	fsr2l,c
  4608   001F10  6ADA               	clrf	fsr2h,c
  4609   001F12  C03B  FFDE         	movff	?___flmul,postinc2
  4610   001F16  C03C  FFDE         	movff	?___flmul+1,postinc2
  4611   001F1A  C03D  FFDE         	movff	?___flmul+2,postinc2
  4612   001F1E  C03E  FFDE         	movff	?___flmul+3,postinc2
  4613   001F22                     l86:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;color.c: 163:     *V = maxRGB * 100;
  4617   001F22  C0A5  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  4618   001F26  C0A6  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  4619   001F2A  C0A7  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  4620   001F2E  C0A8  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  4621   001F32  0E00               	movlw	0
  4622   001F34  6E3F               	movwf	___flmul@a^0,c
  4623   001F36  0E00               	movlw	0
  4624   001F38  6E40               	movwf	(___flmul@a+1)^0,c
  4625   001F3A  0EC8               	movlw	200
  4626   001F3C  6E41               	movwf	(___flmul@a+2)^0,c
  4627   001F3E  0E42               	movlw	66
  4628   001F40  6E42               	movwf	(___flmul@a+3)^0,c
  4629   001F42  ECE9  F016         	call	___flmul	;wreg free
  4630   001F46  0100               	movlb	0	; () banked
  4631   001F48  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  4632   001F4A  6ED9               	movwf	fsr2l,c
  4633   001F4C  6ADA               	clrf	fsr2h,c
  4634   001F4E  C03B  FFDE         	movff	?___flmul,postinc2
  4635   001F52  C03C  FFDE         	movff	?___flmul+1,postinc2
  4636   001F56  C03D  FFDE         	movff	?___flmul+2,postinc2
  4637   001F5A  C03E  FFDE         	movff	?___flmul+3,postinc2
  4638   001F5E                     
  4639                           ; BSR set to: 0
  4640   001F5E  0012               	return		;funcret
  4641   001F60                     __end_of_RGB_to_HSV:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _custom_floatmodulo *****************
  4645 ;; Defined at:
  4646 ;;		line 106 in file "color.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  x               4   83[COMRAM] float 
  4649 ;;  y               4   87[COMRAM] float 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  remainder       4    4[BANK0 ] float 
  4652 ;;  quotient        4    0[BANK0 ] float 
  4653 ;;  intPart         2    8[BANK0 ] int 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  4   83[COMRAM] float 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4663 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4666 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4667 ;;Total ram usage:       18 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 2
  4670 ;; This function calls:
  4671 ;;		___fldiv
  4672 ;;		___fleq
  4673 ;;		___flmul
  4674 ;;		___flsub
  4675 ;;		___fltol
  4676 ;;		___xxtofl
  4677 ;; This function is called by:
  4678 ;;		_RGB_to_HSV
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text18
  4683   00413A                     __ptext18:
  4684                           	callstack 0
  4685   00413A                     _custom_floatmodulo:
  4686                           	callstack 25
  4687   00413A                     
  4688                           ;color.c: 108:     if (y == 0.0) {
  4689   00413A  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  4690   00413E  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  4691   004142  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  4692   004146  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  4693   00414A  0E00               	movlw	0
  4694   00414C  6E05               	movwf	___fleq@ff2^0,c
  4695   00414E  0E00               	movlw	0
  4696   004150  6E06               	movwf	(___fleq@ff2+1)^0,c
  4697   004152  0E00               	movlw	0
  4698   004154  6E07               	movwf	(___fleq@ff2+2)^0,c
  4699   004156  0E00               	movlw	0
  4700   004158  6E08               	movwf	(___fleq@ff2+3)^0,c
  4701   00415A  ECEA  F022         	call	___fleq	;wreg free
  4702   00415E  A0D8               	btfss	status,0,c
  4703   004160  EFB4  F020         	goto	u3611
  4704   004164  EFB6  F020         	goto	u3610
  4705   004168                     u3611:
  4706   004168  EFC0  F020         	goto	l3549
  4707   00416C                     u3610:
  4708   00416C                     
  4709                           ;color.c: 109:         return 0.0;
  4710   00416C  0E00               	movlw	0
  4711   00416E  6E54               	movwf	?_custom_floatmodulo^0,c
  4712   004170  0E00               	movlw	0
  4713   004172  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  4714   004174  0E00               	movlw	0
  4715   004176  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  4716   004178  0E00               	movlw	0
  4717   00417A  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  4718   00417C  EF28  F021         	goto	l50
  4719   004180                     l3549:
  4720                           
  4721                           ;color.c: 113:     float quotient = x / y;
  4722   004180  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  4723   004184  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  4724   004188  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  4725   00418C  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  4726   004190  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  4727   004194  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  4728   004198  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  4729   00419C  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  4730   0041A0  ECFE  F018         	call	___fldiv	;wreg free
  4731   0041A4  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  4732   0041A8  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  4733   0041AC  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  4734   0041B0  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  4735                           
  4736                           ;color.c: 116:     int intPart = (int)quotient;
  4737   0041B4  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  4738   0041B8  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  4739   0041BC  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  4740   0041C0  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  4741   0041C4  EC29  F021         	call	___fltol	;wreg free
  4742   0041C8  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  4743   0041CC  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  4744   0041D0                     
  4745                           ;color.c: 119:     float remainder = x - intPart * y;
  4746   0041D0  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  4747   0041D4  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  4748   0041D8  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  4749   0041DC  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  4750   0041E0  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  4751   0041E4  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  4752   0041E8  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  4753   0041EC  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  4754   0041F0  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  4755   0041F4  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  4756   0041F8  0E00               	movlw	0
  4757   0041FA  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  4758   0041FC  0EFF               	movlw	-1
  4759   0041FE  6E0E               	movwf	(___xxtofl@val+2)^0,c
  4760   004200  6E0F               	movwf	(___xxtofl@val+3)^0,c
  4761   004202  0E01               	movlw	1
  4762   004204  ECE2  F01B         	call	___xxtofl
  4763   004208  C00C  F03B         	movff	?___xxtofl,___flmul@b
  4764   00420C  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  4765   004210  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  4766   004214  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  4767   004218  ECE9  F016         	call	___flmul	;wreg free
  4768   00421C  C03B  F01E         	movff	?___flmul,___flsub@a
  4769   004220  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  4770   004224  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  4771   004228  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  4772   00422C  ECC0  F024         	call	___flsub	;wreg free
  4773   004230  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  4774   004234  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  4775   004238  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  4776   00423C  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  4777   004240                     
  4778                           ;color.c: 121:     return remainder;
  4779   004240  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  4780   004244  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  4781   004248  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  4782   00424C  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  4783   004250                     l50:
  4784   004250  0012               	return		;funcret
  4785   004252                     __end_of_custom_floatmodulo:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function ___xxtofl *****************
  4789 ;; Defined at:
  4790 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  sign            1    wreg     unsigned char 
  4793 ;;  val             4   11[COMRAM] long 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  sign            1   19[COMRAM] unsigned char 
  4796 ;;  arg             4   21[COMRAM] unsigned long 
  4797 ;;  exp             1   20[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  4   11[COMRAM] unsigned char 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4809 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;Total ram usage:       14 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_custom_floatmodulo
  4817 ;;		_color_cardCheck
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text19
  4822   0037C4                     __ptext19:
  4823                           	callstack 0
  4824   0037C4                     ___xxtofl:
  4825                           	callstack 28
  4826                           
  4827                           ;incstack = 0
  4828                           ;___xxtofl@sign stored from wreg
  4829   0037C4  6E14               	movwf	___xxtofl@sign^0,c
  4830   0037C6  5014               	movf	___xxtofl@sign^0,w,c
  4831   0037C8  B4D8               	btfsc	status,2,c
  4832   0037CA  EFE9  F01B         	goto	u3491
  4833   0037CE  EFEB  F01B         	goto	u3490
  4834   0037D2                     u3491:
  4835   0037D2  EF0D  F01C         	goto	l1255
  4836   0037D6                     u3490:
  4837   0037D6  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4838   0037D8  EFF2  F01B         	goto	u3500
  4839   0037DC  EFF0  F01B         	goto	u3501
  4840   0037E0                     u3501:
  4841   0037E0  EF0D  F01C         	goto	l1255
  4842   0037E4                     u3500:
  4843   0037E4  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  4844   0037E8  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  4845   0037EC  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  4846   0037F0  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  4847   0037F4  1E10               	comf	??___xxtofl^0,f,c
  4848   0037F6  1E11               	comf	(??___xxtofl+1)^0,f,c
  4849   0037F8  1E12               	comf	(??___xxtofl+2)^0,f,c
  4850   0037FA  1E13               	comf	(??___xxtofl+3)^0,f,c
  4851   0037FC  2A10               	incf	??___xxtofl^0,f,c
  4852   0037FE  0E00               	movlw	0
  4853   003800  2211               	addwfc	(??___xxtofl+1)^0,f,c
  4854   003802  2212               	addwfc	(??___xxtofl+2)^0,f,c
  4855   003804  2213               	addwfc	(??___xxtofl+3)^0,f,c
  4856   003806  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  4857   00380A  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  4858   00380E  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  4859   003812  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  4860   003816  EF15  F01C         	goto	l3473
  4861   00381A                     l1255:
  4862   00381A  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  4863   00381E  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4864   003822  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4865   003826  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4866   00382A                     l3473:
  4867   00382A  500C               	movf	___xxtofl@val^0,w,c
  4868   00382C  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  4869   00382E  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  4870   003830  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  4871   003832  A4D8               	btfss	status,2,c
  4872   003834  EF1E  F01C         	goto	u3511
  4873   003838  EF20  F01C         	goto	u3510
  4874   00383C                     u3511:
  4875   00383C  EF2A  F01C         	goto	l3479
  4876   003840                     u3510:
  4877   003840  0E00               	movlw	0
  4878   003842  6E0C               	movwf	?___xxtofl^0,c
  4879   003844  0E00               	movlw	0
  4880   003846  6E0D               	movwf	(?___xxtofl+1)^0,c
  4881   003848  0E00               	movlw	0
  4882   00384A  6E0E               	movwf	(?___xxtofl+2)^0,c
  4883   00384C  0E00               	movlw	0
  4884   00384E  6E0F               	movwf	(?___xxtofl+3)^0,c
  4885   003850  EFBB  F01C         	goto	l1258
  4886   003854                     l3479:
  4887   003854  0E96               	movlw	150
  4888   003856  6E15               	movwf	___xxtofl@exp^0,c
  4889   003858  EF34  F01C         	goto	l3483
  4890   00385C                     l3481:
  4891   00385C  2A15               	incf	___xxtofl@exp^0,f,c
  4892   00385E  90D8               	bcf	status,0,c
  4893   003860  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4894   003862  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4895   003864  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4896   003866  3216               	rrcf	___xxtofl@arg^0,f,c
  4897   003868                     l3483:
  4898   003868  0E00               	movlw	0
  4899   00386A  1416               	andwf	___xxtofl@arg^0,w,c
  4900   00386C  6E10               	movwf	??___xxtofl^0,c
  4901   00386E  0E00               	movlw	0
  4902   003870  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4903   003872  6E11               	movwf	(??___xxtofl+1)^0,c
  4904   003874  0E00               	movlw	0
  4905   003876  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4906   003878  6E12               	movwf	(??___xxtofl+2)^0,c
  4907   00387A  0EFE               	movlw	254
  4908   00387C  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4909   00387E  6E13               	movwf	(??___xxtofl+3)^0,c
  4910   003880  5010               	movf	??___xxtofl^0,w,c
  4911   003882  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4912   003884  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4913   003886  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4914   003888  A4D8               	btfss	status,2,c
  4915   00388A  EF49  F01C         	goto	u3521
  4916   00388E  EF4B  F01C         	goto	u3520
  4917   003892                     u3521:
  4918   003892  EF2E  F01C         	goto	l3481
  4919   003896                     u3520:
  4920   003896  EF59  F01C         	goto	l1262
  4921   00389A                     l3485:
  4922   00389A  2A15               	incf	___xxtofl@exp^0,f,c
  4923   00389C  0E01               	movlw	1
  4924   00389E  2616               	addwf	___xxtofl@arg^0,f,c
  4925   0038A0  0E00               	movlw	0
  4926   0038A2  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  4927   0038A4  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  4928   0038A6  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  4929   0038A8  90D8               	bcf	status,0,c
  4930   0038AA  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4931   0038AC  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4932   0038AE  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4933   0038B0  3216               	rrcf	___xxtofl@arg^0,f,c
  4934   0038B2                     l1262:
  4935   0038B2  0E00               	movlw	0
  4936   0038B4  1416               	andwf	___xxtofl@arg^0,w,c
  4937   0038B6  6E10               	movwf	??___xxtofl^0,c
  4938   0038B8  0E00               	movlw	0
  4939   0038BA  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4940   0038BC  6E11               	movwf	(??___xxtofl+1)^0,c
  4941   0038BE  0E00               	movlw	0
  4942   0038C0  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4943   0038C2  6E12               	movwf	(??___xxtofl+2)^0,c
  4944   0038C4  0EFF               	movlw	255
  4945   0038C6  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4946   0038C8  6E13               	movwf	(??___xxtofl+3)^0,c
  4947   0038CA  5010               	movf	??___xxtofl^0,w,c
  4948   0038CC  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4949   0038CE  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4950   0038D0  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4951   0038D2  A4D8               	btfss	status,2,c
  4952   0038D4  EF6E  F01C         	goto	u3531
  4953   0038D8  EF70  F01C         	goto	u3530
  4954   0038DC                     u3531:
  4955   0038DC  EF4D  F01C         	goto	l3485
  4956   0038E0                     u3530:
  4957   0038E0  EF78  F01C         	goto	l3493
  4958   0038E4                     l3491:
  4959   0038E4  0615               	decf	___xxtofl@exp^0,f,c
  4960   0038E6  90D8               	bcf	status,0,c
  4961   0038E8  3616               	rlcf	___xxtofl@arg^0,f,c
  4962   0038EA  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  4963   0038EC  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  4964   0038EE  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  4965   0038F0                     l3493:
  4966   0038F0  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  4967   0038F2  EF7D  F01C         	goto	u3541
  4968   0038F6  EF7F  F01C         	goto	u3540
  4969   0038FA                     u3541:
  4970   0038FA  EF87  F01C         	goto	l1269
  4971   0038FE                     u3540:
  4972   0038FE  0E02               	movlw	2
  4973   003900  6015               	cpfslt	___xxtofl@exp^0,c
  4974   003902  EF85  F01C         	goto	u3551
  4975   003906  EF87  F01C         	goto	u3550
  4976   00390A                     u3551:
  4977   00390A  EF72  F01C         	goto	l3491
  4978   00390E                     u3550:
  4979   00390E                     l1269:
  4980   00390E  B015               	btfsc	___xxtofl@exp^0,0,c
  4981   003910  EF8C  F01C         	goto	u3561
  4982   003914  EF8E  F01C         	goto	u3560
  4983   003918                     u3561:
  4984   003918  EF8F  F01C         	goto	l3499
  4985   00391C                     u3560:
  4986   00391C  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  4987   00391E                     l3499:
  4988   00391E  90D8               	bcf	status,0,c
  4989   003920  3215               	rrcf	___xxtofl@exp^0,f,c
  4990   003922  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  4991   003926  6A11               	clrf	(??___xxtofl+1)^0,c
  4992   003928  6A12               	clrf	(??___xxtofl+2)^0,c
  4993   00392A  6A13               	clrf	(??___xxtofl+3)^0,c
  4994   00392C  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  4995   003930  6A12               	clrf	(??___xxtofl+2)^0,c
  4996   003932  6A11               	clrf	(??___xxtofl+1)^0,c
  4997   003934  6A10               	clrf	??___xxtofl^0,c
  4998   003936  5010               	movf	??___xxtofl^0,w,c
  4999   003938  1216               	iorwf	___xxtofl@arg^0,f,c
  5000   00393A  5011               	movf	(??___xxtofl+1)^0,w,c
  5001   00393C  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  5002   00393E  5012               	movf	(??___xxtofl+2)^0,w,c
  5003   003940  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  5004   003942  5013               	movf	(??___xxtofl+3)^0,w,c
  5005   003944  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  5006   003946  5014               	movf	___xxtofl@sign^0,w,c
  5007   003948  B4D8               	btfsc	status,2,c
  5008   00394A  EFA9  F01C         	goto	u3571
  5009   00394E  EFAB  F01C         	goto	u3570
  5010   003952                     u3571:
  5011   003952  EFB3  F01C         	goto	l3509
  5012   003956                     u3570:
  5013   003956  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  5014   003958  EFB2  F01C         	goto	u3580
  5015   00395C  EFB0  F01C         	goto	u3581
  5016   003960                     u3581:
  5017   003960  EFB3  F01C         	goto	l3509
  5018   003964                     u3580:
  5019   003964  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  5020   003966                     l3509:
  5021   003966  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  5022   00396A  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5023   00396E  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5024   003972  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5025   003976                     l1258:
  5026   003976  0012               	return		;funcret
  5027   003978                     __end_of___xxtofl:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function ___fltol *****************
  5031 ;; Defined at:
  5032 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  f1              4    0[COMRAM] unsigned char 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;  exp1            1    9[COMRAM] unsigned char 
  5037 ;;  sign1           1    8[COMRAM] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  4    0[COMRAM] long 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;Total ram usage:       10 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_custom_floatmodulo
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text20
  5061   004252                     __ptext20:
  5062                           	callstack 0
  5063   004252                     ___fltol:
  5064                           	callstack 26
  5065   004252  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5066   004254  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5067   004256  6E0A               	movwf	___fltol@exp1^0,c
  5068   004258  500A               	movf	___fltol@exp1^0,w,c
  5069   00425A  A4D8               	btfss	status,2,c
  5070   00425C  EF32  F021         	goto	u3421
  5071   004260  EF34  F021         	goto	u3420
  5072   004264                     u3421:
  5073   004264  EF3E  F021         	goto	l3429
  5074   004268                     u3420:
  5075   004268                     l3425:
  5076   004268  0E00               	movlw	0
  5077   00426A  6E01               	movwf	?___fltol^0,c
  5078   00426C  0E00               	movlw	0
  5079   00426E  6E02               	movwf	(?___fltol+1)^0,c
  5080   004270  0E00               	movlw	0
  5081   004272  6E03               	movwf	(?___fltol+2)^0,c
  5082   004274  0E00               	movlw	0
  5083   004276  6E04               	movwf	(?___fltol+3)^0,c
  5084   004278  EFAB  F021         	goto	l897
  5085   00427C                     l3429:
  5086   00427C  C001  F005         	movff	___fltol@f1,??___fltol
  5087   004280  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5088   004284  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5089   004288  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5090   00428C  0E20               	movlw	32
  5091   00428E  EF4E  F021         	goto	u3430
  5092   004292                     u3435:
  5093   004292  90D8               	bcf	status,0,c
  5094   004294  3208               	rrcf	(??___fltol+3)^0,f,c
  5095   004296  3207               	rrcf	(??___fltol+2)^0,f,c
  5096   004298  3206               	rrcf	(??___fltol+1)^0,f,c
  5097   00429A  3205               	rrcf	??___fltol^0,f,c
  5098   00429C                     u3430:
  5099   00429C  2EE8               	decfsz	wreg,f,c
  5100   00429E  EF49  F021         	goto	u3435
  5101   0042A2  5005               	movf	??___fltol^0,w,c
  5102   0042A4  6E09               	movwf	___fltol@sign1^0,c
  5103   0042A6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5104   0042A8  0EFF               	movlw	255
  5105   0042AA  1601               	andwf	___fltol@f1^0,f,c
  5106   0042AC  0EFF               	movlw	255
  5107   0042AE  1602               	andwf	(___fltol@f1+1)^0,f,c
  5108   0042B0  0EFF               	movlw	255
  5109   0042B2  1603               	andwf	(___fltol@f1+2)^0,f,c
  5110   0042B4  0E00               	movlw	0
  5111   0042B6  1604               	andwf	(___fltol@f1+3)^0,f,c
  5112   0042B8  0E96               	movlw	150
  5113   0042BA  5E0A               	subwf	___fltol@exp1^0,f,c
  5114   0042BC  BE0A               	btfsc	___fltol@exp1^0,7,c
  5115   0042BE  EF65  F021         	goto	u3440
  5116   0042C2  EF63  F021         	goto	u3441
  5117   0042C6                     u3441:
  5118   0042C6  EF7B  F021         	goto	l3449
  5119   0042CA                     u3440:
  5120   0042CA  500A               	movf	___fltol@exp1^0,w,c
  5121   0042CC  0A80               	xorlw	128
  5122   0042CE  0F97               	addlw	151
  5123   0042D0  B0D8               	btfsc	status,0,c
  5124   0042D2  EF6D  F021         	goto	u3451
  5125   0042D6  EF6F  F021         	goto	u3450
  5126   0042DA                     u3451:
  5127   0042DA  EF71  F021         	goto	l3445
  5128   0042DE                     u3450:
  5129   0042DE  EF34  F021         	goto	l3425
  5130   0042E2                     l3445:
  5131   0042E2  90D8               	bcf	status,0,c
  5132   0042E4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5133   0042E6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5134   0042E8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5135   0042EA  3201               	rrcf	___fltol@f1^0,f,c
  5136   0042EC  3E0A               	incfsz	___fltol@exp1^0,f,c
  5137   0042EE  EF71  F021         	goto	l3445
  5138   0042F2  EF93  F021         	goto	l3459
  5139   0042F6                     l3449:
  5140   0042F6  0E1F               	movlw	31
  5141   0042F8  640A               	cpfsgt	___fltol@exp1^0,c
  5142   0042FA  EF81  F021         	goto	u3461
  5143   0042FE  EF83  F021         	goto	u3460
  5144   004302                     u3461:
  5145   004302  EF8B  F021         	goto	l3457
  5146   004306                     u3460:
  5147   004306  EF34  F021         	goto	l3425
  5148   00430A                     l3455:
  5149   00430A  90D8               	bcf	status,0,c
  5150   00430C  3601               	rlcf	___fltol@f1^0,f,c
  5151   00430E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5152   004310  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5153   004312  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5154   004314  060A               	decf	___fltol@exp1^0,f,c
  5155   004316                     l3457:
  5156   004316  500A               	movf	___fltol@exp1^0,w,c
  5157   004318  A4D8               	btfss	status,2,c
  5158   00431A  EF91  F021         	goto	u3471
  5159   00431E  EF93  F021         	goto	u3470
  5160   004322                     u3471:
  5161   004322  EF85  F021         	goto	l3455
  5162   004326                     u3470:
  5163   004326                     l3459:
  5164   004326  5009               	movf	___fltol@sign1^0,w,c
  5165   004328  B4D8               	btfsc	status,2,c
  5166   00432A  EF99  F021         	goto	u3481
  5167   00432E  EF9B  F021         	goto	u3480
  5168   004332                     u3481:
  5169   004332  EFA3  F021         	goto	l3463
  5170   004336                     u3480:
  5171   004336  1E04               	comf	(___fltol@f1+3)^0,f,c
  5172   004338  1E03               	comf	(___fltol@f1+2)^0,f,c
  5173   00433A  1E02               	comf	(___fltol@f1+1)^0,f,c
  5174   00433C  6C01               	negf	___fltol@f1^0,c
  5175   00433E  0E00               	movlw	0
  5176   004340  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5177   004342  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5178   004344  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5179   004346                     l3463:
  5180   004346  C001  F001         	movff	___fltol@f1,?___fltol
  5181   00434A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5182   00434E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5183   004352  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5184   004356                     l897:
  5185   004356  0012               	return		;funcret
  5186   004358                     __end_of___fltol:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function ___flsub *****************
  5190 ;; Defined at:
  5191 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  b               4   25[COMRAM] long 
  5194 ;;  a               4   29[COMRAM] long 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  4   25[COMRAM] long 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5206 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;Total ram usage:        8 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 1
  5213 ;; This function calls:
  5214 ;;		___fladd
  5215 ;; This function is called by:
  5216 ;;		_custom_floatmodulo
  5217 ;;		_RGB_to_HSV
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text21
  5222   004980                     __ptext21:
  5223                           	callstack 0
  5224   004980                     ___flsub:
  5225                           	callstack 25
  5226   004980  0E00               	movlw	0
  5227   004982  1A1E               	xorwf	___flsub@a^0,f,c
  5228   004984  0E00               	movlw	0
  5229   004986  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5230   004988  0E00               	movlw	0
  5231   00498A  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5232   00498C  0E80               	movlw	128
  5233   00498E  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5234   004990  C01A  F001         	movff	___flsub@b,___fladd@b
  5235   004994  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5236   004998  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5237   00499C  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5238   0049A0  C01E  F005         	movff	___flsub@a,___fladd@a
  5239   0049A4  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5240   0049A8  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5241   0049AC  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5242   0049B0  EC2B  F012         	call	___fladd	;wreg free
  5243   0049B4  C001  F01A         	movff	?___fladd,?___flsub
  5244   0049B8  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5245   0049BC  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5246   0049C0  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5247   0049C4  0012               	return		;funcret
  5248   0049C6                     __end_of___flsub:
  5249                           	callstack 0
  5250                           
  5251 ;; *************** function ___fladd *****************
  5252 ;; Defined at:
  5253 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  b               4    0[COMRAM] long 
  5256 ;;  a               4    4[COMRAM] long 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  grs             1   15[COMRAM] unsigned char 
  5259 ;;  bexp            1   14[COMRAM] unsigned char 
  5260 ;;  aexp            1   13[COMRAM] unsigned char 
  5261 ;;  signs           1   12[COMRAM] unsigned char 
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  4    0[COMRAM] unsigned char 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5271 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;Total ram usage:       16 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_RGB_to_HSV
  5281 ;;		___flsub
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text22
  5286   002456                     __ptext22:
  5287                           	callstack 0
  5288   002456                     ___fladd:
  5289                           	callstack 25
  5290   002456  5004               	movf	(___fladd@b+3)^0,w,c
  5291   002458  0B80               	andlw	128
  5292   00245A  6E0D               	movwf	___fladd@signs^0,c
  5293   00245C  5004               	movf	(___fladd@b+3)^0,w,c
  5294   00245E  2404               	addwf	(___fladd@b+3)^0,w,c
  5295   002460  6E0F               	movwf	___fladd@bexp^0,c
  5296   002462  AE03               	btfss	(___fladd@b+2)^0,7,c
  5297   002464  EF36  F012         	goto	u2561
  5298   002468  EF38  F012         	goto	u2560
  5299   00246C                     u2561:
  5300   00246C  EF39  F012         	goto	l2933
  5301   002470                     u2560:
  5302   002470  800F               	bsf	___fladd@bexp^0,0,c
  5303   002472                     l2933:
  5304   002472  500F               	movf	___fladd@bexp^0,w,c
  5305   002474  B4D8               	btfsc	status,2,c
  5306   002476  EF3F  F012         	goto	u2571
  5307   00247A  EF41  F012         	goto	u2570
  5308   00247E                     u2571:
  5309   00247E  EF56  F012         	goto	l2943
  5310   002482                     u2570:
  5311   002482  280F               	incf	___fladd@bexp^0,w,c
  5312   002484  A4D8               	btfss	status,2,c
  5313   002486  EF47  F012         	goto	u2581
  5314   00248A  EF49  F012         	goto	u2580
  5315   00248E                     u2581:
  5316   00248E  EF51  F012         	goto	l2939
  5317   002492                     u2580:
  5318   002492  0E00               	movlw	0
  5319   002494  6E01               	movwf	___fladd@b^0,c
  5320   002496  0E00               	movlw	0
  5321   002498  6E02               	movwf	(___fladd@b+1)^0,c
  5322   00249A  0E00               	movlw	0
  5323   00249C  6E03               	movwf	(___fladd@b+2)^0,c
  5324   00249E  0E00               	movlw	0
  5325   0024A0  6E04               	movwf	(___fladd@b+3)^0,c
  5326   0024A2                     l2939:
  5327   0024A2  8E03               	bsf	(___fladd@b+2)^0,7,c
  5328   0024A4  0E00               	movlw	0
  5329   0024A6  6E04               	movwf	(___fladd@b+3)^0,c
  5330   0024A8  EF5E  F012         	goto	l2945
  5331   0024AC                     l2943:
  5332   0024AC  0E00               	movlw	0
  5333   0024AE  6E01               	movwf	___fladd@b^0,c
  5334   0024B0  0E00               	movlw	0
  5335   0024B2  6E02               	movwf	(___fladd@b+1)^0,c
  5336   0024B4  0E00               	movlw	0
  5337   0024B6  6E03               	movwf	(___fladd@b+2)^0,c
  5338   0024B8  0E00               	movlw	0
  5339   0024BA  6E04               	movwf	(___fladd@b+3)^0,c
  5340   0024BC                     l2945:
  5341   0024BC  5008               	movf	(___fladd@a+3)^0,w,c
  5342   0024BE  0B80               	andlw	128
  5343   0024C0  6E0E               	movwf	___fladd@aexp^0,c
  5344   0024C2  500D               	movf	___fladd@signs^0,w,c
  5345   0024C4  180E               	xorwf	___fladd@aexp^0,w,c
  5346   0024C6  B4D8               	btfsc	status,2,c
  5347   0024C8  EF68  F012         	goto	u2591
  5348   0024CC  EF6A  F012         	goto	u2590
  5349   0024D0                     u2591:
  5350   0024D0  EF6B  F012         	goto	l2951
  5351   0024D4                     u2590:
  5352   0024D4  8C0D               	bsf	___fladd@signs^0,6,c
  5353   0024D6                     l2951:
  5354   0024D6  5008               	movf	(___fladd@a+3)^0,w,c
  5355   0024D8  2408               	addwf	(___fladd@a+3)^0,w,c
  5356   0024DA  6E0E               	movwf	___fladd@aexp^0,c
  5357   0024DC  AE07               	btfss	(___fladd@a+2)^0,7,c
  5358   0024DE  EF73  F012         	goto	u2601
  5359   0024E2  EF75  F012         	goto	u2600
  5360   0024E6                     u2601:
  5361   0024E6  EF76  F012         	goto	l2957
  5362   0024EA                     u2600:
  5363   0024EA  800E               	bsf	___fladd@aexp^0,0,c
  5364   0024EC                     l2957:
  5365   0024EC  500E               	movf	___fladd@aexp^0,w,c
  5366   0024EE  B4D8               	btfsc	status,2,c
  5367   0024F0  EF7C  F012         	goto	u2611
  5368   0024F4  EF7E  F012         	goto	u2610
  5369   0024F8                     u2611:
  5370   0024F8  EF93  F012         	goto	l2967
  5371   0024FC                     u2610:
  5372   0024FC  280E               	incf	___fladd@aexp^0,w,c
  5373   0024FE  A4D8               	btfss	status,2,c
  5374   002500  EF84  F012         	goto	u2621
  5375   002504  EF86  F012         	goto	u2620
  5376   002508                     u2621:
  5377   002508  EF8E  F012         	goto	l2963
  5378   00250C                     u2620:
  5379   00250C  0E00               	movlw	0
  5380   00250E  6E05               	movwf	___fladd@a^0,c
  5381   002510  0E00               	movlw	0
  5382   002512  6E06               	movwf	(___fladd@a+1)^0,c
  5383   002514  0E00               	movlw	0
  5384   002516  6E07               	movwf	(___fladd@a+2)^0,c
  5385   002518  0E00               	movlw	0
  5386   00251A  6E08               	movwf	(___fladd@a+3)^0,c
  5387   00251C                     l2963:
  5388   00251C  8E07               	bsf	(___fladd@a+2)^0,7,c
  5389   00251E  0E00               	movlw	0
  5390   002520  6E08               	movwf	(___fladd@a+3)^0,c
  5391   002522  EF9B  F012         	goto	l2969
  5392   002526                     l2967:
  5393   002526  0E00               	movlw	0
  5394   002528  6E05               	movwf	___fladd@a^0,c
  5395   00252A  0E00               	movlw	0
  5396   00252C  6E06               	movwf	(___fladd@a+1)^0,c
  5397   00252E  0E00               	movlw	0
  5398   002530  6E07               	movwf	(___fladd@a+2)^0,c
  5399   002532  0E00               	movlw	0
  5400   002534  6E08               	movwf	(___fladd@a+3)^0,c
  5401   002536                     l2969:
  5402   002536  500F               	movf	___fladd@bexp^0,w,c
  5403   002538  5C0E               	subwf	___fladd@aexp^0,w,c
  5404   00253A  B0D8               	btfsc	status,0,c
  5405   00253C  EFA2  F012         	goto	u2631
  5406   002540  EFA4  F012         	goto	u2630
  5407   002544                     u2631:
  5408   002544  EFCB  F012         	goto	l3005
  5409   002548                     u2630:
  5410   002548  AC0D               	btfss	___fladd@signs^0,6,c
  5411   00254A  EFA9  F012         	goto	u2641
  5412   00254E  EFAB  F012         	goto	u2640
  5413   002552                     u2641:
  5414   002552  EFAD  F012         	goto	l2975
  5415   002556                     u2640:
  5416   002556  0E80               	movlw	128
  5417   002558  1A0D               	xorwf	___fladd@signs^0,f,c
  5418   00255A                     l2975:
  5419   00255A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5420   00255E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5421   002562  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5422   002566  C001  F010         	movff	___fladd@b,___fladd@grs
  5423   00256A  C005  F001         	movff	___fladd@a,___fladd@b
  5424   00256E  C010  F005         	movff	___fladd@grs,___fladd@a
  5425   002572  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5426   002576  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5427   00257A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5428   00257E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5429   002582  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5430   002586  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5431   00258A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5432   00258E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5433   002592  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5434   002596                     l3005:
  5435   002596  0E00               	movlw	0
  5436   002598  6E10               	movwf	___fladd@grs^0,c
  5437   00259A  500F               	movf	___fladd@bexp^0,w,c
  5438   00259C  C00E  F009         	movff	___fladd@aexp,??___fladd
  5439   0025A0  6A0A               	clrf	(??___fladd+1)^0,c
  5440   0025A2  5E09               	subwf	??___fladd^0,f,c
  5441   0025A4  0E00               	movlw	0
  5442   0025A6  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5443   0025A8  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5444   0025AA  EFE0  F012         	goto	u2651
  5445   0025AE  500A               	movf	(??___fladd+1)^0,w,c
  5446   0025B0  E109               	bnz	u2650
  5447   0025B2  0E1A               	movlw	26
  5448   0025B4  5C09               	subwf	??___fladd^0,w,c
  5449   0025B6  A0D8               	btfss	status,0,c
  5450   0025B8  EFE0  F012         	goto	u2651
  5451   0025BC  EFE2  F012         	goto	u2650
  5452   0025C0                     u2651:
  5453   0025C0  EF19  F013         	goto	l1129
  5454   0025C4                     u2650:
  5455   0025C4  5001               	movf	___fladd@b^0,w,c
  5456   0025C6  1002               	iorwf	(___fladd@b+1)^0,w,c
  5457   0025C8  1003               	iorwf	(___fladd@b+2)^0,w,c
  5458   0025CA  1004               	iorwf	(___fladd@b+3)^0,w,c
  5459   0025CC  A4D8               	btfss	status,2,c
  5460   0025CE  EFEB  F012         	goto	u2661
  5461   0025D2  EFEE  F012         	goto	u2660
  5462   0025D6                     u2661:
  5463   0025D6  0E01               	movlw	1
  5464   0025D8  EFEF  F012         	goto	u2670
  5465   0025DC                     u2660:
  5466   0025DC  0E00               	movlw	0
  5467   0025DE                     u2670:
  5468   0025DE  6E10               	movwf	___fladd@grs^0,c
  5469   0025E0  0E00               	movlw	0
  5470   0025E2  6E01               	movwf	___fladd@b^0,c
  5471   0025E4  0E00               	movlw	0
  5472   0025E6  6E02               	movwf	(___fladd@b+1)^0,c
  5473   0025E8  0E00               	movlw	0
  5474   0025EA  6E03               	movwf	(___fladd@b+2)^0,c
  5475   0025EC  0E00               	movlw	0
  5476   0025EE  6E04               	movwf	(___fladd@b+3)^0,c
  5477   0025F0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5478   0025F4  EF22  F013         	goto	l1128
  5479   0025F8                     l1130:
  5480   0025F8  A010               	btfss	___fladd@grs^0,0,c
  5481   0025FA  EF01  F013         	goto	u2681
  5482   0025FE  EF03  F013         	goto	u2680
  5483   002602                     u2681:
  5484   002602  EF09  F013         	goto	l3017
  5485   002606                     u2680:
  5486   002606  90D8               	bcf	status,0,c
  5487   002608  3010               	rrcf	___fladd@grs^0,w,c
  5488   00260A  0901               	iorlw	1
  5489   00260C  6E10               	movwf	___fladd@grs^0,c
  5490   00260E  EF0B  F013         	goto	l3019
  5491   002612                     l3017:
  5492   002612  90D8               	bcf	status,0,c
  5493   002614  3210               	rrcf	___fladd@grs^0,f,c
  5494   002616                     l3019:
  5495   002616  A001               	btfss	___fladd@b^0,0,c
  5496   002618  EF10  F013         	goto	u2691
  5497   00261C  EF12  F013         	goto	u2690
  5498   002620                     u2691:
  5499   002620  EF13  F013         	goto	l3023
  5500   002624                     u2690:
  5501   002624  8E10               	bsf	___fladd@grs^0,7,c
  5502   002626                     l3023:
  5503   002626  3404               	rlcf	(___fladd@b+3)^0,w,c
  5504   002628  3204               	rrcf	(___fladd@b+3)^0,f,c
  5505   00262A  3203               	rrcf	(___fladd@b+2)^0,f,c
  5506   00262C  3202               	rrcf	(___fladd@b+1)^0,f,c
  5507   00262E  3201               	rrcf	___fladd@b^0,f,c
  5508   002630  2A0F               	incf	___fladd@bexp^0,f,c
  5509   002632                     l1129:
  5510   002632  500E               	movf	___fladd@aexp^0,w,c
  5511   002634  5C0F               	subwf	___fladd@bexp^0,w,c
  5512   002636  A0D8               	btfss	status,0,c
  5513   002638  EF20  F013         	goto	u2701
  5514   00263C  EF22  F013         	goto	u2700
  5515   002640                     u2701:
  5516   002640  EFFC  F012         	goto	l1130
  5517   002644                     u2700:
  5518   002644                     l1128:
  5519   002644  BC0D               	btfsc	___fladd@signs^0,6,c
  5520   002646  EF27  F013         	goto	u2711
  5521   00264A  EF29  F013         	goto	u2710
  5522   00264E                     u2711:
  5523   00264E  EF69  F013         	goto	l3051
  5524   002652                     u2710:
  5525   002652  500F               	movf	___fladd@bexp^0,w,c
  5526   002654  A4D8               	btfss	status,2,c
  5527   002656  EF2F  F013         	goto	u2721
  5528   00265A  EF31  F013         	goto	u2720
  5529   00265E                     u2721:
  5530   00265E  EF3B  F013         	goto	l3033
  5531   002662                     u2720:
  5532   002662  0E00               	movlw	0
  5533   002664  6E01               	movwf	?___fladd^0,c
  5534   002666  0E00               	movlw	0
  5535   002668  6E02               	movwf	(?___fladd+1)^0,c
  5536   00266A  0E00               	movlw	0
  5537   00266C  6E03               	movwf	(?___fladd+2)^0,c
  5538   00266E  0E00               	movlw	0
  5539   002670  6E04               	movwf	(?___fladd+3)^0,c
  5540   002672  EF8A  F014         	goto	l1137
  5541   002676                     l3033:
  5542   002676  5005               	movf	___fladd@a^0,w,c
  5543   002678  2601               	addwf	___fladd@b^0,f,c
  5544   00267A  5006               	movf	(___fladd@a+1)^0,w,c
  5545   00267C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5546   00267E  5007               	movf	(___fladd@a+2)^0,w,c
  5547   002680  2203               	addwfc	(___fladd@b+2)^0,f,c
  5548   002682  5008               	movf	(___fladd@a+3)^0,w,c
  5549   002684  2204               	addwfc	(___fladd@b+3)^0,f,c
  5550   002686  A004               	btfss	(___fladd@b+3)^0,0,c
  5551   002688  EF48  F013         	goto	u2731
  5552   00268C  EF4A  F013         	goto	u2730
  5553   002690                     u2731:
  5554   002690  EFF6  F013         	goto	l3087
  5555   002694                     u2730:
  5556   002694  A010               	btfss	___fladd@grs^0,0,c
  5557   002696  EF4F  F013         	goto	u2741
  5558   00269A  EF51  F013         	goto	u2740
  5559   00269E                     u2741:
  5560   00269E  EF57  F013         	goto	l3041
  5561   0026A2                     u2740:
  5562   0026A2  90D8               	bcf	status,0,c
  5563   0026A4  3010               	rrcf	___fladd@grs^0,w,c
  5564   0026A6  0901               	iorlw	1
  5565   0026A8  6E10               	movwf	___fladd@grs^0,c
  5566   0026AA  EF59  F013         	goto	l3043
  5567   0026AE                     l3041:
  5568   0026AE  90D8               	bcf	status,0,c
  5569   0026B0  3210               	rrcf	___fladd@grs^0,f,c
  5570   0026B2                     l3043:
  5571   0026B2  A001               	btfss	___fladd@b^0,0,c
  5572   0026B4  EF5E  F013         	goto	u2751
  5573   0026B8  EF60  F013         	goto	u2750
  5574   0026BC                     u2751:
  5575   0026BC  EF61  F013         	goto	l3047
  5576   0026C0                     u2750:
  5577   0026C0  8E10               	bsf	___fladd@grs^0,7,c
  5578   0026C2                     l3047:
  5579   0026C2  3404               	rlcf	(___fladd@b+3)^0,w,c
  5580   0026C4  3204               	rrcf	(___fladd@b+3)^0,f,c
  5581   0026C6  3203               	rrcf	(___fladd@b+2)^0,f,c
  5582   0026C8  3202               	rrcf	(___fladd@b+1)^0,f,c
  5583   0026CA  3201               	rrcf	___fladd@b^0,f,c
  5584   0026CC  2A0F               	incf	___fladd@bexp^0,f,c
  5585   0026CE  EFF6  F013         	goto	l3087
  5586   0026D2                     l3051:
  5587   0026D2  5005               	movf	___fladd@a^0,w,c
  5588   0026D4  5C01               	subwf	___fladd@b^0,w,c
  5589   0026D6  5006               	movf	(___fladd@a+1)^0,w,c
  5590   0026D8  5802               	subwfb	(___fladd@b+1)^0,w,c
  5591   0026DA  5007               	movf	(___fladd@a+2)^0,w,c
  5592   0026DC  5803               	subwfb	(___fladd@b+2)^0,w,c
  5593   0026DE  5004               	movf	(___fladd@b+3)^0,w,c
  5594   0026E0  0A80               	xorlw	128
  5595   0026E2  6E09               	movwf	??___fladd^0,c
  5596   0026E4  5008               	movf	(___fladd@a+3)^0,w,c
  5597   0026E6  0A80               	xorlw	128
  5598   0026E8  5809               	subwfb	??___fladd^0,w,c
  5599   0026EA  B0D8               	btfsc	status,0,c
  5600   0026EC  EF7A  F013         	goto	u2761
  5601   0026F0  EF7C  F013         	goto	u2760
  5602   0026F4                     u2761:
  5603   0026F4  EFA7  F013         	goto	l3061
  5604   0026F8                     u2760:
  5605   0026F8  5001               	movf	___fladd@b^0,w,c
  5606   0026FA  5C05               	subwf	___fladd@a^0,w,c
  5607   0026FC  6E09               	movwf	??___fladd^0,c
  5608   0026FE  5002               	movf	(___fladd@b+1)^0,w,c
  5609   002700  5806               	subwfb	(___fladd@a+1)^0,w,c
  5610   002702  6E0A               	movwf	(??___fladd+1)^0,c
  5611   002704  5003               	movf	(___fladd@b+2)^0,w,c
  5612   002706  5807               	subwfb	(___fladd@a+2)^0,w,c
  5613   002708  6E0B               	movwf	(??___fladd+2)^0,c
  5614   00270A  5004               	movf	(___fladd@b+3)^0,w,c
  5615   00270C  5808               	subwfb	(___fladd@a+3)^0,w,c
  5616   00270E  6E0C               	movwf	(??___fladd+3)^0,c
  5617   002710  0EFF               	movlw	255
  5618   002712  2409               	addwf	??___fladd^0,w,c
  5619   002714  6E01               	movwf	___fladd@b^0,c
  5620   002716  0EFF               	movlw	255
  5621   002718  200A               	addwfc	(??___fladd+1)^0,w,c
  5622   00271A  6E02               	movwf	(___fladd@b+1)^0,c
  5623   00271C  0EFF               	movlw	255
  5624   00271E  200B               	addwfc	(??___fladd+2)^0,w,c
  5625   002720  6E03               	movwf	(___fladd@b+2)^0,c
  5626   002722  0EFF               	movlw	255
  5627   002724  200C               	addwfc	(??___fladd+3)^0,w,c
  5628   002726  6E04               	movwf	(___fladd@b+3)^0,c
  5629   002728  0E80               	movlw	128
  5630   00272A  1A0D               	xorwf	___fladd@signs^0,f,c
  5631   00272C  6C10               	negf	___fladd@grs^0,c
  5632   00272E  5010               	movf	___fladd@grs^0,w,c
  5633   002730  A4D8               	btfss	status,2,c
  5634   002732  EF9D  F013         	goto	u2771
  5635   002736  EF9F  F013         	goto	u2770
  5636   00273A                     u2771:
  5637   00273A  EFAF  F013         	goto	l1145
  5638   00273E                     u2770:
  5639   00273E  0E01               	movlw	1
  5640   002740  2601               	addwf	___fladd@b^0,f,c
  5641   002742  0E00               	movlw	0
  5642   002744  2202               	addwfc	(___fladd@b+1)^0,f,c
  5643   002746  2203               	addwfc	(___fladd@b+2)^0,f,c
  5644   002748  2204               	addwfc	(___fladd@b+3)^0,f,c
  5645   00274A  EFAF  F013         	goto	l1145
  5646   00274E                     l3061:
  5647   00274E  5005               	movf	___fladd@a^0,w,c
  5648   002750  5E01               	subwf	___fladd@b^0,f,c
  5649   002752  5006               	movf	(___fladd@a+1)^0,w,c
  5650   002754  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5651   002756  5007               	movf	(___fladd@a+2)^0,w,c
  5652   002758  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5653   00275A  5008               	movf	(___fladd@a+3)^0,w,c
  5654   00275C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5655   00275E                     l1145:
  5656   00275E  5001               	movf	___fladd@b^0,w,c
  5657   002760  1002               	iorwf	(___fladd@b+1)^0,w,c
  5658   002762  1003               	iorwf	(___fladd@b+2)^0,w,c
  5659   002764  1004               	iorwf	(___fladd@b+3)^0,w,c
  5660   002766  A4D8               	btfss	status,2,c
  5661   002768  EFB8  F013         	goto	u2781
  5662   00276C  EFBA  F013         	goto	u2780
  5663   002770                     u2781:
  5664   002770  EFEF  F013         	goto	l3085
  5665   002774                     u2780:
  5666   002774  5010               	movf	___fladd@grs^0,w,c
  5667   002776  A4D8               	btfss	status,2,c
  5668   002778  EFC0  F013         	goto	u2791
  5669   00277C  EFC2  F013         	goto	u2790
  5670   002780                     u2791:
  5671   002780  EFEF  F013         	goto	l3085
  5672   002784                     u2790:
  5673   002784  0E00               	movlw	0
  5674   002786  6E01               	movwf	?___fladd^0,c
  5675   002788  0E00               	movlw	0
  5676   00278A  6E02               	movwf	(?___fladd+1)^0,c
  5677   00278C  0E00               	movlw	0
  5678   00278E  6E03               	movwf	(?___fladd+2)^0,c
  5679   002790  0E00               	movlw	0
  5680   002792  6E04               	movwf	(?___fladd+3)^0,c
  5681   002794  EF8A  F014         	goto	l1137
  5682   002798                     l3069:
  5683   002798  90D8               	bcf	status,0,c
  5684   00279A  3601               	rlcf	___fladd@b^0,f,c
  5685   00279C  3602               	rlcf	(___fladd@b+1)^0,f,c
  5686   00279E  3603               	rlcf	(___fladd@b+2)^0,f,c
  5687   0027A0  3604               	rlcf	(___fladd@b+3)^0,f,c
  5688   0027A2  AE10               	btfss	___fladd@grs^0,7,c
  5689   0027A4  EFD6  F013         	goto	u2801
  5690   0027A8  EFD8  F013         	goto	u2800
  5691   0027AC                     u2801:
  5692   0027AC  EFD9  F013         	goto	l3075
  5693   0027B0                     u2800:
  5694   0027B0  8001               	bsf	___fladd@b^0,0,c
  5695   0027B2                     l3075:
  5696   0027B2  A010               	btfss	___fladd@grs^0,0,c
  5697   0027B4  EFDE  F013         	goto	u2811
  5698   0027B8  EFE0  F013         	goto	u2810
  5699   0027BC                     u2811:
  5700   0027BC  EFE4  F013         	goto	l3079
  5701   0027C0                     u2810:
  5702   0027C0  80D8               	bsf	status,0,c
  5703   0027C2  3610               	rlcf	___fladd@grs^0,f,c
  5704   0027C4  EFE6  F013         	goto	l3081
  5705   0027C8                     l3079:
  5706   0027C8  90D8               	bcf	status,0,c
  5707   0027CA  3610               	rlcf	___fladd@grs^0,f,c
  5708   0027CC                     l3081:
  5709   0027CC  500F               	movf	___fladd@bexp^0,w,c
  5710   0027CE  B4D8               	btfsc	status,2,c
  5711   0027D0  EFEC  F013         	goto	u2821
  5712   0027D4  EFEE  F013         	goto	u2820
  5713   0027D8                     u2821:
  5714   0027D8  EFEF  F013         	goto	l3085
  5715   0027DC                     u2820:
  5716   0027DC  060F               	decf	___fladd@bexp^0,f,c
  5717   0027DE                     l3085:
  5718   0027DE  AE03               	btfss	(___fladd@b+2)^0,7,c
  5719   0027E0  EFF4  F013         	goto	u2831
  5720   0027E4  EFF6  F013         	goto	u2830
  5721   0027E8                     u2831:
  5722   0027E8  EFCC  F013         	goto	l3069
  5723   0027EC                     u2830:
  5724   0027EC                     l3087:
  5725   0027EC  0E00               	movlw	0
  5726   0027EE  6E0E               	movwf	___fladd@aexp^0,c
  5727   0027F0  AE10               	btfss	___fladd@grs^0,7,c
  5728   0027F2  EFFD  F013         	goto	u2841
  5729   0027F6  EFFF  F013         	goto	u2840
  5730   0027FA                     u2841:
  5731   0027FA  EF17  F014         	goto	l1154
  5732   0027FE                     u2840:
  5733   0027FE  C010  F009         	movff	___fladd@grs,??___fladd
  5734   002802  0E7F               	movlw	127
  5735   002804  1609               	andwf	??___fladd^0,f,c
  5736   002806  B4D8               	btfsc	status,2,c
  5737   002808  EF08  F014         	goto	u2851
  5738   00280C  EF0A  F014         	goto	u2850
  5739   002810                     u2851:
  5740   002810  EF0E  F014         	goto	l1155
  5741   002814                     u2850:
  5742   002814                     l3093:
  5743   002814  0E01               	movlw	1
  5744   002816  6E0E               	movwf	___fladd@aexp^0,c
  5745   002818  EF17  F014         	goto	l1154
  5746   00281C                     l1155:
  5747   00281C  A001               	btfss	___fladd@b^0,0,c
  5748   00281E  EF13  F014         	goto	u2861
  5749   002822  EF15  F014         	goto	u2860
  5750   002826                     u2861:
  5751   002826  EF17  F014         	goto	l1154
  5752   00282A                     u2860:
  5753   00282A  EF0A  F014         	goto	l3093
  5754   00282E                     l1154:
  5755   00282E  500E               	movf	___fladd@aexp^0,w,c
  5756   002830  B4D8               	btfsc	status,2,c
  5757   002832  EF1D  F014         	goto	u2871
  5758   002836  EF1F  F014         	goto	u2870
  5759   00283A                     u2871:
  5760   00283A  EF4A  F014         	goto	l3105
  5761   00283E                     u2870:
  5762   00283E  0E01               	movlw	1
  5763   002840  2601               	addwf	___fladd@b^0,f,c
  5764   002842  0E00               	movlw	0
  5765   002844  2202               	addwfc	(___fladd@b+1)^0,f,c
  5766   002846  2203               	addwfc	(___fladd@b+2)^0,f,c
  5767   002848  2204               	addwfc	(___fladd@b+3)^0,f,c
  5768   00284A  A004               	btfss	(___fladd@b+3)^0,0,c
  5769   00284C  EF2A  F014         	goto	u2881
  5770   002850  EF2C  F014         	goto	u2880
  5771   002854                     u2881:
  5772   002854  EF4A  F014         	goto	l3105
  5773   002858                     u2880:
  5774   002858  C001  F009         	movff	___fladd@b,??___fladd
  5775   00285C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5776   002860  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5777   002864  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5778   002868  340C               	rlcf	(??___fladd+3)^0,w,c
  5779   00286A  320C               	rrcf	(??___fladd+3)^0,f,c
  5780   00286C  320B               	rrcf	(??___fladd+2)^0,f,c
  5781   00286E  320A               	rrcf	(??___fladd+1)^0,f,c
  5782   002870  3209               	rrcf	??___fladd^0,f,c
  5783   002872  C009  F001         	movff	??___fladd,___fladd@b
  5784   002876  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5785   00287A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5786   00287E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5787   002882  280F               	incf	___fladd@bexp^0,w,c
  5788   002884  B4D8               	btfsc	status,2,c
  5789   002886  EF47  F014         	goto	u2891
  5790   00288A  EF49  F014         	goto	u2890
  5791   00288E                     u2891:
  5792   00288E  EF4A  F014         	goto	l3105
  5793   002892                     u2890:
  5794   002892  2A0F               	incf	___fladd@bexp^0,f,c
  5795   002894                     l3105:
  5796   002894  280F               	incf	___fladd@bexp^0,w,c
  5797   002896  B4D8               	btfsc	status,2,c
  5798   002898  EF50  F014         	goto	u2901
  5799   00289C  EF52  F014         	goto	u2900
  5800   0028A0                     u2901:
  5801   0028A0  EF5A  F014         	goto	l3109
  5802   0028A4                     u2900:
  5803   0028A4  500F               	movf	___fladd@bexp^0,w,c
  5804   0028A6  A4D8               	btfss	status,2,c
  5805   0028A8  EF58  F014         	goto	u2911
  5806   0028AC  EF5A  F014         	goto	u2910
  5807   0028B0                     u2911:
  5808   0028B0  EF6C  F014         	goto	l3113
  5809   0028B4                     u2910:
  5810   0028B4                     l3109:
  5811   0028B4  0E00               	movlw	0
  5812   0028B6  6E01               	movwf	___fladd@b^0,c
  5813   0028B8  0E00               	movlw	0
  5814   0028BA  6E02               	movwf	(___fladd@b+1)^0,c
  5815   0028BC  0E00               	movlw	0
  5816   0028BE  6E03               	movwf	(___fladd@b+2)^0,c
  5817   0028C0  0E00               	movlw	0
  5818   0028C2  6E04               	movwf	(___fladd@b+3)^0,c
  5819   0028C4  500F               	movf	___fladd@bexp^0,w,c
  5820   0028C6  A4D8               	btfss	status,2,c
  5821   0028C8  EF68  F014         	goto	u2921
  5822   0028CC  EF6A  F014         	goto	u2920
  5823   0028D0                     u2921:
  5824   0028D0  EF6C  F014         	goto	l3113
  5825   0028D4                     u2920:
  5826   0028D4  0E00               	movlw	0
  5827   0028D6  6E0D               	movwf	___fladd@signs^0,c
  5828   0028D8                     l3113:
  5829   0028D8  A00F               	btfss	___fladd@bexp^0,0,c
  5830   0028DA  EF71  F014         	goto	u2931
  5831   0028DE  EF73  F014         	goto	u2930
  5832   0028E2                     u2931:
  5833   0028E2  EF76  F014         	goto	l3117
  5834   0028E6                     u2930:
  5835   0028E6  8E03               	bsf	(___fladd@b+2)^0,7,c
  5836   0028E8  EF77  F014         	goto	l3119
  5837   0028EC                     l3117:
  5838   0028EC  9E03               	bcf	(___fladd@b+2)^0,7,c
  5839   0028EE                     l3119:
  5840   0028EE  90D8               	bcf	status,0,c
  5841   0028F0  300F               	rrcf	___fladd@bexp^0,w,c
  5842   0028F2  6E04               	movwf	(___fladd@b+3)^0,c
  5843   0028F4  AE0D               	btfss	___fladd@signs^0,7,c
  5844   0028F6  EF7F  F014         	goto	u2941
  5845   0028FA  EF81  F014         	goto	u2940
  5846   0028FE                     u2941:
  5847   0028FE  EF82  F014         	goto	l3125
  5848   002902                     u2940:
  5849   002902  8E04               	bsf	(___fladd@b+3)^0,7,c
  5850   002904                     l3125:
  5851   002904  C001  F001         	movff	___fladd@b,?___fladd
  5852   002908  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5853   00290C  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5854   002910  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5855   002914                     l1137:
  5856   002914  0012               	return		;funcret
  5857   002916                     __end_of___fladd:
  5858                           	callstack 0
  5859                           
  5860 ;; *************** function ___flmul *****************
  5861 ;; Defined at:
  5862 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  b               4   58[COMRAM] unsigned char 
  5865 ;;  a               4   62[COMRAM] unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  prod            4   77[COMRAM] struct .
  5868 ;;  grs             4   71[COMRAM] unsigned long 
  5869 ;;  temp            2   81[COMRAM] struct .
  5870 ;;  bexp            1   76[COMRAM] unsigned char 
  5871 ;;  aexp            1   75[COMRAM] unsigned char 
  5872 ;;  sign            1   70[COMRAM] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  4   58[COMRAM] unsigned char 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0, prodl, prodh
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5886 ;;Total ram usage:       25 bytes
  5887 ;; Hardware stack levels used: 1
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_custom_floatmodulo
  5892 ;;		_RGB_to_HSV
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text23
  5897   002DD2                     __ptext23:
  5898                           	callstack 0
  5899   002DD2                     ___flmul:
  5900                           	callstack 26
  5901   002DD2  503E               	movf	(___flmul@b+3)^0,w,c
  5902   002DD4  0B80               	andlw	128
  5903   002DD6  6E47               	movwf	___flmul@sign^0,c
  5904   002DD8  503E               	movf	(___flmul@b+3)^0,w,c
  5905   002DDA  243E               	addwf	(___flmul@b+3)^0,w,c
  5906   002DDC  6E4D               	movwf	___flmul@bexp^0,c
  5907   002DDE  AE3D               	btfss	(___flmul@b+2)^0,7,c
  5908   002DE0  EFF4  F016         	goto	u3201
  5909   002DE4  EFF6  F016         	goto	u3200
  5910   002DE8                     u3201:
  5911   002DE8  EFF7  F016         	goto	l3277
  5912   002DEC                     u3200:
  5913   002DEC  804D               	bsf	___flmul@bexp^0,0,c
  5914   002DEE                     l3277:
  5915   002DEE  504D               	movf	___flmul@bexp^0,w,c
  5916   002DF0  B4D8               	btfsc	status,2,c
  5917   002DF2  EFFD  F016         	goto	u3211
  5918   002DF6  EFFF  F016         	goto	u3210
  5919   002DFA                     u3211:
  5920   002DFA  EF12  F017         	goto	l3285
  5921   002DFE                     u3210:
  5922   002DFE  284D               	incf	___flmul@bexp^0,w,c
  5923   002E00  A4D8               	btfss	status,2,c
  5924   002E02  EF05  F017         	goto	u3221
  5925   002E06  EF07  F017         	goto	u3220
  5926   002E0A                     u3221:
  5927   002E0A  EF0F  F017         	goto	l3283
  5928   002E0E                     u3220:
  5929   002E0E  0E00               	movlw	0
  5930   002E10  6E3B               	movwf	___flmul@b^0,c
  5931   002E12  0E00               	movlw	0
  5932   002E14  6E3C               	movwf	(___flmul@b+1)^0,c
  5933   002E16  0E00               	movlw	0
  5934   002E18  6E3D               	movwf	(___flmul@b+2)^0,c
  5935   002E1A  0E00               	movlw	0
  5936   002E1C  6E3E               	movwf	(___flmul@b+3)^0,c
  5937   002E1E                     l3283:
  5938   002E1E  8E3D               	bsf	(___flmul@b+2)^0,7,c
  5939   002E20  EF1A  F017         	goto	l3287
  5940   002E24                     l3285:
  5941   002E24  0E00               	movlw	0
  5942   002E26  6E3B               	movwf	___flmul@b^0,c
  5943   002E28  0E00               	movlw	0
  5944   002E2A  6E3C               	movwf	(___flmul@b+1)^0,c
  5945   002E2C  0E00               	movlw	0
  5946   002E2E  6E3D               	movwf	(___flmul@b+2)^0,c
  5947   002E30  0E00               	movlw	0
  5948   002E32  6E3E               	movwf	(___flmul@b+3)^0,c
  5949   002E34                     l3287:
  5950   002E34  5042               	movf	(___flmul@a+3)^0,w,c
  5951   002E36  0B80               	andlw	128
  5952   002E38  1A47               	xorwf	___flmul@sign^0,f,c
  5953   002E3A  5042               	movf	(___flmul@a+3)^0,w,c
  5954   002E3C  2442               	addwf	(___flmul@a+3)^0,w,c
  5955   002E3E  6E4C               	movwf	___flmul@aexp^0,c
  5956   002E40  AE41               	btfss	(___flmul@a+2)^0,7,c
  5957   002E42  EF25  F017         	goto	u3231
  5958   002E46  EF27  F017         	goto	u3230
  5959   002E4A                     u3231:
  5960   002E4A  EF28  F017         	goto	l3295
  5961   002E4E                     u3230:
  5962   002E4E  804C               	bsf	___flmul@aexp^0,0,c
  5963   002E50                     l3295:
  5964   002E50  504C               	movf	___flmul@aexp^0,w,c
  5965   002E52  B4D8               	btfsc	status,2,c
  5966   002E54  EF2E  F017         	goto	u3241
  5967   002E58  EF30  F017         	goto	u3240
  5968   002E5C                     u3241:
  5969   002E5C  EF43  F017         	goto	l3303
  5970   002E60                     u3240:
  5971   002E60  284C               	incf	___flmul@aexp^0,w,c
  5972   002E62  A4D8               	btfss	status,2,c
  5973   002E64  EF36  F017         	goto	u3251
  5974   002E68  EF38  F017         	goto	u3250
  5975   002E6C                     u3251:
  5976   002E6C  EF40  F017         	goto	l3301
  5977   002E70                     u3250:
  5978   002E70  0E00               	movlw	0
  5979   002E72  6E3F               	movwf	___flmul@a^0,c
  5980   002E74  0E00               	movlw	0
  5981   002E76  6E40               	movwf	(___flmul@a+1)^0,c
  5982   002E78  0E00               	movlw	0
  5983   002E7A  6E41               	movwf	(___flmul@a+2)^0,c
  5984   002E7C  0E00               	movlw	0
  5985   002E7E  6E42               	movwf	(___flmul@a+3)^0,c
  5986   002E80                     l3301:
  5987   002E80  8E41               	bsf	(___flmul@a+2)^0,7,c
  5988   002E82  EF4B  F017         	goto	l1214
  5989   002E86                     l3303:
  5990   002E86  0E00               	movlw	0
  5991   002E88  6E3F               	movwf	___flmul@a^0,c
  5992   002E8A  0E00               	movlw	0
  5993   002E8C  6E40               	movwf	(___flmul@a+1)^0,c
  5994   002E8E  0E00               	movlw	0
  5995   002E90  6E41               	movwf	(___flmul@a+2)^0,c
  5996   002E92  0E00               	movlw	0
  5997   002E94  6E42               	movwf	(___flmul@a+3)^0,c
  5998   002E96                     l1214:
  5999   002E96  504C               	movf	___flmul@aexp^0,w,c
  6000   002E98  B4D8               	btfsc	status,2,c
  6001   002E9A  EF51  F017         	goto	u3261
  6002   002E9E  EF53  F017         	goto	u3260
  6003   002EA2                     u3261:
  6004   002EA2  EF5B  F017         	goto	l3307
  6005   002EA6                     u3260:
  6006   002EA6  504D               	movf	___flmul@bexp^0,w,c
  6007   002EA8  A4D8               	btfss	status,2,c
  6008   002EAA  EF59  F017         	goto	u3271
  6009   002EAE  EF5B  F017         	goto	u3270
  6010   002EB2                     u3271:
  6011   002EB2  EF65  F017         	goto	l3311
  6012   002EB6                     u3270:
  6013   002EB6                     l3307:
  6014   002EB6  0E00               	movlw	0
  6015   002EB8  6E3B               	movwf	?___flmul^0,c
  6016   002EBA  0E00               	movlw	0
  6017   002EBC  6E3C               	movwf	(?___flmul+1)^0,c
  6018   002EBE  0E00               	movlw	0
  6019   002EC0  6E3D               	movwf	(?___flmul+2)^0,c
  6020   002EC2  0E00               	movlw	0
  6021   002EC4  6E3E               	movwf	(?___flmul+3)^0,c
  6022   002EC6  EFFD  F018         	goto	l1218
  6023   002ECA                     l3311:
  6024   002ECA  5041               	movf	(___flmul@a+2)^0,w,c
  6025   002ECC  023B               	mulwf	___flmul@b^0,c
  6026   002ECE  CFF3 F052          	movff	prodl,___flmul@temp
  6027   002ED2  CFF4 F053          	movff	prodh,___flmul@temp+1
  6028   002ED6  5052               	movf	___flmul@temp^0,w,c
  6029   002ED8  6E48               	movwf	___flmul@grs^0,c
  6030   002EDA  6A49               	clrf	(___flmul@grs+1)^0,c
  6031   002EDC  6A4A               	clrf	(___flmul@grs+2)^0,c
  6032   002EDE  6A4B               	clrf	(___flmul@grs+3)^0,c
  6033   002EE0  5053               	movf	(___flmul@temp+1)^0,w,c
  6034   002EE2  6E4E               	movwf	___flmul@prod^0,c
  6035   002EE4  6A4F               	clrf	(___flmul@prod+1)^0,c
  6036   002EE6  6A50               	clrf	(___flmul@prod+2)^0,c
  6037   002EE8  6A51               	clrf	(___flmul@prod+3)^0,c
  6038   002EEA  5040               	movf	(___flmul@a+1)^0,w,c
  6039   002EEC  023C               	mulwf	(___flmul@b+1)^0,c
  6040   002EEE  CFF3 F052          	movff	prodl,___flmul@temp
  6041   002EF2  CFF4 F053          	movff	prodh,___flmul@temp+1
  6042   002EF6  5052               	movf	___flmul@temp^0,w,c
  6043   002EF8  2648               	addwf	___flmul@grs^0,f,c
  6044   002EFA  0E00               	movlw	0
  6045   002EFC  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6046   002EFE  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6047   002F00  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6048   002F02  5053               	movf	(___flmul@temp+1)^0,w,c
  6049   002F04  264E               	addwf	___flmul@prod^0,f,c
  6050   002F06  0E00               	movlw	0
  6051   002F08  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6052   002F0A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6053   002F0C  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6054   002F0E  503F               	movf	___flmul@a^0,w,c
  6055   002F10  023D               	mulwf	(___flmul@b+2)^0,c
  6056   002F12  CFF3 F052          	movff	prodl,___flmul@temp
  6057   002F16  CFF4 F053          	movff	prodh,___flmul@temp+1
  6058   002F1A  5052               	movf	___flmul@temp^0,w,c
  6059   002F1C  2648               	addwf	___flmul@grs^0,f,c
  6060   002F1E  0E00               	movlw	0
  6061   002F20  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6062   002F22  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6063   002F24  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6064   002F26  5053               	movf	(___flmul@temp+1)^0,w,c
  6065   002F28  264E               	addwf	___flmul@prod^0,f,c
  6066   002F2A  0E00               	movlw	0
  6067   002F2C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6068   002F2E  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6069   002F30  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6070   002F32  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6071   002F36  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6072   002F3A  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6073   002F3E  6A48               	clrf	___flmul@grs^0,c
  6074   002F40  503F               	movf	___flmul@a^0,w,c
  6075   002F42  023C               	mulwf	(___flmul@b+1)^0,c
  6076   002F44  CFF3 F052          	movff	prodl,___flmul@temp
  6077   002F48  CFF4 F053          	movff	prodh,___flmul@temp+1
  6078   002F4C  5052               	movf	___flmul@temp^0,w,c
  6079   002F4E  2648               	addwf	___flmul@grs^0,f,c
  6080   002F50  5053               	movf	(___flmul@temp+1)^0,w,c
  6081   002F52  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6082   002F54  0E00               	movlw	0
  6083   002F56  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6084   002F58  0E00               	movlw	0
  6085   002F5A  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6086   002F5C  5040               	movf	(___flmul@a+1)^0,w,c
  6087   002F5E  023B               	mulwf	___flmul@b^0,c
  6088   002F60  CFF3 F052          	movff	prodl,___flmul@temp
  6089   002F64  CFF4 F053          	movff	prodh,___flmul@temp+1
  6090   002F68  5052               	movf	___flmul@temp^0,w,c
  6091   002F6A  2648               	addwf	___flmul@grs^0,f,c
  6092   002F6C  5053               	movf	(___flmul@temp+1)^0,w,c
  6093   002F6E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6094   002F70  0E00               	movlw	0
  6095   002F72  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6096   002F74  0E00               	movlw	0
  6097   002F76  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6098   002F78  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6099   002F7C  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6100   002F80  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6101   002F84  6A48               	clrf	___flmul@grs^0,c
  6102   002F86  503F               	movf	___flmul@a^0,w,c
  6103   002F88  023B               	mulwf	___flmul@b^0,c
  6104   002F8A  CFF3 F052          	movff	prodl,___flmul@temp
  6105   002F8E  CFF4 F053          	movff	prodh,___flmul@temp+1
  6106   002F92  5052               	movf	___flmul@temp^0,w,c
  6107   002F94  2648               	addwf	___flmul@grs^0,f,c
  6108   002F96  5053               	movf	(___flmul@temp+1)^0,w,c
  6109   002F98  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6110   002F9A  0E00               	movlw	0
  6111   002F9C  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6112   002F9E  0E00               	movlw	0
  6113   002FA0  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6114   002FA2  5041               	movf	(___flmul@a+2)^0,w,c
  6115   002FA4  023C               	mulwf	(___flmul@b+1)^0,c
  6116   002FA6  CFF3 F052          	movff	prodl,___flmul@temp
  6117   002FAA  CFF4 F053          	movff	prodh,___flmul@temp+1
  6118   002FAE  5052               	movf	___flmul@temp^0,w,c
  6119   002FB0  264E               	addwf	___flmul@prod^0,f,c
  6120   002FB2  5053               	movf	(___flmul@temp+1)^0,w,c
  6121   002FB4  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6122   002FB6  0E00               	movlw	0
  6123   002FB8  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6124   002FBA  0E00               	movlw	0
  6125   002FBC  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6126   002FBE  5040               	movf	(___flmul@a+1)^0,w,c
  6127   002FC0  023D               	mulwf	(___flmul@b+2)^0,c
  6128   002FC2  CFF3 F052          	movff	prodl,___flmul@temp
  6129   002FC6  CFF4 F053          	movff	prodh,___flmul@temp+1
  6130   002FCA  5052               	movf	___flmul@temp^0,w,c
  6131   002FCC  264E               	addwf	___flmul@prod^0,f,c
  6132   002FCE  5053               	movf	(___flmul@temp+1)^0,w,c
  6133   002FD0  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6134   002FD2  0E00               	movlw	0
  6135   002FD4  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6136   002FD6  0E00               	movlw	0
  6137   002FD8  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6138   002FDA  5041               	movf	(___flmul@a+2)^0,w,c
  6139   002FDC  023D               	mulwf	(___flmul@b+2)^0,c
  6140   002FDE  CFF3 F052          	movff	prodl,___flmul@temp
  6141   002FE2  CFF4 F053          	movff	prodh,___flmul@temp+1
  6142   002FE6  5052               	movf	___flmul@temp^0,w,c
  6143   002FE8  6E43               	movwf	??___flmul^0,c
  6144   002FEA  5053               	movf	(___flmul@temp+1)^0,w,c
  6145   002FEC  6E44               	movwf	(??___flmul+1)^0,c
  6146   002FEE  6A45               	clrf	(??___flmul+2)^0,c
  6147   002FF0  6A46               	clrf	(??___flmul+3)^0,c
  6148   002FF2  C045  F046         	movff	??___flmul+2,??___flmul+3
  6149   002FF6  C044  F045         	movff	??___flmul+1,??___flmul+2
  6150   002FFA  C043  F044         	movff	??___flmul,??___flmul+1
  6151   002FFE  6A43               	clrf	??___flmul^0,c
  6152   003000  5043               	movf	??___flmul^0,w,c
  6153   003002  264E               	addwf	___flmul@prod^0,f,c
  6154   003004  5044               	movf	(??___flmul+1)^0,w,c
  6155   003006  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6156   003008  5045               	movf	(??___flmul+2)^0,w,c
  6157   00300A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6158   00300C  5046               	movf	(??___flmul+3)^0,w,c
  6159   00300E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6160   003010  C048  F043         	movff	___flmul@grs,??___flmul
  6161   003014  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  6162   003018  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  6163   00301C  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  6164   003020  0E19               	movlw	25
  6165   003022  EF18  F018         	goto	u3280
  6166   003026                     u3285:
  6167   003026  90D8               	bcf	status,0,c
  6168   003028  3246               	rrcf	(??___flmul+3)^0,f,c
  6169   00302A  3245               	rrcf	(??___flmul+2)^0,f,c
  6170   00302C  3244               	rrcf	(??___flmul+1)^0,f,c
  6171   00302E  3243               	rrcf	??___flmul^0,f,c
  6172   003030                     u3280:
  6173   003030  2EE8               	decfsz	wreg,f,c
  6174   003032  EF13  F018         	goto	u3285
  6175   003036  5043               	movf	??___flmul^0,w,c
  6176   003038  264E               	addwf	___flmul@prod^0,f,c
  6177   00303A  5044               	movf	(??___flmul+1)^0,w,c
  6178   00303C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6179   00303E  5045               	movf	(??___flmul+2)^0,w,c
  6180   003040  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6181   003042  5046               	movf	(??___flmul+3)^0,w,c
  6182   003044  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6183   003046  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6184   00304A  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6185   00304E  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6186   003052  6A48               	clrf	___flmul@grs^0,c
  6187   003054  504C               	movf	___flmul@aexp^0,w,c
  6188   003056  C04D  F043         	movff	___flmul@bexp,??___flmul
  6189   00305A  6A44               	clrf	(??___flmul+1)^0,c
  6190   00305C  2643               	addwf	??___flmul^0,f,c
  6191   00305E  0E00               	movlw	0
  6192   003060  2244               	addwfc	(??___flmul+1)^0,f,c
  6193   003062  0E82               	movlw	130
  6194   003064  2443               	addwf	??___flmul^0,w,c
  6195   003066  6E52               	movwf	___flmul@temp^0,c
  6196   003068  0EFF               	movlw	255
  6197   00306A  2044               	addwfc	(??___flmul+1)^0,w,c
  6198   00306C  6E53               	movwf	(___flmul@temp+1)^0,c
  6199   00306E  EF4E  F018         	goto	l3359
  6200   003072                     l3353:
  6201   003072  90D8               	bcf	status,0,c
  6202   003074  364E               	rlcf	___flmul@prod^0,f,c
  6203   003076  364F               	rlcf	(___flmul@prod+1)^0,f,c
  6204   003078  3650               	rlcf	(___flmul@prod+2)^0,f,c
  6205   00307A  3651               	rlcf	(___flmul@prod+3)^0,f,c
  6206   00307C  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6207   00307E  EF43  F018         	goto	u3291
  6208   003082  EF45  F018         	goto	u3290
  6209   003086                     u3291:
  6210   003086  EF46  F018         	goto	l1221
  6211   00308A                     u3290:
  6212   00308A  804E               	bsf	___flmul@prod^0,0,c
  6213   00308C                     l1221:
  6214   00308C  90D8               	bcf	status,0,c
  6215   00308E  3648               	rlcf	___flmul@grs^0,f,c
  6216   003090  3649               	rlcf	(___flmul@grs+1)^0,f,c
  6217   003092  364A               	rlcf	(___flmul@grs+2)^0,f,c
  6218   003094  364B               	rlcf	(___flmul@grs+3)^0,f,c
  6219   003096  0652               	decf	___flmul@temp^0,f,c
  6220   003098  A0D8               	btfss	status,0,c
  6221   00309A  0653               	decf	(___flmul@temp+1)^0,f,c
  6222   00309C                     l3359:
  6223   00309C  AE50               	btfss	(___flmul@prod+2)^0,7,c
  6224   00309E  EF53  F018         	goto	u3301
  6225   0030A2  EF55  F018         	goto	u3300
  6226   0030A6                     u3301:
  6227   0030A6  EF39  F018         	goto	l3353
  6228   0030AA                     u3300:
  6229   0030AA  0E00               	movlw	0
  6230   0030AC  6E4C               	movwf	___flmul@aexp^0,c
  6231   0030AE  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6232   0030B0  EF5C  F018         	goto	u3311
  6233   0030B4  EF5E  F018         	goto	u3310
  6234   0030B8                     u3311:
  6235   0030B8  EF82  F018         	goto	l1223
  6236   0030BC                     u3310:
  6237   0030BC  0EFF               	movlw	255
  6238   0030BE  1448               	andwf	___flmul@grs^0,w,c
  6239   0030C0  6E43               	movwf	??___flmul^0,c
  6240   0030C2  0EFF               	movlw	255
  6241   0030C4  1449               	andwf	(___flmul@grs+1)^0,w,c
  6242   0030C6  6E44               	movwf	(??___flmul+1)^0,c
  6243   0030C8  0EFF               	movlw	255
  6244   0030CA  144A               	andwf	(___flmul@grs+2)^0,w,c
  6245   0030CC  6E45               	movwf	(??___flmul+2)^0,c
  6246   0030CE  0E7F               	movlw	127
  6247   0030D0  144B               	andwf	(___flmul@grs+3)^0,w,c
  6248   0030D2  6E46               	movwf	(??___flmul+3)^0,c
  6249   0030D4  5043               	movf	??___flmul^0,w,c
  6250   0030D6  1044               	iorwf	(??___flmul+1)^0,w,c
  6251   0030D8  1045               	iorwf	(??___flmul+2)^0,w,c
  6252   0030DA  1046               	iorwf	(??___flmul+3)^0,w,c
  6253   0030DC  B4D8               	btfsc	status,2,c
  6254   0030DE  EF73  F018         	goto	u3321
  6255   0030E2  EF75  F018         	goto	u3320
  6256   0030E6                     u3321:
  6257   0030E6  EF79  F018         	goto	l1224
  6258   0030EA                     u3320:
  6259   0030EA                     l3367:
  6260   0030EA  0E01               	movlw	1
  6261   0030EC  6E4C               	movwf	___flmul@aexp^0,c
  6262   0030EE  EF82  F018         	goto	l1223
  6263   0030F2                     l1224:
  6264   0030F2  A04E               	btfss	___flmul@prod^0,0,c
  6265   0030F4  EF7E  F018         	goto	u3331
  6266   0030F8  EF80  F018         	goto	u3330
  6267   0030FC                     u3331:
  6268   0030FC  EF82  F018         	goto	l1223
  6269   003100                     u3330:
  6270   003100  EF75  F018         	goto	l3367
  6271   003104                     l1223:
  6272   003104  504C               	movf	___flmul@aexp^0,w,c
  6273   003106  B4D8               	btfsc	status,2,c
  6274   003108  EF88  F018         	goto	u3341
  6275   00310C  EF8A  F018         	goto	u3340
  6276   003110                     u3341:
  6277   003110  EFAE  F018         	goto	l3379
  6278   003114                     u3340:
  6279   003114  0E01               	movlw	1
  6280   003116  264E               	addwf	___flmul@prod^0,f,c
  6281   003118  0E00               	movlw	0
  6282   00311A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6283   00311C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6284   00311E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6285   003120  A051               	btfss	(___flmul@prod+3)^0,0,c
  6286   003122  EF95  F018         	goto	u3351
  6287   003126  EF97  F018         	goto	u3350
  6288   00312A                     u3351:
  6289   00312A  EFAE  F018         	goto	l3379
  6290   00312E                     u3350:
  6291   00312E  C04E  F043         	movff	___flmul@prod,??___flmul
  6292   003132  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  6293   003136  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  6294   00313A  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  6295   00313E  3446               	rlcf	(??___flmul+3)^0,w,c
  6296   003140  3246               	rrcf	(??___flmul+3)^0,f,c
  6297   003142  3245               	rrcf	(??___flmul+2)^0,f,c
  6298   003144  3244               	rrcf	(??___flmul+1)^0,f,c
  6299   003146  3243               	rrcf	??___flmul^0,f,c
  6300   003148  C043  F04E         	movff	??___flmul,___flmul@prod
  6301   00314C  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  6302   003150  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  6303   003154  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  6304   003158  4A52               	infsnz	___flmul@temp^0,f,c
  6305   00315A  2A53               	incf	(___flmul@temp+1)^0,f,c
  6306   00315C                     l3379:
  6307   00315C  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6308   00315E  EFB9  F018         	goto	u3361
  6309   003162  5053               	movf	(___flmul@temp+1)^0,w,c
  6310   003164  E108               	bnz	u3360
  6311   003166  2852               	incf	___flmul@temp^0,w,c
  6312   003168  A0D8               	btfss	status,0,c
  6313   00316A  EFB9  F018         	goto	u3361
  6314   00316E  EFBB  F018         	goto	u3360
  6315   003172                     u3361:
  6316   003172  EFC5  F018         	goto	l3383
  6317   003176                     u3360:
  6318   003176  0E00               	movlw	0
  6319   003178  6E4E               	movwf	___flmul@prod^0,c
  6320   00317A  0E00               	movlw	0
  6321   00317C  6E4F               	movwf	(___flmul@prod+1)^0,c
  6322   00317E  0E80               	movlw	128
  6323   003180  6E50               	movwf	(___flmul@prod+2)^0,c
  6324   003182  0E7F               	movlw	127
  6325   003184  6E51               	movwf	(___flmul@prod+3)^0,c
  6326   003186  EFF3  F018         	goto	l3395
  6327   00318A                     l3383:
  6328   00318A  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6329   00318C  EFD2  F018         	goto	u3370
  6330   003190  5053               	movf	(___flmul@temp+1)^0,w,c
  6331   003192  E106               	bnz	u3371
  6332   003194  0452               	decf	___flmul@temp^0,w,c
  6333   003196  B0D8               	btfsc	status,0,c
  6334   003198  EFD0  F018         	goto	u3371
  6335   00319C  EFD2  F018         	goto	u3370
  6336   0031A0                     u3371:
  6337   0031A0  EFDE  F018         	goto	l1231
  6338   0031A4                     u3370:
  6339   0031A4  0E00               	movlw	0
  6340   0031A6  6E4E               	movwf	___flmul@prod^0,c
  6341   0031A8  0E00               	movlw	0
  6342   0031AA  6E4F               	movwf	(___flmul@prod+1)^0,c
  6343   0031AC  0E00               	movlw	0
  6344   0031AE  6E50               	movwf	(___flmul@prod+2)^0,c
  6345   0031B0  0E00               	movlw	0
  6346   0031B2  6E51               	movwf	(___flmul@prod+3)^0,c
  6347   0031B4  0E00               	movlw	0
  6348   0031B6  6E47               	movwf	___flmul@sign^0,c
  6349   0031B8  EFF3  F018         	goto	l3395
  6350   0031BC                     l1231:
  6351   0031BC  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  6352   0031C0  0EFF               	movlw	255
  6353   0031C2  164E               	andwf	___flmul@prod^0,f,c
  6354   0031C4  0EFF               	movlw	255
  6355   0031C6  164F               	andwf	(___flmul@prod+1)^0,f,c
  6356   0031C8  0E7F               	movlw	127
  6357   0031CA  1650               	andwf	(___flmul@prod+2)^0,f,c
  6358   0031CC  0E00               	movlw	0
  6359   0031CE  1651               	andwf	(___flmul@prod+3)^0,f,c
  6360   0031D0  A04D               	btfss	___flmul@bexp^0,0,c
  6361   0031D2  EFED  F018         	goto	u3381
  6362   0031D6  EFEF  F018         	goto	u3380
  6363   0031DA                     u3381:
  6364   0031DA  EFF0  F018         	goto	l3393
  6365   0031DE                     u3380:
  6366   0031DE  8E50               	bsf	(___flmul@prod+2)^0,7,c
  6367   0031E0                     l3393:
  6368   0031E0  90D8               	bcf	status,0,c
  6369   0031E2  304D               	rrcf	___flmul@bexp^0,w,c
  6370   0031E4  6E51               	movwf	(___flmul@prod+3)^0,c
  6371   0031E6                     l3395:
  6372   0031E6  5047               	movf	___flmul@sign^0,w,c
  6373   0031E8  1251               	iorwf	(___flmul@prod+3)^0,f,c
  6374   0031EA  C04E  F03B         	movff	___flmul@prod,?___flmul
  6375   0031EE  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  6376   0031F2  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  6377   0031F6  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  6378   0031FA                     l1218:
  6379   0031FA  0012               	return		;funcret
  6380   0031FC                     __end_of___flmul:
  6381                           	callstack 0
  6382                           
  6383 ;; *************** function ___fleq *****************
  6384 ;; Defined at:
  6385 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  ff1             4    0[COMRAM] unsigned char 
  6388 ;;  ff2             4    4[COMRAM] unsigned char 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;		None               void
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6400 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;Total ram usage:       12 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_custom_floatmodulo
  6410 ;;		_RGB_to_HSV
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text24
  6415   0045D4                     __ptext24:
  6416                           	callstack 0
  6417   0045D4                     ___fleq:
  6418                           	callstack 26
  6419   0045D4  0E00               	movlw	0
  6420   0045D6  1401               	andwf	___fleq@ff1^0,w,c
  6421   0045D8  6E09               	movwf	??___fleq^0,c
  6422   0045DA  0E00               	movlw	0
  6423   0045DC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6424   0045DE  6E0A               	movwf	(??___fleq+1)^0,c
  6425   0045E0  0E80               	movlw	128
  6426   0045E2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6427   0045E4  6E0B               	movwf	(??___fleq+2)^0,c
  6428   0045E6  0E7F               	movlw	127
  6429   0045E8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6430   0045EA  6E0C               	movwf	(??___fleq+3)^0,c
  6431   0045EC  5009               	movf	??___fleq^0,w,c
  6432   0045EE  100A               	iorwf	(??___fleq+1)^0,w,c
  6433   0045F0  100B               	iorwf	(??___fleq+2)^0,w,c
  6434   0045F2  100C               	iorwf	(??___fleq+3)^0,w,c
  6435   0045F4  A4D8               	btfss	status,2,c
  6436   0045F6  EFFF  F022         	goto	u3391
  6437   0045FA  EF01  F023         	goto	u3390
  6438   0045FE                     u3391:
  6439   0045FE  EF09  F023         	goto	l3411
  6440   004602                     u3390:
  6441   004602  0E00               	movlw	0
  6442   004604  6E01               	movwf	___fleq@ff1^0,c
  6443   004606  0E00               	movlw	0
  6444   004608  6E02               	movwf	(___fleq@ff1+1)^0,c
  6445   00460A  0E00               	movlw	0
  6446   00460C  6E03               	movwf	(___fleq@ff1+2)^0,c
  6447   00460E  0E00               	movlw	0
  6448   004610  6E04               	movwf	(___fleq@ff1+3)^0,c
  6449   004612                     l3411:
  6450   004612  0E00               	movlw	0
  6451   004614  1405               	andwf	___fleq@ff2^0,w,c
  6452   004616  6E09               	movwf	??___fleq^0,c
  6453   004618  0E00               	movlw	0
  6454   00461A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6455   00461C  6E0A               	movwf	(??___fleq+1)^0,c
  6456   00461E  0E80               	movlw	128
  6457   004620  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6458   004622  6E0B               	movwf	(??___fleq+2)^0,c
  6459   004624  0E7F               	movlw	127
  6460   004626  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6461   004628  6E0C               	movwf	(??___fleq+3)^0,c
  6462   00462A  5009               	movf	??___fleq^0,w,c
  6463   00462C  100A               	iorwf	(??___fleq+1)^0,w,c
  6464   00462E  100B               	iorwf	(??___fleq+2)^0,w,c
  6465   004630  100C               	iorwf	(??___fleq+3)^0,w,c
  6466   004632  A4D8               	btfss	status,2,c
  6467   004634  EF1E  F023         	goto	u3401
  6468   004638  EF20  F023         	goto	u3400
  6469   00463C                     u3401:
  6470   00463C  EF28  F023         	goto	l3415
  6471   004640                     u3400:
  6472   004640  0E00               	movlw	0
  6473   004642  6E05               	movwf	___fleq@ff2^0,c
  6474   004644  0E00               	movlw	0
  6475   004646  6E06               	movwf	(___fleq@ff2+1)^0,c
  6476   004648  0E00               	movlw	0
  6477   00464A  6E07               	movwf	(___fleq@ff2+2)^0,c
  6478   00464C  0E00               	movlw	0
  6479   00464E  6E08               	movwf	(___fleq@ff2+3)^0,c
  6480   004650                     l3415:
  6481   004650  5005               	movf	___fleq@ff2^0,w,c
  6482   004652  1801               	xorwf	___fleq@ff1^0,w,c
  6483   004654  E10F               	bnz	u3410
  6484   004656  5006               	movf	(___fleq@ff2+1)^0,w,c
  6485   004658  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6486   00465A  E10C               	bnz	u3410
  6487   00465C  5007               	movf	(___fleq@ff2+2)^0,w,c
  6488   00465E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6489   004660  E109               	bnz	u3410
  6490   004662  5008               	movf	(___fleq@ff2+3)^0,w,c
  6491   004664  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6492   004666  B4D8               	btfsc	status,2,c
  6493   004668  EF38  F023         	goto	u3411
  6494   00466C  EF3A  F023         	goto	u3410
  6495   004670                     u3411:
  6496   004670  EF3D  F023         	goto	l3419
  6497   004674                     u3410:
  6498   004674  90D8               	bcf	status,0,c
  6499   004676  EF3E  F023         	goto	l859
  6500   00467A                     l3419:
  6501   00467A  80D8               	bsf	status,0,c
  6502   00467C                     l859:
  6503   00467C  0012               	return		;funcret
  6504   00467E                     __end_of___fleq:
  6505                           	callstack 0
  6506                           
  6507 ;; *************** function ___fldiv *****************
  6508 ;; Defined at:
  6509 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  b               4   33[COMRAM] unsigned char 
  6512 ;;  a               4   37[COMRAM] unsigned char 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  grs             4   52[COMRAM] unsigned long 
  6515 ;;  rem             4   45[COMRAM] unsigned long 
  6516 ;;  new_exp         2   50[COMRAM] short 
  6517 ;;  aexp            1   57[COMRAM] unsigned char 
  6518 ;;  bexp            1   56[COMRAM] unsigned char 
  6519 ;;  sign            1   49[COMRAM] unsigned char 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  4   33[COMRAM] unsigned char 
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6529 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6530 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6531 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;Total ram usage:       25 bytes
  6534 ;; Hardware stack levels used: 1
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_custom_floatmodulo
  6539 ;;		_RGB_to_HSV
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text25
  6544   0031FC                     __ptext25:
  6545                           	callstack 0
  6546   0031FC                     ___fldiv:
  6547                           	callstack 26
  6548   0031FC  5025               	movf	(___fldiv@b+3)^0,w,c
  6549   0031FE  0B80               	andlw	128
  6550   003200  6E32               	movwf	___fldiv@sign^0,c
  6551   003202  5025               	movf	(___fldiv@b+3)^0,w,c
  6552   003204  2425               	addwf	(___fldiv@b+3)^0,w,c
  6553   003206  6E39               	movwf	___fldiv@bexp^0,c
  6554   003208  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6555   00320A  EF09  F019         	goto	u2971
  6556   00320E  EF0B  F019         	goto	u2970
  6557   003212                     u2971:
  6558   003212  EF0C  F019         	goto	l3139
  6559   003216                     u2970:
  6560   003216  8039               	bsf	___fldiv@bexp^0,0,c
  6561   003218                     l3139:
  6562   003218  5039               	movf	___fldiv@bexp^0,w,c
  6563   00321A  B4D8               	btfsc	status,2,c
  6564   00321C  EF12  F019         	goto	u2981
  6565   003220  EF14  F019         	goto	u2980
  6566   003224                     u2981:
  6567   003224  EF29  F019         	goto	l3149
  6568   003228                     u2980:
  6569   003228  2839               	incf	___fldiv@bexp^0,w,c
  6570   00322A  A4D8               	btfss	status,2,c
  6571   00322C  EF1A  F019         	goto	u2991
  6572   003230  EF1C  F019         	goto	u2990
  6573   003234                     u2991:
  6574   003234  EF24  F019         	goto	l3145
  6575   003238                     u2990:
  6576   003238  0E00               	movlw	0
  6577   00323A  6E22               	movwf	___fldiv@b^0,c
  6578   00323C  0E00               	movlw	0
  6579   00323E  6E23               	movwf	(___fldiv@b+1)^0,c
  6580   003240  0E00               	movlw	0
  6581   003242  6E24               	movwf	(___fldiv@b+2)^0,c
  6582   003244  0E00               	movlw	0
  6583   003246  6E25               	movwf	(___fldiv@b+3)^0,c
  6584   003248                     l3145:
  6585   003248  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6586   00324A  0E00               	movlw	0
  6587   00324C  6E25               	movwf	(___fldiv@b+3)^0,c
  6588   00324E  EF31  F019         	goto	l3151
  6589   003252                     l3149:
  6590   003252  0E00               	movlw	0
  6591   003254  6E22               	movwf	___fldiv@b^0,c
  6592   003256  0E00               	movlw	0
  6593   003258  6E23               	movwf	(___fldiv@b+1)^0,c
  6594   00325A  0E00               	movlw	0
  6595   00325C  6E24               	movwf	(___fldiv@b+2)^0,c
  6596   00325E  0E00               	movlw	0
  6597   003260  6E25               	movwf	(___fldiv@b+3)^0,c
  6598   003262                     l3151:
  6599   003262  5029               	movf	(___fldiv@a+3)^0,w,c
  6600   003264  0B80               	andlw	128
  6601   003266  1A32               	xorwf	___fldiv@sign^0,f,c
  6602   003268  5029               	movf	(___fldiv@a+3)^0,w,c
  6603   00326A  2429               	addwf	(___fldiv@a+3)^0,w,c
  6604   00326C  6E3A               	movwf	___fldiv@aexp^0,c
  6605   00326E  AE28               	btfss	(___fldiv@a+2)^0,7,c
  6606   003270  EF3C  F019         	goto	u3001
  6607   003274  EF3E  F019         	goto	u3000
  6608   003278                     u3001:
  6609   003278  EF3F  F019         	goto	l3159
  6610   00327C                     u3000:
  6611   00327C  803A               	bsf	___fldiv@aexp^0,0,c
  6612   00327E                     l3159:
  6613   00327E  503A               	movf	___fldiv@aexp^0,w,c
  6614   003280  B4D8               	btfsc	status,2,c
  6615   003282  EF45  F019         	goto	u3011
  6616   003286  EF47  F019         	goto	u3010
  6617   00328A                     u3011:
  6618   00328A  EF5C  F019         	goto	l3169
  6619   00328E                     u3010:
  6620   00328E  283A               	incf	___fldiv@aexp^0,w,c
  6621   003290  A4D8               	btfss	status,2,c
  6622   003292  EF4D  F019         	goto	u3021
  6623   003296  EF4F  F019         	goto	u3020
  6624   00329A                     u3021:
  6625   00329A  EF57  F019         	goto	l3165
  6626   00329E                     u3020:
  6627   00329E  0E00               	movlw	0
  6628   0032A0  6E26               	movwf	___fldiv@a^0,c
  6629   0032A2  0E00               	movlw	0
  6630   0032A4  6E27               	movwf	(___fldiv@a+1)^0,c
  6631   0032A6  0E00               	movlw	0
  6632   0032A8  6E28               	movwf	(___fldiv@a+2)^0,c
  6633   0032AA  0E00               	movlw	0
  6634   0032AC  6E29               	movwf	(___fldiv@a+3)^0,c
  6635   0032AE                     l3165:
  6636   0032AE  8E28               	bsf	(___fldiv@a+2)^0,7,c
  6637   0032B0  0E00               	movlw	0
  6638   0032B2  6E29               	movwf	(___fldiv@a+3)^0,c
  6639   0032B4  EF64  F019         	goto	l3171
  6640   0032B8                     l3169:
  6641   0032B8  0E00               	movlw	0
  6642   0032BA  6E26               	movwf	___fldiv@a^0,c
  6643   0032BC  0E00               	movlw	0
  6644   0032BE  6E27               	movwf	(___fldiv@a+1)^0,c
  6645   0032C0  0E00               	movlw	0
  6646   0032C2  6E28               	movwf	(___fldiv@a+2)^0,c
  6647   0032C4  0E00               	movlw	0
  6648   0032C6  6E29               	movwf	(___fldiv@a+3)^0,c
  6649   0032C8                     l3171:
  6650   0032C8  5026               	movf	___fldiv@a^0,w,c
  6651   0032CA  1027               	iorwf	(___fldiv@a+1)^0,w,c
  6652   0032CC  1028               	iorwf	(___fldiv@a+2)^0,w,c
  6653   0032CE  1029               	iorwf	(___fldiv@a+3)^0,w,c
  6654   0032D0  A4D8               	btfss	status,2,c
  6655   0032D2  EF6D  F019         	goto	u3031
  6656   0032D6  EF6F  F019         	goto	u3030
  6657   0032DA                     u3031:
  6658   0032DA  EF87  F019         	goto	l3183
  6659   0032DE                     u3030:
  6660   0032DE  0E00               	movlw	0
  6661   0032E0  6E22               	movwf	___fldiv@b^0,c
  6662   0032E2  0E00               	movlw	0
  6663   0032E4  6E23               	movwf	(___fldiv@b+1)^0,c
  6664   0032E6  0E00               	movlw	0
  6665   0032E8  6E24               	movwf	(___fldiv@b+2)^0,c
  6666   0032EA  0E00               	movlw	0
  6667   0032EC  6E25               	movwf	(___fldiv@b+3)^0,c
  6668   0032EE  0E80               	movlw	128
  6669   0032F0  1224               	iorwf	(___fldiv@b+2)^0,f,c
  6670   0032F2  0E7F               	movlw	127
  6671   0032F4  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6672   0032F6                     l3177:
  6673   0032F6  5032               	movf	___fldiv@sign^0,w,c
  6674   0032F8  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6675   0032FA  C022  F022         	movff	___fldiv@b,?___fldiv
  6676   0032FE  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  6677   003302  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  6678   003306  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  6679   00330A  EFCA  F01A         	goto	l1182
  6680   00330E                     l3183:
  6681   00330E  5039               	movf	___fldiv@bexp^0,w,c
  6682   003310  A4D8               	btfss	status,2,c
  6683   003312  EF8D  F019         	goto	u3041
  6684   003316  EF8F  F019         	goto	u3040
  6685   00331A                     u3041:
  6686   00331A  EF99  F019         	goto	l3191
  6687   00331E                     u3040:
  6688   00331E  0E00               	movlw	0
  6689   003320  6E22               	movwf	?___fldiv^0,c
  6690   003322  0E00               	movlw	0
  6691   003324  6E23               	movwf	(?___fldiv+1)^0,c
  6692   003326  0E00               	movlw	0
  6693   003328  6E24               	movwf	(?___fldiv+2)^0,c
  6694   00332A  0E00               	movlw	0
  6695   00332C  6E25               	movwf	(?___fldiv+3)^0,c
  6696   00332E  EFCA  F01A         	goto	l1182
  6697   003332                     l3191:
  6698   003332  503A               	movf	___fldiv@aexp^0,w,c
  6699   003334  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  6700   003338  6A2B               	clrf	(??___fldiv+1)^0,c
  6701   00333A  5E2A               	subwf	??___fldiv^0,f,c
  6702   00333C  0E00               	movlw	0
  6703   00333E  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  6704   003340  0E7F               	movlw	127
  6705   003342  242A               	addwf	??___fldiv^0,w,c
  6706   003344  6E33               	movwf	___fldiv@new_exp^0,c
  6707   003346  0E00               	movlw	0
  6708   003348  202B               	addwfc	(??___fldiv+1)^0,w,c
  6709   00334A  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6710   00334C  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  6711   003350  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  6712   003354  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  6713   003358  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  6714   00335C  0E00               	movlw	0
  6715   00335E  6E22               	movwf	___fldiv@b^0,c
  6716   003360  0E00               	movlw	0
  6717   003362  6E23               	movwf	(___fldiv@b+1)^0,c
  6718   003364  0E00               	movlw	0
  6719   003366  6E24               	movwf	(___fldiv@b+2)^0,c
  6720   003368  0E00               	movlw	0
  6721   00336A  6E25               	movwf	(___fldiv@b+3)^0,c
  6722   00336C  0E00               	movlw	0
  6723   00336E  6E35               	movwf	___fldiv@grs^0,c
  6724   003370  0E00               	movlw	0
  6725   003372  6E36               	movwf	(___fldiv@grs+1)^0,c
  6726   003374  0E00               	movlw	0
  6727   003376  6E37               	movwf	(___fldiv@grs+2)^0,c
  6728   003378  0E00               	movlw	0
  6729   00337A  6E38               	movwf	(___fldiv@grs+3)^0,c
  6730   00337C  0E00               	movlw	0
  6731   00337E  6E3A               	movwf	___fldiv@aexp^0,c
  6732   003380  EFFA  F019         	goto	l1184
  6733   003384                     l3201:
  6734   003384  503A               	movf	___fldiv@aexp^0,w,c
  6735   003386  B4D8               	btfsc	status,2,c
  6736   003388  EFC8  F019         	goto	u3051
  6737   00338C  EFCA  F019         	goto	u3050
  6738   003390                     u3051:
  6739   003390  EFE1  F019         	goto	l3209
  6740   003394                     u3050:
  6741   003394  90D8               	bcf	status,0,c
  6742   003396  362E               	rlcf	___fldiv@rem^0,f,c
  6743   003398  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  6744   00339A  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  6745   00339C  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  6746   00339E  90D8               	bcf	status,0,c
  6747   0033A0  3622               	rlcf	___fldiv@b^0,f,c
  6748   0033A2  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6749   0033A4  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6750   0033A6  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6751   0033A8  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6752   0033AA  EFD9  F019         	goto	u3061
  6753   0033AE  EFDB  F019         	goto	u3060
  6754   0033B2                     u3061:
  6755   0033B2  EFDC  F019         	goto	l1187
  6756   0033B6                     u3060:
  6757   0033B6  8022               	bsf	___fldiv@b^0,0,c
  6758   0033B8                     l1187:
  6759   0033B8  90D8               	bcf	status,0,c
  6760   0033BA  3635               	rlcf	___fldiv@grs^0,f,c
  6761   0033BC  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6762   0033BE  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6763   0033C0  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6764   0033C2                     l3209:
  6765   0033C2  5026               	movf	___fldiv@a^0,w,c
  6766   0033C4  5C2E               	subwf	___fldiv@rem^0,w,c
  6767   0033C6  5027               	movf	(___fldiv@a+1)^0,w,c
  6768   0033C8  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  6769   0033CA  5028               	movf	(___fldiv@a+2)^0,w,c
  6770   0033CC  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  6771   0033CE  5029               	movf	(___fldiv@a+3)^0,w,c
  6772   0033D0  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  6773   0033D2  A0D8               	btfss	status,0,c
  6774   0033D4  EFEE  F019         	goto	u3071
  6775   0033D8  EFF0  F019         	goto	u3070
  6776   0033DC                     u3071:
  6777   0033DC  EFF9  F019         	goto	l3215
  6778   0033E0                     u3070:
  6779   0033E0  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  6780   0033E2  5026               	movf	___fldiv@a^0,w,c
  6781   0033E4  5E2E               	subwf	___fldiv@rem^0,f,c
  6782   0033E6  5027               	movf	(___fldiv@a+1)^0,w,c
  6783   0033E8  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  6784   0033EA  5028               	movf	(___fldiv@a+2)^0,w,c
  6785   0033EC  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  6786   0033EE  5029               	movf	(___fldiv@a+3)^0,w,c
  6787   0033F0  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  6788   0033F2                     l3215:
  6789   0033F2  2A3A               	incf	___fldiv@aexp^0,f,c
  6790   0033F4                     l1184:
  6791   0033F4  0E19               	movlw	25
  6792   0033F6  643A               	cpfsgt	___fldiv@aexp^0,c
  6793   0033F8  EF00  F01A         	goto	u3081
  6794   0033FC  EF02  F01A         	goto	u3080
  6795   003400                     u3081:
  6796   003400  EFC2  F019         	goto	l3201
  6797   003404                     u3080:
  6798   003404  502E               	movf	___fldiv@rem^0,w,c
  6799   003406  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  6800   003408  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  6801   00340A  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  6802   00340C  B4D8               	btfsc	status,2,c
  6803   00340E  EF0B  F01A         	goto	u3091
  6804   003412  EF0D  F01A         	goto	u3090
  6805   003416                     u3091:
  6806   003416  EF25  F01A         	goto	l3227
  6807   00341A                     u3090:
  6808   00341A  8035               	bsf	___fldiv@grs^0,0,c
  6809   00341C  EF25  F01A         	goto	l3227
  6810   003420                     l3221:
  6811   003420  90D8               	bcf	status,0,c
  6812   003422  3622               	rlcf	___fldiv@b^0,f,c
  6813   003424  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6814   003426  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6815   003428  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6816   00342A  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6817   00342C  EF1A  F01A         	goto	u3101
  6818   003430  EF1C  F01A         	goto	u3100
  6819   003434                     u3101:
  6820   003434  EF1D  F01A         	goto	l1193
  6821   003438                     u3100:
  6822   003438  8022               	bsf	___fldiv@b^0,0,c
  6823   00343A                     l1193:
  6824   00343A  90D8               	bcf	status,0,c
  6825   00343C  3635               	rlcf	___fldiv@grs^0,f,c
  6826   00343E  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6827   003440  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6828   003442  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6829   003444  0633               	decf	___fldiv@new_exp^0,f,c
  6830   003446  A0D8               	btfss	status,0,c
  6831   003448  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  6832   00344A                     l3227:
  6833   00344A  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6834   00344C  EF2A  F01A         	goto	u3111
  6835   003450  EF2C  F01A         	goto	u3110
  6836   003454                     u3111:
  6837   003454  EF10  F01A         	goto	l3221
  6838   003458                     u3110:
  6839   003458  0E00               	movlw	0
  6840   00345A  6E3A               	movwf	___fldiv@aexp^0,c
  6841   00345C  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6842   00345E  EF33  F01A         	goto	u3121
  6843   003462  EF35  F01A         	goto	u3120
  6844   003466                     u3121:
  6845   003466  EF59  F01A         	goto	l1195
  6846   00346A                     u3120:
  6847   00346A  0EFF               	movlw	255
  6848   00346C  1435               	andwf	___fldiv@grs^0,w,c
  6849   00346E  6E2A               	movwf	??___fldiv^0,c
  6850   003470  0EFF               	movlw	255
  6851   003472  1436               	andwf	(___fldiv@grs+1)^0,w,c
  6852   003474  6E2B               	movwf	(??___fldiv+1)^0,c
  6853   003476  0EFF               	movlw	255
  6854   003478  1437               	andwf	(___fldiv@grs+2)^0,w,c
  6855   00347A  6E2C               	movwf	(??___fldiv+2)^0,c
  6856   00347C  0E7F               	movlw	127
  6857   00347E  1438               	andwf	(___fldiv@grs+3)^0,w,c
  6858   003480  6E2D               	movwf	(??___fldiv+3)^0,c
  6859   003482  502A               	movf	??___fldiv^0,w,c
  6860   003484  102B               	iorwf	(??___fldiv+1)^0,w,c
  6861   003486  102C               	iorwf	(??___fldiv+2)^0,w,c
  6862   003488  102D               	iorwf	(??___fldiv+3)^0,w,c
  6863   00348A  B4D8               	btfsc	status,2,c
  6864   00348C  EF4A  F01A         	goto	u3131
  6865   003490  EF4C  F01A         	goto	u3130
  6866   003494                     u3131:
  6867   003494  EF50  F01A         	goto	l1196
  6868   003498                     u3130:
  6869   003498                     l3235:
  6870   003498  0E01               	movlw	1
  6871   00349A  6E3A               	movwf	___fldiv@aexp^0,c
  6872   00349C  EF59  F01A         	goto	l1195
  6873   0034A0                     l1196:
  6874   0034A0  A022               	btfss	___fldiv@b^0,0,c
  6875   0034A2  EF55  F01A         	goto	u3141
  6876   0034A6  EF57  F01A         	goto	u3140
  6877   0034AA                     u3141:
  6878   0034AA  EF59  F01A         	goto	l1195
  6879   0034AE                     u3140:
  6880   0034AE  EF4C  F01A         	goto	l3235
  6881   0034B2                     l1195:
  6882   0034B2  503A               	movf	___fldiv@aexp^0,w,c
  6883   0034B4  B4D8               	btfsc	status,2,c
  6884   0034B6  EF5F  F01A         	goto	u3151
  6885   0034BA  EF61  F01A         	goto	u3150
  6886   0034BE                     u3151:
  6887   0034BE  EF85  F01A         	goto	l3247
  6888   0034C2                     u3150:
  6889   0034C2  0E01               	movlw	1
  6890   0034C4  2622               	addwf	___fldiv@b^0,f,c
  6891   0034C6  0E00               	movlw	0
  6892   0034C8  2223               	addwfc	(___fldiv@b+1)^0,f,c
  6893   0034CA  2224               	addwfc	(___fldiv@b+2)^0,f,c
  6894   0034CC  2225               	addwfc	(___fldiv@b+3)^0,f,c
  6895   0034CE  A025               	btfss	(___fldiv@b+3)^0,0,c
  6896   0034D0  EF6C  F01A         	goto	u3161
  6897   0034D4  EF6E  F01A         	goto	u3160
  6898   0034D8                     u3161:
  6899   0034D8  EF85  F01A         	goto	l3247
  6900   0034DC                     u3160:
  6901   0034DC  C022  F02A         	movff	___fldiv@b,??___fldiv
  6902   0034E0  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  6903   0034E4  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  6904   0034E8  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  6905   0034EC  342D               	rlcf	(??___fldiv+3)^0,w,c
  6906   0034EE  322D               	rrcf	(??___fldiv+3)^0,f,c
  6907   0034F0  322C               	rrcf	(??___fldiv+2)^0,f,c
  6908   0034F2  322B               	rrcf	(??___fldiv+1)^0,f,c
  6909   0034F4  322A               	rrcf	??___fldiv^0,f,c
  6910   0034F6  C02A  F022         	movff	??___fldiv,___fldiv@b
  6911   0034FA  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  6912   0034FE  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  6913   003502  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  6914   003506  4A33               	infsnz	___fldiv@new_exp^0,f,c
  6915   003508  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  6916   00350A                     l3247:
  6917   00350A  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6918   00350C  EF90  F01A         	goto	u3171
  6919   003510  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6920   003512  E108               	bnz	u3170
  6921   003514  2833               	incf	___fldiv@new_exp^0,w,c
  6922   003516  A0D8               	btfss	status,0,c
  6923   003518  EF90  F01A         	goto	u3171
  6924   00351C  EF92  F01A         	goto	u3170
  6925   003520                     u3171:
  6926   003520  EF9D  F01A         	goto	l3251
  6927   003524                     u3170:
  6928   003524  0E00               	movlw	0
  6929   003526  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6930   003528  6833               	setf	___fldiv@new_exp^0,c
  6931   00352A  0E00               	movlw	0
  6932   00352C  6E22               	movwf	___fldiv@b^0,c
  6933   00352E  0E00               	movlw	0
  6934   003530  6E23               	movwf	(___fldiv@b+1)^0,c
  6935   003532  0E00               	movlw	0
  6936   003534  6E24               	movwf	(___fldiv@b+2)^0,c
  6937   003536  0E00               	movlw	0
  6938   003538  6E25               	movwf	(___fldiv@b+3)^0,c
  6939   00353A                     l3251:
  6940   00353A  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6941   00353C  EFAA  F01A         	goto	u3180
  6942   003540  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6943   003542  E106               	bnz	u3181
  6944   003544  0433               	decf	___fldiv@new_exp^0,w,c
  6945   003546  B0D8               	btfsc	status,0,c
  6946   003548  EFA8  F01A         	goto	u3181
  6947   00354C  EFAA  F01A         	goto	u3180
  6948   003550                     u3181:
  6949   003550  EFB8  F01A         	goto	l3255
  6950   003554                     u3180:
  6951   003554  0E00               	movlw	0
  6952   003556  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6953   003558  0E00               	movlw	0
  6954   00355A  6E33               	movwf	___fldiv@new_exp^0,c
  6955   00355C  0E00               	movlw	0
  6956   00355E  6E22               	movwf	___fldiv@b^0,c
  6957   003560  0E00               	movlw	0
  6958   003562  6E23               	movwf	(___fldiv@b+1)^0,c
  6959   003564  0E00               	movlw	0
  6960   003566  6E24               	movwf	(___fldiv@b+2)^0,c
  6961   003568  0E00               	movlw	0
  6962   00356A  6E25               	movwf	(___fldiv@b+3)^0,c
  6963   00356C  0E00               	movlw	0
  6964   00356E  6E32               	movwf	___fldiv@sign^0,c
  6965   003570                     l3255:
  6966   003570  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  6967   003574  A039               	btfss	___fldiv@bexp^0,0,c
  6968   003576  EFBF  F01A         	goto	u3191
  6969   00357A  EFC1  F01A         	goto	u3190
  6970   00357E                     u3191:
  6971   00357E  EFC4  F01A         	goto	l3261
  6972   003582                     u3190:
  6973   003582  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6974   003584  EFC5  F01A         	goto	l3263
  6975   003588                     l3261:
  6976   003588  9E24               	bcf	(___fldiv@b+2)^0,7,c
  6977   00358A                     l3263:
  6978   00358A  90D8               	bcf	status,0,c
  6979   00358C  3039               	rrcf	___fldiv@bexp^0,w,c
  6980   00358E  6E25               	movwf	(___fldiv@b+3)^0,c
  6981   003590  EF7B  F019         	goto	l3177
  6982   003594                     l1182:
  6983   003594  0012               	return		;funcret
  6984   003596                     __end_of___fldiv:
  6985                           	callstack 0
  6986                           
  6987 ;; *************** function ___flge *****************
  6988 ;; Defined at:
  6989 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  ff1             4    0[COMRAM] unsigned char 
  6992 ;;  ff2             4    4[COMRAM] unsigned char 
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;		None
  6995 ;; Return value:  Size  Location     Type
  6996 ;;		None               void
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7004 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;Total ram usage:       12 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_RGB_to_HSV
  7014 ;;		_color_cardCheck
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text26
  7019   004358                     __ptext26:
  7020                           	callstack 0
  7021   004358                     ___flge:
  7022                           	callstack 28
  7023   004358  0E00               	movlw	0
  7024   00435A  1401               	andwf	___flge@ff1^0,w,c
  7025   00435C  6E09               	movwf	??___flge^0,c
  7026   00435E  0E00               	movlw	0
  7027   004360  1402               	andwf	(___flge@ff1+1)^0,w,c
  7028   004362  6E0A               	movwf	(??___flge+1)^0,c
  7029   004364  0E80               	movlw	128
  7030   004366  1403               	andwf	(___flge@ff1+2)^0,w,c
  7031   004368  6E0B               	movwf	(??___flge+2)^0,c
  7032   00436A  0E7F               	movlw	127
  7033   00436C  1404               	andwf	(___flge@ff1+3)^0,w,c
  7034   00436E  6E0C               	movwf	(??___flge+3)^0,c
  7035   004370  5009               	movf	??___flge^0,w,c
  7036   004372  100A               	iorwf	(??___flge+1)^0,w,c
  7037   004374  100B               	iorwf	(??___flge+2)^0,w,c
  7038   004376  100C               	iorwf	(??___flge+3)^0,w,c
  7039   004378  A4D8               	btfss	status,2,c
  7040   00437A  EFC1  F021         	goto	u3621
  7041   00437E  EFC3  F021         	goto	u3620
  7042   004382                     u3621:
  7043   004382  EFCB  F021         	goto	l3567
  7044   004386                     u3620:
  7045   004386  0E00               	movlw	0
  7046   004388  6E01               	movwf	___flge@ff1^0,c
  7047   00438A  0E00               	movlw	0
  7048   00438C  6E02               	movwf	(___flge@ff1+1)^0,c
  7049   00438E  0E00               	movlw	0
  7050   004390  6E03               	movwf	(___flge@ff1+2)^0,c
  7051   004392  0E00               	movlw	0
  7052   004394  6E04               	movwf	(___flge@ff1+3)^0,c
  7053   004396                     l3567:
  7054   004396  0E00               	movlw	0
  7055   004398  1405               	andwf	___flge@ff2^0,w,c
  7056   00439A  6E09               	movwf	??___flge^0,c
  7057   00439C  0E00               	movlw	0
  7058   00439E  1406               	andwf	(___flge@ff2+1)^0,w,c
  7059   0043A0  6E0A               	movwf	(??___flge+1)^0,c
  7060   0043A2  0E80               	movlw	128
  7061   0043A4  1407               	andwf	(___flge@ff2+2)^0,w,c
  7062   0043A6  6E0B               	movwf	(??___flge+2)^0,c
  7063   0043A8  0E7F               	movlw	127
  7064   0043AA  1408               	andwf	(___flge@ff2+3)^0,w,c
  7065   0043AC  6E0C               	movwf	(??___flge+3)^0,c
  7066   0043AE  5009               	movf	??___flge^0,w,c
  7067   0043B0  100A               	iorwf	(??___flge+1)^0,w,c
  7068   0043B2  100B               	iorwf	(??___flge+2)^0,w,c
  7069   0043B4  100C               	iorwf	(??___flge+3)^0,w,c
  7070   0043B6  A4D8               	btfss	status,2,c
  7071   0043B8  EFE0  F021         	goto	u3631
  7072   0043BC  EFE2  F021         	goto	u3630
  7073   0043C0                     u3631:
  7074   0043C0  EFEA  F021         	goto	l3571
  7075   0043C4                     u3630:
  7076   0043C4  0E00               	movlw	0
  7077   0043C6  6E05               	movwf	___flge@ff2^0,c
  7078   0043C8  0E00               	movlw	0
  7079   0043CA  6E06               	movwf	(___flge@ff2+1)^0,c
  7080   0043CC  0E00               	movlw	0
  7081   0043CE  6E07               	movwf	(___flge@ff2+2)^0,c
  7082   0043D0  0E00               	movlw	0
  7083   0043D2  6E08               	movwf	(___flge@ff2+3)^0,c
  7084   0043D4                     l3571:
  7085   0043D4  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7086   0043D6  EFEF  F021         	goto	u3641
  7087   0043DA  EFF1  F021         	goto	u3640
  7088   0043DE                     u3641:
  7089   0043DE  EFFA  F021         	goto	l3575
  7090   0043E2                     u3640:
  7091   0043E2  6C01               	negf	___flge@ff1^0,c
  7092   0043E4  1E02               	comf	(___flge@ff1+1)^0,f,c
  7093   0043E6  B0D8               	btfsc	status,0,c
  7094   0043E8  2A02               	incf	(___flge@ff1+1)^0,f,c
  7095   0043EA  1E03               	comf	(___flge@ff1+2)^0,f,c
  7096   0043EC  B0D8               	btfsc	status,0,c
  7097   0043EE  2A03               	incf	(___flge@ff1+2)^0,f,c
  7098   0043F0  0E80               	movlw	128
  7099   0043F2  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7100   0043F4                     l3575:
  7101   0043F4  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7102   0043F6  EFFF  F021         	goto	u3651
  7103   0043FA  EF01  F022         	goto	u3650
  7104   0043FE                     u3651:
  7105   0043FE  EF0A  F022         	goto	l865
  7106   004402                     u3650:
  7107   004402  6C05               	negf	___flge@ff2^0,c
  7108   004404  1E06               	comf	(___flge@ff2+1)^0,f,c
  7109   004406  B0D8               	btfsc	status,0,c
  7110   004408  2A06               	incf	(___flge@ff2+1)^0,f,c
  7111   00440A  1E07               	comf	(___flge@ff2+2)^0,f,c
  7112   00440C  B0D8               	btfsc	status,0,c
  7113   00440E  2A07               	incf	(___flge@ff2+2)^0,f,c
  7114   004410  0E80               	movlw	128
  7115   004412  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7116   004414                     l865:
  7117   004414  0E00               	movlw	0
  7118   004416  1A01               	xorwf	___flge@ff1^0,f,c
  7119   004418  0E00               	movlw	0
  7120   00441A  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7121   00441C  0E00               	movlw	0
  7122   00441E  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7123   004420  0E80               	movlw	128
  7124   004422  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7125   004424  0E00               	movlw	0
  7126   004426  1A05               	xorwf	___flge@ff2^0,f,c
  7127   004428  0E00               	movlw	0
  7128   00442A  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7129   00442C  0E00               	movlw	0
  7130   00442E  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7131   004430  0E80               	movlw	128
  7132   004432  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7133   004434  5005               	movf	___flge@ff2^0,w,c
  7134   004436  5C01               	subwf	___flge@ff1^0,w,c
  7135   004438  5006               	movf	(___flge@ff2+1)^0,w,c
  7136   00443A  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7137   00443C  5007               	movf	(___flge@ff2+2)^0,w,c
  7138   00443E  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7139   004440  5008               	movf	(___flge@ff2+3)^0,w,c
  7140   004442  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7141   004444  B0D8               	btfsc	status,0,c
  7142   004446  EF27  F022         	goto	u3661
  7143   00444A  EF29  F022         	goto	u3660
  7144   00444E                     u3661:
  7145   00444E  EF2C  F022         	goto	l3581
  7146   004452                     u3660:
  7147   004452  90D8               	bcf	status,0,c
  7148   004454  EF2D  F022         	goto	l870
  7149   004458                     l3581:
  7150   004458  80D8               	bsf	status,0,c
  7151   00445A                     l870:
  7152   00445A  0012               	return		;funcret
  7153   00445C                     __end_of___flge:
  7154                           	callstack 0
  7155                           
  7156 ;; *************** function _maze_return *****************
  7157 ;; Defined at:
  7158 ;;		line 116 in file "pathfinder.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  c               1   30[COMRAM] PTR struct calibration_s
  7161 ;;		 -> calibration(9), 
  7162 ;;  mL              1   31[COMRAM] PTR struct DC_motor
  7163 ;;		 -> motorL(9), 
  7164 ;;  mR              1   32[COMRAM] PTR struct DC_motor
  7165 ;;		 -> motorR(9), 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  j               2   36[COMRAM] int 
  7168 ;;  distance_bac    1   38[COMRAM] unsigned char 
  7169 ;;  i               1   39[COMRAM] unsigned char 
  7170 ;;  i               2   40[COMRAM] int 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7181 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;Total ram usage:       12 bytes
  7185 ;; Hardware stack levels used: 1
  7186 ;; Hardware stack levels required when called: 3
  7187 ;; This function calls:
  7188 ;;		_backward
  7189 ;;		_forward
  7190 ;;		_leftTURN
  7191 ;;		_rightTURN
  7192 ;; This function is called by:
  7193 ;;		_main
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text27
  7198   002916                     __ptext27:
  7199                           	callstack 0
  7200   002916                     _maze_return:
  7201                           	callstack 27
  7202   002916  0E00               	movlw	0
  7203   002918  6E2A               	movwf	(maze_return@i+1)^0,c
  7204   00291A  0E32               	movlw	50
  7205   00291C  6E29               	movwf	maze_return@i^0,c
  7206   00291E                     l4363:
  7207                           
  7208                           ;pathfinder.c: 123:             if(Operation_History[i] > 10){
  7209   00291E  0E3C               	movlw	low _Operation_History
  7210   002920  2429               	addwf	maze_return@i^0,w,c
  7211   002922  6ED9               	movwf	fsr2l,c
  7212   002924  0E01               	movlw	high _Operation_History
  7213   002926  202A               	addwfc	(maze_return@i+1)^0,w,c
  7214   002928  6EDA               	movwf	fsr2h,c
  7215   00292A  0E0A               	movlw	10
  7216   00292C  64DF               	cpfsgt	indf2,c
  7217   00292E  EF9B  F014         	goto	u4861
  7218   002932  EF9D  F014         	goto	u4860
  7219   002936                     u4861:
  7220   002936  EFD3  F014         	goto	l4375
  7221   00293A                     u4860:
  7222   00293A                     
  7223                           ;pathfinder.c: 124:                 unsigned char distance_back = Operation_History[i] -
      +                           10;
  7224   00293A  0E3C               	movlw	low _Operation_History
  7225   00293C  2429               	addwf	maze_return@i^0,w,c
  7226   00293E  6ED9               	movwf	fsr2l,c
  7227   002940  0E01               	movlw	high _Operation_History
  7228   002942  202A               	addwfc	(maze_return@i+1)^0,w,c
  7229   002944  6EDA               	movwf	fsr2h,c
  7230   002946  50DF               	movf	indf2,w,c
  7231   002948  0FF6               	addlw	246
  7232   00294A  6E27               	movwf	maze_return@distance_back^0,c
  7233   00294C                     
  7234                           ;pathfinder.c: 125:                 for (int j = 0; j < distance_back-1; j++) {
  7235   00294C  0E00               	movlw	0
  7236   00294E  6E26               	movwf	(maze_return@j+1)^0,c
  7237   002950  0E00               	movlw	0
  7238   002952  6E25               	movwf	maze_return@j^0,c
  7239   002954  EFBA  F014         	goto	l4373
  7240   002958                     l4369:
  7241                           
  7242                           ;pathfinder.c: 126:                     forward(c->forward_one, mL, mR);
  7243   002958  C020  F013         	movff	maze_return@mL,forward@mL
  7244   00295C  C021  F014         	movff	maze_return@mR,forward@mR
  7245   002960  501F               	movf	maze_return@c^0,w,c
  7246   002962  6ED9               	movwf	fsr2l,c
  7247   002964  6ADA               	clrf	fsr2h,c
  7248   002966  0E05               	movlw	5
  7249   002968  26D9               	addwf	fsr2l,f,c
  7250   00296A  50DF               	movf	indf2,w,c
  7251   00296C  ECC2  F01E         	call	_forward
  7252   002970                     
  7253                           ;pathfinder.c: 127:                 }
  7254   002970  4A25               	infsnz	maze_return@j^0,f,c
  7255   002972  2A26               	incf	(maze_return@j+1)^0,f,c
  7256   002974                     l4373:
  7257   002974  0EFF               	movlw	255
  7258   002976  2427               	addwf	maze_return@distance_back^0,w,c
  7259   002978  6E22               	movwf	??_maze_return^0,c
  7260   00297A  6A23               	clrf	(??_maze_return+1)^0,c
  7261   00297C  0EFF               	movlw	255
  7262   00297E  2223               	addwfc	(??_maze_return+1)^0,f,c
  7263   002980  5022               	movf	??_maze_return^0,w,c
  7264   002982  5C25               	subwf	maze_return@j^0,w,c
  7265   002984  5026               	movf	(maze_return@j+1)^0,w,c
  7266   002986  0A80               	xorlw	128
  7267   002988  6E24               	movwf	(??_maze_return+2)^0,c
  7268   00298A  5023               	movf	(??_maze_return+1)^0,w,c
  7269   00298C  0A80               	xorlw	128
  7270   00298E  5824               	subwfb	(??_maze_return+2)^0,w,c
  7271   002990  A0D8               	btfss	status,0,c
  7272   002992  EFCD  F014         	goto	u4871
  7273   002996  EFCF  F014         	goto	u4870
  7274   00299A                     u4871:
  7275   00299A  EFAC  F014         	goto	l4369
  7276   00299E                     u4870:
  7277   00299E  EFC7  F016         	goto	l4403
  7278   0029A2                     l577:
  7279                           
  7280                           ;pathfinder.c: 128:             }
  7281   0029A2  EFC7  F016         	goto	l4403
  7282   0029A6                     l4375:
  7283   0029A6  0E3C               	movlw	low _Operation_History
  7284   0029A8  2429               	addwf	maze_return@i^0,w,c
  7285   0029AA  6ED9               	movwf	fsr2l,c
  7286   0029AC  0E01               	movlw	high _Operation_History
  7287   0029AE  202A               	addwfc	(maze_return@i+1)^0,w,c
  7288   0029B0  6EDA               	movwf	fsr2h,c
  7289   0029B2  04DE               	decf	postinc2,w,c
  7290   0029B4  A4D8               	btfss	status,2,c
  7291   0029B6  EFDF  F014         	goto	u4881
  7292   0029BA  EFE1  F014         	goto	u4880
  7293   0029BE                     u4881:
  7294   0029BE  EF07  F015         	goto	l4379
  7295   0029C2                     u4880:
  7296   0029C2                     
  7297                           ;pathfinder.c: 131:                 leftTURN(c->left_90, mL, mR);
  7298   0029C2  C020  F013         	movff	maze_return@mL,leftTURN@mL
  7299   0029C6  C021  F014         	movff	maze_return@mR,leftTURN@mR
  7300   0029CA  501F               	movf	maze_return@c^0,w,c
  7301   0029CC  6ED9               	movwf	fsr2l,c
  7302   0029CE  6ADA               	clrf	fsr2h,c
  7303   0029D0  0E02               	movlw	2
  7304   0029D2  26D9               	addwf	fsr2l,f,c
  7305   0029D4  50DF               	movf	indf2,w,c
  7306   0029D6  ECFF  F01F         	call	_leftTURN
  7307                           
  7308                           ;pathfinder.c: 132:                 backward(c->backward_one, mL, mR);
  7309   0029DA  C020  F013         	movff	maze_return@mL,backward@mL
  7310   0029DE  C021  F014         	movff	maze_return@mR,backward@mR
  7311   0029E2  501F               	movf	maze_return@c^0,w,c
  7312   0029E4  6ED9               	movwf	fsr2l,c
  7313   0029E6  6ADA               	clrf	fsr2h,c
  7314   0029E8  0E06               	movlw	6
  7315   0029EA  26D9               	addwf	fsr2l,f,c
  7316   0029EC  50DF               	movf	indf2,w,c
  7317   0029EE  ECBC  F01C         	call	_backward
  7318                           
  7319                           ;pathfinder.c: 133:                 forward(c->forward_half, mL, mR);
  7320   0029F2  C020  F013         	movff	maze_return@mL,forward@mL
  7321   0029F6  C021  F014         	movff	maze_return@mR,forward@mR
  7322   0029FA  501F               	movf	maze_return@c^0,w,c
  7323   0029FC  6ED9               	movwf	fsr2l,c
  7324   0029FE  6ADA               	clrf	fsr2h,c
  7325   002A00  0E07               	movlw	7
  7326   002A02  26D9               	addwf	fsr2l,f,c
  7327   002A04  50DF               	movf	indf2,w,c
  7328   002A06  ECC2  F01E         	call	_forward
  7329                           
  7330                           ;pathfinder.c: 134:             }
  7331   002A0A  EFC7  F016         	goto	l4403
  7332   002A0E                     l4379:
  7333   002A0E  0E3C               	movlw	low _Operation_History
  7334   002A10  2429               	addwf	maze_return@i^0,w,c
  7335   002A12  6ED9               	movwf	fsr2l,c
  7336   002A14  0E01               	movlw	high _Operation_History
  7337   002A16  202A               	addwfc	(maze_return@i+1)^0,w,c
  7338   002A18  6EDA               	movwf	fsr2h,c
  7339   002A1A  0E02               	movlw	2
  7340   002A1C  18DE               	xorwf	postinc2,w,c
  7341   002A1E  A4D8               	btfss	status,2,c
  7342   002A20  EF14  F015         	goto	u4891
  7343   002A24  EF16  F015         	goto	u4890
  7344   002A28                     u4891:
  7345   002A28  EF3C  F015         	goto	l4383
  7346   002A2C                     u4890:
  7347   002A2C                     
  7348                           ;pathfinder.c: 137:                 rightTURN(c->right_90, mL, mR);
  7349   002A2C  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7350   002A30  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7351   002A34  501F               	movf	maze_return@c^0,w,c
  7352   002A36  6ED9               	movwf	fsr2l,c
  7353   002A38  6ADA               	clrf	fsr2h,c
  7354   002A3A  0E01               	movlw	1
  7355   002A3C  26D9               	addwf	fsr2l,f,c
  7356   002A3E  50DF               	movf	indf2,w,c
  7357   002A40  EC61  F01F         	call	_rightTURN
  7358                           
  7359                           ;pathfinder.c: 138:                 backward(c->backward_one, mL, mR);
  7360   002A44  C020  F013         	movff	maze_return@mL,backward@mL
  7361   002A48  C021  F014         	movff	maze_return@mR,backward@mR
  7362   002A4C  501F               	movf	maze_return@c^0,w,c
  7363   002A4E  6ED9               	movwf	fsr2l,c
  7364   002A50  6ADA               	clrf	fsr2h,c
  7365   002A52  0E06               	movlw	6
  7366   002A54  26D9               	addwf	fsr2l,f,c
  7367   002A56  50DF               	movf	indf2,w,c
  7368   002A58  ECBC  F01C         	call	_backward
  7369                           
  7370                           ;pathfinder.c: 139:                 forward(c->forward_half, mL, mR);
  7371   002A5C  C020  F013         	movff	maze_return@mL,forward@mL
  7372   002A60  C021  F014         	movff	maze_return@mR,forward@mR
  7373   002A64  501F               	movf	maze_return@c^0,w,c
  7374   002A66  6ED9               	movwf	fsr2l,c
  7375   002A68  6ADA               	clrf	fsr2h,c
  7376   002A6A  0E07               	movlw	7
  7377   002A6C  26D9               	addwf	fsr2l,f,c
  7378   002A6E  50DF               	movf	indf2,w,c
  7379   002A70  ECC2  F01E         	call	_forward
  7380                           
  7381                           ;pathfinder.c: 140:             }
  7382   002A74  EFC7  F016         	goto	l4403
  7383   002A78                     l4383:
  7384   002A78  0E3C               	movlw	low _Operation_History
  7385   002A7A  2429               	addwf	maze_return@i^0,w,c
  7386   002A7C  6ED9               	movwf	fsr2l,c
  7387   002A7E  0E01               	movlw	high _Operation_History
  7388   002A80  202A               	addwfc	(maze_return@i+1)^0,w,c
  7389   002A82  6EDA               	movwf	fsr2h,c
  7390   002A84  0E03               	movlw	3
  7391   002A86  18DE               	xorwf	postinc2,w,c
  7392   002A88  A4D8               	btfss	status,2,c
  7393   002A8A  EF49  F015         	goto	u4901
  7394   002A8E  EF4B  F015         	goto	u4900
  7395   002A92                     u4901:
  7396   002A92  EF7D  F015         	goto	l4387
  7397   002A96                     u4900:
  7398   002A96                     
  7399                           ;pathfinder.c: 143:                 rightTURN(c->right_90, mL, mR);
  7400   002A96  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7401   002A9A  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7402   002A9E  501F               	movf	maze_return@c^0,w,c
  7403   002AA0  6ED9               	movwf	fsr2l,c
  7404   002AA2  6ADA               	clrf	fsr2h,c
  7405   002AA4  0E01               	movlw	1
  7406   002AA6  26D9               	addwf	fsr2l,f,c
  7407   002AA8  50DF               	movf	indf2,w,c
  7408   002AAA  EC61  F01F         	call	_rightTURN
  7409                           
  7410                           ;pathfinder.c: 144:                 rightTURN(c->right_90, mL, mR);
  7411   002AAE  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7412   002AB2  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7413   002AB6  501F               	movf	maze_return@c^0,w,c
  7414   002AB8  6ED9               	movwf	fsr2l,c
  7415   002ABA  6ADA               	clrf	fsr2h,c
  7416   002ABC  0E01               	movlw	1
  7417   002ABE  26D9               	addwf	fsr2l,f,c
  7418   002AC0  50DF               	movf	indf2,w,c
  7419   002AC2  EC61  F01F         	call	_rightTURN
  7420                           
  7421                           ;pathfinder.c: 145:                 backward(c->backward_one, mL, mR);
  7422   002AC6  C020  F013         	movff	maze_return@mL,backward@mL
  7423   002ACA  C021  F014         	movff	maze_return@mR,backward@mR
  7424   002ACE  501F               	movf	maze_return@c^0,w,c
  7425   002AD0  6ED9               	movwf	fsr2l,c
  7426   002AD2  6ADA               	clrf	fsr2h,c
  7427   002AD4  0E06               	movlw	6
  7428   002AD6  26D9               	addwf	fsr2l,f,c
  7429   002AD8  50DF               	movf	indf2,w,c
  7430   002ADA  ECBC  F01C         	call	_backward
  7431                           
  7432                           ;pathfinder.c: 146:                 forward(c->forward_half, mL, mR);
  7433   002ADE  C020  F013         	movff	maze_return@mL,forward@mL
  7434   002AE2  C021  F014         	movff	maze_return@mR,forward@mR
  7435   002AE6  501F               	movf	maze_return@c^0,w,c
  7436   002AE8  6ED9               	movwf	fsr2l,c
  7437   002AEA  6ADA               	clrf	fsr2h,c
  7438   002AEC  0E07               	movlw	7
  7439   002AEE  26D9               	addwf	fsr2l,f,c
  7440   002AF0  50DF               	movf	indf2,w,c
  7441   002AF2  ECC2  F01E         	call	_forward
  7442                           
  7443                           ;pathfinder.c: 147:             }
  7444   002AF6  EFC7  F016         	goto	l4403
  7445   002AFA                     l4387:
  7446   002AFA  0E3C               	movlw	low _Operation_History
  7447   002AFC  2429               	addwf	maze_return@i^0,w,c
  7448   002AFE  6ED9               	movwf	fsr2l,c
  7449   002B00  0E01               	movlw	high _Operation_History
  7450   002B02  202A               	addwfc	(maze_return@i+1)^0,w,c
  7451   002B04  6EDA               	movwf	fsr2h,c
  7452   002B06  0E04               	movlw	4
  7453   002B08  18DE               	xorwf	postinc2,w,c
  7454   002B0A  A4D8               	btfss	status,2,c
  7455   002B0C  EF8A  F015         	goto	u4911
  7456   002B10  EF8C  F015         	goto	u4910
  7457   002B14                     u4911:
  7458   002B14  EFEE  F015         	goto	l4391
  7459   002B18                     u4910:
  7460   002B18                     
  7461                           ;pathfinder.c: 151:                 rightTURN(c->right_90, mL, mR);
  7462   002B18  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7463   002B1C  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7464   002B20  501F               	movf	maze_return@c^0,w,c
  7465   002B22  6ED9               	movwf	fsr2l,c
  7466   002B24  6ADA               	clrf	fsr2h,c
  7467   002B26  0E01               	movlw	1
  7468   002B28  26D9               	addwf	fsr2l,f,c
  7469   002B2A  50DF               	movf	indf2,w,c
  7470   002B2C  EC61  F01F         	call	_rightTURN
  7471                           
  7472                           ;pathfinder.c: 152:                 forward(c->forward_one, mL, mR);
  7473   002B30  C020  F013         	movff	maze_return@mL,forward@mL
  7474   002B34  C021  F014         	movff	maze_return@mR,forward@mR
  7475   002B38  501F               	movf	maze_return@c^0,w,c
  7476   002B3A  6ED9               	movwf	fsr2l,c
  7477   002B3C  6ADA               	clrf	fsr2h,c
  7478   002B3E  0E05               	movlw	5
  7479   002B40  26D9               	addwf	fsr2l,f,c
  7480   002B42  50DF               	movf	indf2,w,c
  7481   002B44  ECC2  F01E         	call	_forward
  7482                           
  7483                           ;pathfinder.c: 155:                 forward(c->forward_one, mL, mR);
  7484   002B48  C020  F013         	movff	maze_return@mL,forward@mL
  7485   002B4C  C021  F014         	movff	maze_return@mR,forward@mR
  7486   002B50  501F               	movf	maze_return@c^0,w,c
  7487   002B52  6ED9               	movwf	fsr2l,c
  7488   002B54  6ADA               	clrf	fsr2h,c
  7489   002B56  0E05               	movlw	5
  7490   002B58  26D9               	addwf	fsr2l,f,c
  7491   002B5A  50DF               	movf	indf2,w,c
  7492   002B5C  ECC2  F01E         	call	_forward
  7493                           
  7494                           ;pathfinder.c: 156:                 backward(c->backward_half, mL, mR);
  7495   002B60  C020  F013         	movff	maze_return@mL,backward@mL
  7496   002B64  C021  F014         	movff	maze_return@mR,backward@mR
  7497   002B68  501F               	movf	maze_return@c^0,w,c
  7498   002B6A  6ED9               	movwf	fsr2l,c
  7499   002B6C  6ADA               	clrf	fsr2h,c
  7500   002B6E  0E08               	movlw	8
  7501   002B70  26D9               	addwf	fsr2l,f,c
  7502   002B72  50DF               	movf	indf2,w,c
  7503   002B74  ECBC  F01C         	call	_backward
  7504                           
  7505                           ;pathfinder.c: 157:                 rightTURN(c->right_90, mL, mR);
  7506   002B78  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7507   002B7C  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7508   002B80  501F               	movf	maze_return@c^0,w,c
  7509   002B82  6ED9               	movwf	fsr2l,c
  7510   002B84  6ADA               	clrf	fsr2h,c
  7511   002B86  0E01               	movlw	1
  7512   002B88  26D9               	addwf	fsr2l,f,c
  7513   002B8A  50DF               	movf	indf2,w,c
  7514   002B8C  EC61  F01F         	call	_rightTURN
  7515                           
  7516                           ;pathfinder.c: 158:                 rightTURN(c->right_90, mL, mR);
  7517   002B90  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7518   002B94  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7519   002B98  501F               	movf	maze_return@c^0,w,c
  7520   002B9A  6ED9               	movwf	fsr2l,c
  7521   002B9C  6ADA               	clrf	fsr2h,c
  7522   002B9E  0E01               	movlw	1
  7523   002BA0  26D9               	addwf	fsr2l,f,c
  7524   002BA2  50DF               	movf	indf2,w,c
  7525   002BA4  EC61  F01F         	call	_rightTURN
  7526                           
  7527                           ;pathfinder.c: 159:                 backward(c->backward_one, mL, mR);
  7528   002BA8  C020  F013         	movff	maze_return@mL,backward@mL
  7529   002BAC  C021  F014         	movff	maze_return@mR,backward@mR
  7530   002BB0  501F               	movf	maze_return@c^0,w,c
  7531   002BB2  6ED9               	movwf	fsr2l,c
  7532   002BB4  6ADA               	clrf	fsr2h,c
  7533   002BB6  0E06               	movlw	6
  7534   002BB8  26D9               	addwf	fsr2l,f,c
  7535   002BBA  50DF               	movf	indf2,w,c
  7536   002BBC  ECBC  F01C         	call	_backward
  7537                           
  7538                           ;pathfinder.c: 160:                 forward(c->forward_half, mL, mR);
  7539   002BC0  C020  F013         	movff	maze_return@mL,forward@mL
  7540   002BC4  C021  F014         	movff	maze_return@mR,forward@mR
  7541   002BC8  501F               	movf	maze_return@c^0,w,c
  7542   002BCA  6ED9               	movwf	fsr2l,c
  7543   002BCC  6ADA               	clrf	fsr2h,c
  7544   002BCE  0E07               	movlw	7
  7545   002BD0  26D9               	addwf	fsr2l,f,c
  7546   002BD2  50DF               	movf	indf2,w,c
  7547   002BD4  ECC2  F01E         	call	_forward
  7548                           
  7549                           ;pathfinder.c: 161:             }
  7550   002BD8  EFC7  F016         	goto	l4403
  7551   002BDC                     l4391:
  7552   002BDC  0E3C               	movlw	low _Operation_History
  7553   002BDE  2429               	addwf	maze_return@i^0,w,c
  7554   002BE0  6ED9               	movwf	fsr2l,c
  7555   002BE2  0E01               	movlw	high _Operation_History
  7556   002BE4  202A               	addwfc	(maze_return@i+1)^0,w,c
  7557   002BE6  6EDA               	movwf	fsr2h,c
  7558   002BE8  0E05               	movlw	5
  7559   002BEA  18DE               	xorwf	postinc2,w,c
  7560   002BEC  A4D8               	btfss	status,2,c
  7561   002BEE  EFFB  F015         	goto	u4921
  7562   002BF2  EFFD  F015         	goto	u4920
  7563   002BF6                     u4921:
  7564   002BF6  EF5F  F016         	goto	l4395
  7565   002BFA                     u4920:
  7566   002BFA                     
  7567                           ;pathfinder.c: 164:                 leftTURN(c->left_90, mL, mR);
  7568   002BFA  C020  F013         	movff	maze_return@mL,leftTURN@mL
  7569   002BFE  C021  F014         	movff	maze_return@mR,leftTURN@mR
  7570   002C02  501F               	movf	maze_return@c^0,w,c
  7571   002C04  6ED9               	movwf	fsr2l,c
  7572   002C06  6ADA               	clrf	fsr2h,c
  7573   002C08  0E02               	movlw	2
  7574   002C0A  26D9               	addwf	fsr2l,f,c
  7575   002C0C  50DF               	movf	indf2,w,c
  7576   002C0E  ECFF  F01F         	call	_leftTURN
  7577                           
  7578                           ;pathfinder.c: 165:                 forward(c->forward_one, mL, mR);
  7579   002C12  C020  F013         	movff	maze_return@mL,forward@mL
  7580   002C16  C021  F014         	movff	maze_return@mR,forward@mR
  7581   002C1A  501F               	movf	maze_return@c^0,w,c
  7582   002C1C  6ED9               	movwf	fsr2l,c
  7583   002C1E  6ADA               	clrf	fsr2h,c
  7584   002C20  0E05               	movlw	5
  7585   002C22  26D9               	addwf	fsr2l,f,c
  7586   002C24  50DF               	movf	indf2,w,c
  7587   002C26  ECC2  F01E         	call	_forward
  7588                           
  7589                           ;pathfinder.c: 168:                 forward(c->forward_one, mL, mR);
  7590   002C2A  C020  F013         	movff	maze_return@mL,forward@mL
  7591   002C2E  C021  F014         	movff	maze_return@mR,forward@mR
  7592   002C32  501F               	movf	maze_return@c^0,w,c
  7593   002C34  6ED9               	movwf	fsr2l,c
  7594   002C36  6ADA               	clrf	fsr2h,c
  7595   002C38  0E05               	movlw	5
  7596   002C3A  26D9               	addwf	fsr2l,f,c
  7597   002C3C  50DF               	movf	indf2,w,c
  7598   002C3E  ECC2  F01E         	call	_forward
  7599                           
  7600                           ;pathfinder.c: 169:                 backward(c->backward_half, mL, mR);
  7601   002C42  C020  F013         	movff	maze_return@mL,backward@mL
  7602   002C46  C021  F014         	movff	maze_return@mR,backward@mR
  7603   002C4A  501F               	movf	maze_return@c^0,w,c
  7604   002C4C  6ED9               	movwf	fsr2l,c
  7605   002C4E  6ADA               	clrf	fsr2h,c
  7606   002C50  0E08               	movlw	8
  7607   002C52  26D9               	addwf	fsr2l,f,c
  7608   002C54  50DF               	movf	indf2,w,c
  7609   002C56  ECBC  F01C         	call	_backward
  7610                           
  7611                           ;pathfinder.c: 170:                 rightTURN(c->right_90, mL, mR);
  7612   002C5A  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7613   002C5E  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7614   002C62  501F               	movf	maze_return@c^0,w,c
  7615   002C64  6ED9               	movwf	fsr2l,c
  7616   002C66  6ADA               	clrf	fsr2h,c
  7617   002C68  0E01               	movlw	1
  7618   002C6A  26D9               	addwf	fsr2l,f,c
  7619   002C6C  50DF               	movf	indf2,w,c
  7620   002C6E  EC61  F01F         	call	_rightTURN
  7621                           
  7622                           ;pathfinder.c: 171:                 rightTURN(c->right_90, mL, mR);
  7623   002C72  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7624   002C76  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7625   002C7A  501F               	movf	maze_return@c^0,w,c
  7626   002C7C  6ED9               	movwf	fsr2l,c
  7627   002C7E  6ADA               	clrf	fsr2h,c
  7628   002C80  0E01               	movlw	1
  7629   002C82  26D9               	addwf	fsr2l,f,c
  7630   002C84  50DF               	movf	indf2,w,c
  7631   002C86  EC61  F01F         	call	_rightTURN
  7632                           
  7633                           ;pathfinder.c: 172:                 backward(c->backward_one, mL, mR);
  7634   002C8A  C020  F013         	movff	maze_return@mL,backward@mL
  7635   002C8E  C021  F014         	movff	maze_return@mR,backward@mR
  7636   002C92  501F               	movf	maze_return@c^0,w,c
  7637   002C94  6ED9               	movwf	fsr2l,c
  7638   002C96  6ADA               	clrf	fsr2h,c
  7639   002C98  0E06               	movlw	6
  7640   002C9A  26D9               	addwf	fsr2l,f,c
  7641   002C9C  50DF               	movf	indf2,w,c
  7642   002C9E  ECBC  F01C         	call	_backward
  7643                           
  7644                           ;pathfinder.c: 173:                 forward(c->forward_half, mL, mR);
  7645   002CA2  C020  F013         	movff	maze_return@mL,forward@mL
  7646   002CA6  C021  F014         	movff	maze_return@mR,forward@mR
  7647   002CAA  501F               	movf	maze_return@c^0,w,c
  7648   002CAC  6ED9               	movwf	fsr2l,c
  7649   002CAE  6ADA               	clrf	fsr2h,c
  7650   002CB0  0E07               	movlw	7
  7651   002CB2  26D9               	addwf	fsr2l,f,c
  7652   002CB4  50DF               	movf	indf2,w,c
  7653   002CB6  ECC2  F01E         	call	_forward
  7654                           
  7655                           ;pathfinder.c: 175:             }
  7656   002CBA  EFC7  F016         	goto	l4403
  7657   002CBE                     l4395:
  7658   002CBE  0E3C               	movlw	low _Operation_History
  7659   002CC0  2429               	addwf	maze_return@i^0,w,c
  7660   002CC2  6ED9               	movwf	fsr2l,c
  7661   002CC4  0E01               	movlw	high _Operation_History
  7662   002CC6  202A               	addwfc	(maze_return@i+1)^0,w,c
  7663   002CC8  6EDA               	movwf	fsr2h,c
  7664   002CCA  0E06               	movlw	6
  7665   002CCC  18DE               	xorwf	postinc2,w,c
  7666   002CCE  A4D8               	btfss	status,2,c
  7667   002CD0  EF6C  F016         	goto	u4931
  7668   002CD4  EF6E  F016         	goto	u4930
  7669   002CD8                     u4931:
  7670   002CD8  EF94  F016         	goto	l4399
  7671   002CDC                     u4930:
  7672   002CDC                     
  7673                           ;pathfinder.c: 178:                 leftTURN(c->left_135, mL, mR);
  7674   002CDC  C020  F013         	movff	maze_return@mL,leftTURN@mL
  7675   002CE0  C021  F014         	movff	maze_return@mR,leftTURN@mR
  7676   002CE4  501F               	movf	maze_return@c^0,w,c
  7677   002CE6  6ED9               	movwf	fsr2l,c
  7678   002CE8  6ADA               	clrf	fsr2h,c
  7679   002CEA  0E04               	movlw	4
  7680   002CEC  26D9               	addwf	fsr2l,f,c
  7681   002CEE  50DF               	movf	indf2,w,c
  7682   002CF0  ECFF  F01F         	call	_leftTURN
  7683                           
  7684                           ;pathfinder.c: 179:                 backward(c->backward_one, mL, mR);
  7685   002CF4  C020  F013         	movff	maze_return@mL,backward@mL
  7686   002CF8  C021  F014         	movff	maze_return@mR,backward@mR
  7687   002CFC  501F               	movf	maze_return@c^0,w,c
  7688   002CFE  6ED9               	movwf	fsr2l,c
  7689   002D00  6ADA               	clrf	fsr2h,c
  7690   002D02  0E06               	movlw	6
  7691   002D04  26D9               	addwf	fsr2l,f,c
  7692   002D06  50DF               	movf	indf2,w,c
  7693   002D08  ECBC  F01C         	call	_backward
  7694                           
  7695                           ;pathfinder.c: 180:                 forward(c->forward_half, mL, mR);
  7696   002D0C  C020  F013         	movff	maze_return@mL,forward@mL
  7697   002D10  C021  F014         	movff	maze_return@mR,forward@mR
  7698   002D14  501F               	movf	maze_return@c^0,w,c
  7699   002D16  6ED9               	movwf	fsr2l,c
  7700   002D18  6ADA               	clrf	fsr2h,c
  7701   002D1A  0E07               	movlw	7
  7702   002D1C  26D9               	addwf	fsr2l,f,c
  7703   002D1E  50DF               	movf	indf2,w,c
  7704   002D20  ECC2  F01E         	call	_forward
  7705                           
  7706                           ;pathfinder.c: 181:             }
  7707   002D24  EFC7  F016         	goto	l4403
  7708   002D28                     l4399:
  7709   002D28  0E3C               	movlw	low _Operation_History
  7710   002D2A  2429               	addwf	maze_return@i^0,w,c
  7711   002D2C  6ED9               	movwf	fsr2l,c
  7712   002D2E  0E01               	movlw	high _Operation_History
  7713   002D30  202A               	addwfc	(maze_return@i+1)^0,w,c
  7714   002D32  6EDA               	movwf	fsr2h,c
  7715   002D34  0E07               	movlw	7
  7716   002D36  18DE               	xorwf	postinc2,w,c
  7717   002D38  A4D8               	btfss	status,2,c
  7718   002D3A  EFA1  F016         	goto	u4941
  7719   002D3E  EFA3  F016         	goto	u4940
  7720   002D42                     u4941:
  7721   002D42  EFD1  F014         	goto	l577
  7722   002D46                     u4940:
  7723   002D46                     
  7724                           ;pathfinder.c: 184:                 rightTURN(c->right_135, mL, mR);
  7725   002D46  C020  F013         	movff	maze_return@mL,rightTURN@mL
  7726   002D4A  C021  F014         	movff	maze_return@mR,rightTURN@mR
  7727   002D4E  501F               	movf	maze_return@c^0,w,c
  7728   002D50  6ED9               	movwf	fsr2l,c
  7729   002D52  6ADA               	clrf	fsr2h,c
  7730   002D54  0E03               	movlw	3
  7731   002D56  26D9               	addwf	fsr2l,f,c
  7732   002D58  50DF               	movf	indf2,w,c
  7733   002D5A  EC61  F01F         	call	_rightTURN
  7734                           
  7735                           ;pathfinder.c: 185:                 backward(c->backward_one, mL, mR);
  7736   002D5E  C020  F013         	movff	maze_return@mL,backward@mL
  7737   002D62  C021  F014         	movff	maze_return@mR,backward@mR
  7738   002D66  501F               	movf	maze_return@c^0,w,c
  7739   002D68  6ED9               	movwf	fsr2l,c
  7740   002D6A  6ADA               	clrf	fsr2h,c
  7741   002D6C  0E06               	movlw	6
  7742   002D6E  26D9               	addwf	fsr2l,f,c
  7743   002D70  50DF               	movf	indf2,w,c
  7744   002D72  ECBC  F01C         	call	_backward
  7745                           
  7746                           ;pathfinder.c: 186:                 forward(c->forward_half, mL, mR);
  7747   002D76  C020  F013         	movff	maze_return@mL,forward@mL
  7748   002D7A  C021  F014         	movff	maze_return@mR,forward@mR
  7749   002D7E  501F               	movf	maze_return@c^0,w,c
  7750   002D80  6ED9               	movwf	fsr2l,c
  7751   002D82  6ADA               	clrf	fsr2h,c
  7752   002D84  0E07               	movlw	7
  7753   002D86  26D9               	addwf	fsr2l,f,c
  7754   002D88  50DF               	movf	indf2,w,c
  7755   002D8A  ECC2  F01E         	call	_forward
  7756   002D8E                     l4403:
  7757                           
  7758                           ;pathfinder.c: 188:         }
  7759   002D8E  0629               	decf	maze_return@i^0,f,c
  7760   002D90  A0D8               	btfss	status,0,c
  7761   002D92  062A               	decf	(maze_return@i+1)^0,f,c
  7762   002D94  BE2A               	btfsc	(maze_return@i+1)^0,7,c
  7763   002D96  EFD1  F016         	goto	u4950
  7764   002D9A  EFCF  F016         	goto	u4951
  7765   002D9E                     u4951:
  7766   002D9E  EF8F  F014         	goto	l4363
  7767   002DA2                     u4950:
  7768   002DA2                     
  7769                           ;pathfinder.c: 191:         Operation_Count = 0;
  7770   002DA2  0E00               	movlw	0
  7771   002DA4  0100               	movlb	0	; () banked
  7772   002DA6  6FDB               	movwf	_Operation_Count& (0+255),b
  7773                           
  7774                           ;pathfinder.c: 192:         for (char i = 0; i < length; ++i) {
  7775   002DA8  0E00               	movlw	0
  7776   002DAA  6E28               	movwf	maze_return@i_2039^0,c
  7777   002DAC  EFE0  F016         	goto	l4413
  7778   002DB0                     l4409:
  7779                           
  7780                           ;pathfinder.c: 193:             Operation_History[i] = 0;
  7781   002DB0  0E3C               	movlw	low _Operation_History
  7782   002DB2  2428               	addwf	maze_return@i_2039^0,w,c
  7783   002DB4  6ED9               	movwf	fsr2l,c
  7784   002DB6  6ADA               	clrf	fsr2h,c
  7785   002DB8  0E01               	movlw	high _Operation_History
  7786   002DBA  22DA               	addwfc	fsr2h,f,c
  7787   002DBC  6ADF               	clrf	indf2,c
  7788   002DBE                     
  7789                           ;pathfinder.c: 194:         }
  7790   002DBE  2A28               	incf	maze_return@i_2039^0,f,c
  7791   002DC0                     l4413:
  7792   002DC0  0E31               	movlw	49
  7793   002DC2  6428               	cpfsgt	maze_return@i_2039^0,c
  7794   002DC4  EFE6  F016         	goto	u4961
  7795   002DC8  EFE8  F016         	goto	u4960
  7796   002DCC                     u4961:
  7797   002DCC  EFD8  F016         	goto	l4409
  7798   002DD0                     u4960:
  7799   002DD0  0012               	return		;funcret
  7800   002DD2                     __end_of_maze_return:
  7801                           	callstack 0
  7802                           
  7803 ;; *************** function _initDCmotorsPWM *****************
  7804 ;; Defined at:
  7805 ;;		line 5 in file "dc_motor_v1.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1    wreg      void 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;Total ram usage:        2 bytes
  7824 ;; Hardware stack levels used: 1
  7825 ;; This function calls:
  7826 ;;		Nothing
  7827 ;; This function is called by:
  7828 ;;		_main
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text28
  7833   00467E                     __ptext28:
  7834                           	callstack 0
  7835   00467E                     _initDCmotorsPWM:
  7836                           	callstack 30
  7837   00467E                     
  7838                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  7839   00467E  9485               	bcf	133,2,c	;volatile
  7840                           
  7841                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  7842   004680  9885               	bcf	133,4,c	;volatile
  7843                           
  7844                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  7845   004682  9E83               	bcf	131,7,c	;volatile
  7846                           
  7847                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  7848   004684  9C87               	bcf	135,6,c	;volatile
  7849                           
  7850                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  7851   004686  947D               	bcf	125,2,c	;volatile
  7852                           
  7853                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  7854   004688  987D               	bcf	125,4,c	;volatile
  7855                           
  7856                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  7857   00468A  9E7B               	bcf	123,7,c	;volatile
  7858                           
  7859                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  7860   00468C  9C7F               	bcf	127,6,c	;volatile
  7861   00468E                     
  7862                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  7863   00468E  0E05               	movlw	5
  7864   004690  010E               	movlb	14	; () banked
  7865   004692  6F74               	movwf	116,b	;volatile
  7866                           
  7867                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  7868   004694  0E06               	movlw	6
  7869   004696  6F76               	movwf	118,b	;volatile
  7870                           
  7871                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  7872   004698  0E07               	movlw	7
  7873   00469A  6F69               	movwf	105,b	;volatile
  7874                           
  7875                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  7876   00469C  0E08               	movlw	8
  7877   00469E  6F88               	movwf	136,b	;volatile
  7878                           
  7879                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  7880   0046A0  50BD               	movf	189,w,c	;volatile
  7881   0046A2  0B8F               	andlw	-113
  7882   0046A4  0940               	iorlw	64
  7883   0046A6  6EBD               	movwf	189,c	;volatile
  7884                           
  7885                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  7886   0046A8  0EE0               	movlw	-32
  7887   0046AA  16BE               	andwf	190,f,c	;volatile
  7888                           
  7889                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  7890   0046AC  50BF               	movf	191,w,c	;volatile
  7891   0046AE  0BF0               	andlw	-16
  7892   0046B0  0901               	iorlw	1
  7893   0046B2  6EBF               	movwf	191,c	;volatile
  7894   0046B4                     
  7895                           ; BSR set to: 14
  7896                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  7897   0046B4  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7898   0046B8                     
  7899                           ; BSR set to: 14
  7900                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  7901   0046B8  8EBD               	bsf	189,7,c	;volatile
  7902                           
  7903                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  7904   0046BA  0E00               	movlw	0
  7905   0046BC  6EAA               	movwf	170,c	;volatile
  7906                           
  7907                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  7908   0046BE  0E00               	movlw	0
  7909   0046C0  6EA6               	movwf	166,c	;volatile
  7910                           
  7911                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  7912   0046C2  0E00               	movlw	0
  7913   0046C4  010F               	movlb	15	; () banked
  7914   0046C6  6F25               	movwf	37,b	;volatile
  7915                           
  7916                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  7917   0046C8  0E00               	movlw	0
  7918   0046CA  6F21               	movwf	33,b	;volatile
  7919                           
  7920                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7921   0046CC  0EFC               	movlw	-4
  7922   0046CE  16AD               	andwf	173,f,c	;volatile
  7923                           
  7924                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7925   0046D0  0EF3               	movlw	-13
  7926   0046D2  16AD               	andwf	173,f,c	;volatile
  7927                           
  7928                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7929   0046D4  0ECF               	movlw	-49
  7930   0046D6  16AD               	andwf	173,f,c	;volatile
  7931                           
  7932                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7933   0046D8  0E3F               	movlw	-193
  7934   0046DA  16AD               	andwf	173,f,c	;volatile
  7935   0046DC                     
  7936                           ; BSR set to: 15
  7937                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  7938   0046DC  88AB               	bsf	171,4,c	;volatile
  7939                           
  7940                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7941   0046DE  50AB               	movf	171,w,c	;volatile
  7942   0046E0  0BF0               	andlw	-16
  7943   0046E2  090C               	iorlw	12
  7944   0046E4  6EAB               	movwf	171,c	;volatile
  7945   0046E6                     
  7946                           ; BSR set to: 15
  7947                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  7948   0046E6  8EAB               	bsf	171,7,c	;volatile
  7949   0046E8                     
  7950                           ; BSR set to: 15
  7951                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  7952   0046E8  88A7               	bsf	167,4,c	;volatile
  7953                           
  7954                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7955   0046EA  50A7               	movf	167,w,c	;volatile
  7956   0046EC  0BF0               	andlw	-16
  7957   0046EE  090C               	iorlw	12
  7958   0046F0  6EA7               	movwf	167,c	;volatile
  7959   0046F2                     
  7960                           ; BSR set to: 15
  7961                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  7962   0046F2  8EA7               	bsf	167,7,c	;volatile
  7963   0046F4                     
  7964                           ; BSR set to: 15
  7965                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  7966   0046F4  8926               	bsf	38,4,b	;volatile
  7967                           
  7968                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7969   0046F6  5126               	movf	38,w,b	;volatile
  7970   0046F8  0BF0               	andlw	-16
  7971   0046FA  090C               	iorlw	12
  7972   0046FC  6F26               	movwf	38,b	;volatile
  7973   0046FE                     
  7974                           ; BSR set to: 15
  7975                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  7976   0046FE  8F26               	bsf	38,7,b	;volatile
  7977   004700                     
  7978                           ; BSR set to: 15
  7979                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  7980   004700  8922               	bsf	34,4,b	;volatile
  7981                           
  7982                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7983   004702  5122               	movf	34,w,b	;volatile
  7984   004704  0BF0               	andlw	-16
  7985   004706  090C               	iorlw	12
  7986   004708  6F22               	movwf	34,b	;volatile
  7987   00470A                     
  7988                           ; BSR set to: 15
  7989                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  7990   00470A  8F22               	bsf	34,7,b	;volatile
  7991   00470C                     
  7992                           ; BSR set to: 15
  7993                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  7994   00470C  9688               	bcf	136,3,c	;volatile
  7995   00470E                     
  7996                           ; BSR set to: 15
  7997                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  7998   00470E  9680               	bcf	128,3,c	;volatile
  7999   004710                     
  8000                           ; BSR set to: 15
  8001   004710  0012               	return		;funcret
  8002   004712                     __end_of_initDCmotorsPWM:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function _calibration_routine *****************
  8006 ;; Defined at:
  8007 ;;		line 89 in file "calibration.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  c               1   30[COMRAM] PTR struct calibration_s
  8010 ;;		 -> calibration(9), 
  8011 ;;  mL              1   31[COMRAM] PTR struct DC_motor
  8012 ;;		 -> motorL(9), 
  8013 ;;  mR              1   32[COMRAM] PTR struct DC_motor
  8014 ;;		 -> motorR(9), 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8026 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;Total ram usage:        4 bytes
  8031 ;; Hardware stack levels used: 1
  8032 ;; Hardware stack levels required when called: 3
  8033 ;; This function calls:
  8034 ;;		_adjust_calibration
  8035 ;;		_backward
  8036 ;;		_forward
  8037 ;;		_leftTURN
  8038 ;;		_rightTURN
  8039 ;;		_switch_calibration
  8040 ;; This function is called by:
  8041 ;;		_main
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text29
  8046   003596                     __ptext29:
  8047                           	callstack 0
  8048   003596                     _calibration_routine:
  8049                           	callstack 27
  8050   003596                     l206:
  8051   003596                     
  8052                           ;calibration.c: 95:         if(c->index == 1){
  8053   003596  501F               	movf	calibration_routine@c^0,w,c
  8054   003598  6ED9               	movwf	fsr2l,c
  8055   00359A  6ADA               	clrf	fsr2h,c
  8056   00359C  04DE               	decf	postinc2,w,c
  8057   00359E  A4D8               	btfss	status,2,c
  8058   0035A0  EFD4  F01A         	goto	u4661
  8059   0035A4  EFD6  F01A         	goto	u4660
  8060   0035A8                     u4661:
  8061   0035A8  EFEA  F01A         	goto	l4145
  8062   0035AC                     u4660:
  8063   0035AC                     
  8064                           ;calibration.c: 96:             adjust_calibration(&(c->right_90));
  8065   0035AC  281F               	incf	calibration_routine@c^0,w,c
  8066   0035AE  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8067   0035B0  EC1B  F01E         	call	_adjust_calibration	;wreg free
  8068   0035B4                     
  8069                           ;calibration.c: 97:             rightTURN(c->right_90, mL, mR);
  8070   0035B4  C020  F013         	movff	calibration_routine@mL,rightTURN@mL
  8071   0035B8  C021  F014         	movff	calibration_routine@mR,rightTURN@mR
  8072   0035BC  501F               	movf	calibration_routine@c^0,w,c
  8073   0035BE  6ED9               	movwf	fsr2l,c
  8074   0035C0  6ADA               	clrf	fsr2h,c
  8075   0035C2  0E01               	movlw	1
  8076   0035C4  26D9               	addwf	fsr2l,f,c
  8077   0035C6  50DF               	movf	indf2,w,c
  8078   0035C8  EC61  F01F         	call	_rightTURN
  8079   0035CC                     
  8080                           ;calibration.c: 98:             switch_calibration(&(c->index));
  8081   0035CC  C01F  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8082   0035D0  EC93  F022         	call	_switch_calibration	;wreg free
  8083   0035D4                     l4145:
  8084                           
  8085                           ;calibration.c: 101:         if(c->index == 2){
  8086   0035D4  501F               	movf	calibration_routine@c^0,w,c
  8087   0035D6  6ED9               	movwf	fsr2l,c
  8088   0035D8  6ADA               	clrf	fsr2h,c
  8089   0035DA  0E02               	movlw	2
  8090   0035DC  18DE               	xorwf	postinc2,w,c
  8091   0035DE  A4D8               	btfss	status,2,c
  8092   0035E0  EFF4  F01A         	goto	u4671
  8093   0035E4  EFF6  F01A         	goto	u4670
  8094   0035E8                     u4671:
  8095   0035E8  EF0B  F01B         	goto	l4153
  8096   0035EC                     u4670:
  8097   0035EC                     
  8098                           ;calibration.c: 102:             adjust_calibration(&(c->left_90));
  8099   0035EC  501F               	movf	calibration_routine@c^0,w,c
  8100   0035EE  0F02               	addlw	2
  8101   0035F0  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8102   0035F2  EC1B  F01E         	call	_adjust_calibration	;wreg free
  8103   0035F6                     
  8104                           ;calibration.c: 103:             leftTURN(c->left_90, mL, mR);
  8105   0035F6  C020  F013         	movff	calibration_routine@mL,leftTURN@mL
  8106   0035FA  C021  F014         	movff	calibration_routine@mR,leftTURN@mR
  8107   0035FE  501F               	movf	calibration_routine@c^0,w,c
  8108   003600  6ED9               	movwf	fsr2l,c
  8109   003602  6ADA               	clrf	fsr2h,c
  8110   003604  0E02               	movlw	2
  8111   003606  26D9               	addwf	fsr2l,f,c
  8112   003608  50DF               	movf	indf2,w,c
  8113   00360A  ECFF  F01F         	call	_leftTURN
  8114   00360E                     
  8115                           ;calibration.c: 104:             switch_calibration(&(c->index));
  8116   00360E  C01F  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8117   003612  EC93  F022         	call	_switch_calibration	;wreg free
  8118   003616                     l4153:
  8119                           
  8120                           ;calibration.c: 107:         if(c->index == 3){
  8121   003616  501F               	movf	calibration_routine@c^0,w,c
  8122   003618  6ED9               	movwf	fsr2l,c
  8123   00361A  6ADA               	clrf	fsr2h,c
  8124   00361C  0E03               	movlw	3
  8125   00361E  18DE               	xorwf	postinc2,w,c
  8126   003620  A4D8               	btfss	status,2,c
  8127   003622  EF15  F01B         	goto	u4681
  8128   003626  EF17  F01B         	goto	u4680
  8129   00362A                     u4681:
  8130   00362A  EF2C  F01B         	goto	l4161
  8131   00362E                     u4680:
  8132   00362E                     
  8133                           ;calibration.c: 108:             adjust_calibration(&(c->right_135));
  8134   00362E  501F               	movf	calibration_routine@c^0,w,c
  8135   003630  0F03               	addlw	3
  8136   003632  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8137   003634  EC1B  F01E         	call	_adjust_calibration	;wreg free
  8138   003638                     
  8139                           ;calibration.c: 109:             rightTURN(c->right_135, mL, mR);
  8140   003638  C020  F013         	movff	calibration_routine@mL,rightTURN@mL
  8141   00363C  C021  F014         	movff	calibration_routine@mR,rightTURN@mR
  8142   003640  501F               	movf	calibration_routine@c^0,w,c
  8143   003642  6ED9               	movwf	fsr2l,c
  8144   003644  6ADA               	clrf	fsr2h,c
  8145   003646  0E03               	movlw	3
  8146   003648  26D9               	addwf	fsr2l,f,c
  8147   00364A  50DF               	movf	indf2,w,c
  8148   00364C  EC61  F01F         	call	_rightTURN
  8149   003650                     
  8150                           ;calibration.c: 110:             switch_calibration(&(c->index));
  8151   003650  C01F  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8152   003654  EC93  F022         	call	_switch_calibration	;wreg free
  8153   003658                     l4161:
  8154                           
  8155                           ;calibration.c: 112:         if(c->index == 4){
  8156   003658  501F               	movf	calibration_routine@c^0,w,c
  8157   00365A  6ED9               	movwf	fsr2l,c
  8158   00365C  6ADA               	clrf	fsr2h,c
  8159   00365E  0E04               	movlw	4
  8160   003660  18DE               	xorwf	postinc2,w,c
  8161   003662  A4D8               	btfss	status,2,c
  8162   003664  EF36  F01B         	goto	u4691
  8163   003668  EF38  F01B         	goto	u4690
  8164   00366C                     u4691:
  8165   00366C  EF4D  F01B         	goto	l4169
  8166   003670                     u4690:
  8167   003670                     
  8168                           ;calibration.c: 113:             adjust_calibration(&(c->left_135));
  8169   003670  501F               	movf	calibration_routine@c^0,w,c
  8170   003672  0F04               	addlw	4
  8171   003674  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8172   003676  EC1B  F01E         	call	_adjust_calibration	;wreg free
  8173   00367A                     
  8174                           ;calibration.c: 114:             leftTURN(c->left_135, mL, mR);
  8175   00367A  C020  F013         	movff	calibration_routine@mL,leftTURN@mL
  8176   00367E  C021  F014         	movff	calibration_routine@mR,leftTURN@mR
  8177   003682  501F               	movf	calibration_routine@c^0,w,c
  8178   003684  6ED9               	movwf	fsr2l,c
  8179   003686  6ADA               	clrf	fsr2h,c
  8180   003688  0E04               	movlw	4
  8181   00368A  26D9               	addwf	fsr2l,f,c
  8182   00368C  50DF               	movf	indf2,w,c
  8183   00368E  ECFF  F01F         	call	_leftTURN
  8184   003692                     
  8185                           ;calibration.c: 115:             switch_calibration(&(c->index));
  8186   003692  C01F  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8187   003696  EC93  F022         	call	_switch_calibration	;wreg free
  8188   00369A                     l4169:
  8189                           
  8190                           ;calibration.c: 118:         if(c->index == 5 ){
  8191   00369A  501F               	movf	calibration_routine@c^0,w,c
  8192   00369C  6ED9               	movwf	fsr2l,c
  8193   00369E  6ADA               	clrf	fsr2h,c
  8194   0036A0  0E05               	movlw	5
  8195   0036A2  18DE               	xorwf	postinc2,w,c
  8196   0036A4  A4D8               	btfss	status,2,c
  8197   0036A6  EF57  F01B         	goto	u4701
  8198   0036AA  EF59  F01B         	goto	u4700
  8199   0036AE                     u4701:
  8200   0036AE  EF6E  F01B         	goto	l4177
  8201   0036B2                     u4700:
  8202   0036B2                     
  8203                           ;calibration.c: 119:             adjust_calibration(&(c->forward_one));
  8204   0036B2  501F               	movf	calibration_routine@c^0,w,c
  8205   0036B4  0F05               	addlw	5
  8206   0036B6  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8207   0036B8  EC1B  F01E         	call	_adjust_calibration	;wreg free
  8208   0036BC                     
  8209                           ;calibration.c: 120:             forward(c->forward_one, mL, mR);
  8210   0036BC  C020  F013         	movff	calibration_routine@mL,forward@mL
  8211   0036C0  C021  F014         	movff	calibration_routine@mR,forward@mR
  8212   0036C4  501F               	movf	calibration_routine@c^0,w,c
  8213   0036C6  6ED9               	movwf	fsr2l,c
  8214   0036C8  6ADA               	clrf	fsr2h,c
  8215   0036CA  0E05               	movlw	5
  8216   0036CC  26D9               	addwf	fsr2l,f,c
  8217   0036CE  50DF               	movf	indf2,w,c
  8218   0036D0  ECC2  F01E         	call	_forward
  8219   0036D4                     
  8220                           ;calibration.c: 121:             switch_calibration(&(c->index));
  8221   0036D4  C01F  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8222   0036D8  EC93  F022         	call	_switch_calibration	;wreg free
  8223   0036DC                     l4177:
  8224                           
  8225                           ;calibration.c: 124:         if(c->index == 6){
  8226   0036DC  501F               	movf	calibration_routine@c^0,w,c
  8227   0036DE  6ED9               	movwf	fsr2l,c
  8228   0036E0  6ADA               	clrf	fsr2h,c
  8229   0036E2  0E06               	movlw	6
  8230   0036E4  18DE               	xorwf	postinc2,w,c
  8231   0036E6  A4D8               	btfss	status,2,c
  8232   0036E8  EF78  F01B         	goto	u4711
  8233   0036EC  EF7A  F01B         	goto	u4710
  8234   0036F0                     u4711:
  8235   0036F0  EF8F  F01B         	goto	l4185
  8236   0036F4                     u4710:
  8237   0036F4                     
  8238                           ;calibration.c: 125:             adjust_calibration(&(c->backward_one));
  8239   0036F4  501F               	movf	calibration_routine@c^0,w,c
  8240   0036F6  0F06               	addlw	6
  8241   0036F8  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8242   0036FA  EC1B  F01E         	call	_adjust_calibration	;wreg free
  8243   0036FE                     
  8244                           ;calibration.c: 126:             backward(c->backward_one, mL, mR);
  8245   0036FE  C020  F013         	movff	calibration_routine@mL,backward@mL
  8246   003702  C021  F014         	movff	calibration_routine@mR,backward@mR
  8247   003706  501F               	movf	calibration_routine@c^0,w,c
  8248   003708  6ED9               	movwf	fsr2l,c
  8249   00370A  6ADA               	clrf	fsr2h,c
  8250   00370C  0E06               	movlw	6
  8251   00370E  26D9               	addwf	fsr2l,f,c
  8252   003710  50DF               	movf	indf2,w,c
  8253   003712  ECBC  F01C         	call	_backward
  8254   003716                     
  8255                           ;calibration.c: 127:             switch_calibration(&(c->index));
  8256   003716  C01F  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8257   00371A  EC93  F022         	call	_switch_calibration	;wreg free
  8258   00371E                     l4185:
  8259                           
  8260                           ;calibration.c: 130:         if(c->index == 7 ){
  8261   00371E  501F               	movf	calibration_routine@c^0,w,c
  8262   003720  6ED9               	movwf	fsr2l,c
  8263   003722  6ADA               	clrf	fsr2h,c
  8264   003724  0E07               	movlw	7
  8265   003726  18DE               	xorwf	postinc2,w,c
  8266   003728  A4D8               	btfss	status,2,c
  8267   00372A  EF99  F01B         	goto	u4721
  8268   00372E  EF9B  F01B         	goto	u4720
  8269   003732                     u4721:
  8270   003732  EFB0  F01B         	goto	l4193
  8271   003736                     u4720:
  8272   003736                     
  8273                           ;calibration.c: 131:             adjust_calibration(&(c->forward_half));
  8274   003736  501F               	movf	calibration_routine@c^0,w,c
  8275   003738  0F07               	addlw	7
  8276   00373A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8277   00373C  EC1B  F01E         	call	_adjust_calibration	;wreg free
  8278   003740                     
  8279                           ;calibration.c: 132:             forward(c->forward_half, mL, mR);
  8280   003740  C020  F013         	movff	calibration_routine@mL,forward@mL
  8281   003744  C021  F014         	movff	calibration_routine@mR,forward@mR
  8282   003748  501F               	movf	calibration_routine@c^0,w,c
  8283   00374A  6ED9               	movwf	fsr2l,c
  8284   00374C  6ADA               	clrf	fsr2h,c
  8285   00374E  0E07               	movlw	7
  8286   003750  26D9               	addwf	fsr2l,f,c
  8287   003752  50DF               	movf	indf2,w,c
  8288   003754  ECC2  F01E         	call	_forward
  8289   003758                     
  8290                           ;calibration.c: 133:             switch_calibration(&(c->index));
  8291   003758  C01F  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8292   00375C  EC93  F022         	call	_switch_calibration	;wreg free
  8293   003760                     l4193:
  8294                           
  8295                           ;calibration.c: 136:         if(c->index == 8){
  8296   003760  501F               	movf	calibration_routine@c^0,w,c
  8297   003762  6ED9               	movwf	fsr2l,c
  8298   003764  6ADA               	clrf	fsr2h,c
  8299   003766  0E08               	movlw	8
  8300   003768  18DE               	xorwf	postinc2,w,c
  8301   00376A  A4D8               	btfss	status,2,c
  8302   00376C  EFBA  F01B         	goto	u4731
  8303   003770  EFBC  F01B         	goto	u4730
  8304   003774                     u4731:
  8305   003774  EFD1  F01B         	goto	l4201
  8306   003778                     u4730:
  8307   003778                     
  8308                           ;calibration.c: 137:             adjust_calibration(&(c->backward_half));
  8309   003778  501F               	movf	calibration_routine@c^0,w,c
  8310   00377A  0F08               	addlw	8
  8311   00377C  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8312   00377E  EC1B  F01E         	call	_adjust_calibration	;wreg free
  8313   003782                     
  8314                           ;calibration.c: 138:             backward(c->backward_half, mL, mR);
  8315   003782  C020  F013         	movff	calibration_routine@mL,backward@mL
  8316   003786  C021  F014         	movff	calibration_routine@mR,backward@mR
  8317   00378A  501F               	movf	calibration_routine@c^0,w,c
  8318   00378C  6ED9               	movwf	fsr2l,c
  8319   00378E  6ADA               	clrf	fsr2h,c
  8320   003790  0E08               	movlw	8
  8321   003792  26D9               	addwf	fsr2l,f,c
  8322   003794  50DF               	movf	indf2,w,c
  8323   003796  ECBC  F01C         	call	_backward
  8324   00379A                     
  8325                           ;calibration.c: 139:             switch_calibration(&(c->index));
  8326   00379A  C01F  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8327   00379E  EC93  F022         	call	_switch_calibration	;wreg free
  8328   0037A2                     l4201:
  8329                           
  8330                           ;calibration.c: 142:         if(c->index >= 9){
  8331   0037A2  501F               	movf	calibration_routine@c^0,w,c
  8332   0037A4  6ED9               	movwf	fsr2l,c
  8333   0037A6  6ADA               	clrf	fsr2h,c
  8334   0037A8  0E08               	movlw	8
  8335   0037AA  64DF               	cpfsgt	indf2,c
  8336   0037AC  EFDA  F01B         	goto	u4741
  8337   0037B0  EFDC  F01B         	goto	u4740
  8338   0037B4                     u4741:
  8339   0037B4  EFCB  F01A         	goto	l206
  8340   0037B8                     u4740:
  8341   0037B8                     
  8342                           ;calibration.c: 143:             c->index = 1;
  8343   0037B8  501F               	movf	calibration_routine@c^0,w,c
  8344   0037BA  6ED9               	movwf	fsr2l,c
  8345   0037BC  6ADA               	clrf	fsr2h,c
  8346   0037BE  0E01               	movlw	1
  8347   0037C0  6EDF               	movwf	indf2,c
  8348   0037C2  0012               	return		;funcret
  8349   0037C4                     __end_of_calibration_routine:
  8350                           	callstack 0
  8351                           
  8352 ;; *************** function _switch_calibration *****************
  8353 ;; Defined at:
  8354 ;;		line 64 in file "calibration.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;  calibration_    1    0[COMRAM] PTR int 
  8357 ;;		 -> calibration(9), 
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;		None
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8369 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8373 ;;Total ram usage:        3 bytes
  8374 ;; Hardware stack levels used: 1
  8375 ;; This function calls:
  8376 ;;		Nothing
  8377 ;; This function is called by:
  8378 ;;		_calibration_routine
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           	psect	text30
  8383   004526                     __ptext30:
  8384                           	callstack 0
  8385   004526                     _switch_calibration:
  8386                           	callstack 29
  8387   004526                     l198:
  8388                           
  8389                           ;calibration.c: 70:         if(!PORTFbits.RF2){
  8390   004526  B48E               	btfsc	142,2,c	;volatile
  8391   004528  EF98  F022         	goto	u4391
  8392   00452C  EF9A  F022         	goto	u4390
  8393   004530                     u4391:
  8394   004530  EFC8  F022         	goto	l199
  8395   004534                     u4390:
  8396   004534                     
  8397                           ;calibration.c: 71:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8398   004534  0E11               	movlw	17
  8399   004536  6E03               	movwf	(??_switch_calibration+1)^0,c
  8400   004538  0E3C               	movlw	60
  8401   00453A  6E02               	movwf	??_switch_calibration^0,c
  8402   00453C  0ECB               	movlw	203
  8403   00453E                     u5137:
  8404   00453E  2EE8               	decfsz	wreg,f,c
  8405   004540  D7FE               	bra	u5137
  8406   004542  2E02               	decfsz	??_switch_calibration^0,f,c
  8407   004544  D7FC               	bra	u5137
  8408   004546  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8409   004548  D7FA               	bra	u5137
  8410   00454A  0000               	nop	
  8411   00454C                     
  8412                           ;calibration.c: 72:             *calibration_index = *calibration_index + 1;
  8413   00454C  5001               	movf	switch_calibration@calibration_index^0,w,c
  8414   00454E  6ED9               	movwf	fsr2l,c
  8415   004550  6ADA               	clrf	fsr2h,c
  8416   004552  CFDE F002          	movff	postinc2,??_switch_calibration
  8417   004556  CFDD F003          	movff	postdec2,??_switch_calibration+1
  8418   00455A  0E01               	movlw	1
  8419   00455C  2602               	addwf	??_switch_calibration^0,f,c
  8420   00455E  0E00               	movlw	0
  8421   004560  2203               	addwfc	(??_switch_calibration+1)^0,f,c
  8422   004562  5001               	movf	switch_calibration@calibration_index^0,w,c
  8423   004564  6ED9               	movwf	fsr2l,c
  8424   004566  6ADA               	clrf	fsr2h,c
  8425   004568  C002  FFDE         	movff	??_switch_calibration,postinc2
  8426   00456C  C003  FFDD         	movff	??_switch_calibration+1,postdec2
  8427   004570                     
  8428                           ;calibration.c: 73:             LATDbits.LATD7 = 1;
  8429   004570  8E7C               	bsf	124,7,c	;volatile
  8430   004572                     
  8431                           ;calibration.c: 74:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8432   004572  0E11               	movlw	17
  8433   004574  6E03               	movwf	(??_switch_calibration+1)^0,c
  8434   004576  0E3C               	movlw	60
  8435   004578  6E02               	movwf	??_switch_calibration^0,c
  8436   00457A  0ECB               	movlw	203
  8437   00457C                     u5147:
  8438   00457C  2EE8               	decfsz	wreg,f,c
  8439   00457E  D7FE               	bra	u5147
  8440   004580  2E02               	decfsz	??_switch_calibration^0,f,c
  8441   004582  D7FC               	bra	u5147
  8442   004584  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8443   004586  D7FA               	bra	u5147
  8444   004588  0000               	nop	
  8445   00458A                     
  8446                           ;calibration.c: 75:             LATDbits.LATD7 = 0;
  8447   00458A  9E7C               	bcf	124,7,c	;volatile
  8448                           
  8449                           ;calibration.c: 76:             break;
  8450   00458C  EFE9  F022         	goto	l203
  8451   004590                     l199:
  8452                           
  8453                           ;calibration.c: 79:         if(!PORTFbits.RF3){
  8454   004590  B68E               	btfsc	142,3,c	;volatile
  8455   004592  EFCD  F022         	goto	u4401
  8456   004596  EFCF  F022         	goto	u4400
  8457   00459A                     u4401:
  8458   00459A  EF93  F022         	goto	l198
  8459   00459E                     u4400:
  8460   00459E                     
  8461                           ;calibration.c: 80:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8462   00459E  0E11               	movlw	17
  8463   0045A0  6E03               	movwf	(??_switch_calibration+1)^0,c
  8464   0045A2  0E3C               	movlw	60
  8465   0045A4  6E02               	movwf	??_switch_calibration^0,c
  8466   0045A6  0ECB               	movlw	203
  8467   0045A8                     u5157:
  8468   0045A8  2EE8               	decfsz	wreg,f,c
  8469   0045AA  D7FE               	bra	u5157
  8470   0045AC  2E02               	decfsz	??_switch_calibration^0,f,c
  8471   0045AE  D7FC               	bra	u5157
  8472   0045B0  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8473   0045B2  D7FA               	bra	u5157
  8474   0045B4  0000               	nop	
  8475   0045B6                     
  8476                           ;calibration.c: 81:             LATHbits.LATH3 = 1;
  8477   0045B6  8680               	bsf	128,3,c	;volatile
  8478                           
  8479                           ;calibration.c: 82:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8480   0045B8  0E11               	movlw	17
  8481   0045BA  6E03               	movwf	(??_switch_calibration+1)^0,c
  8482   0045BC  0E3C               	movlw	60
  8483   0045BE  6E02               	movwf	??_switch_calibration^0,c
  8484   0045C0  0ECB               	movlw	203
  8485   0045C2                     u5167:
  8486   0045C2  2EE8               	decfsz	wreg,f,c
  8487   0045C4  D7FE               	bra	u5167
  8488   0045C6  2E02               	decfsz	??_switch_calibration^0,f,c
  8489   0045C8  D7FC               	bra	u5167
  8490   0045CA  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8491   0045CC  D7FA               	bra	u5167
  8492   0045CE  0000               	nop	
  8493   0045D0                     
  8494                           ;calibration.c: 83:             LATHbits.LATH3 = 0;
  8495   0045D0  9680               	bcf	128,3,c	;volatile
  8496   0045D2                     l203:
  8497   0045D2  0012               	return		;funcret
  8498   0045D4                     __end_of_switch_calibration:
  8499                           	callstack 0
  8500                           
  8501 ;; *************** function _rightTURN *****************
  8502 ;; Defined at:
  8503 ;;		line 255 in file "dc_motor_v1.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  rotation_cal    1    wreg     unsigned char 
  8506 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8507 ;;		 -> motorL(9), 
  8508 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8509 ;;		 -> motorR(9), 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  rotation_cal    1   21[COMRAM] unsigned char 
  8512 ;;  j               1   23[COMRAM] unsigned char 
  8513 ;;  i               1   22[COMRAM] unsigned char 
  8514 ;;  delay_time      1   25[COMRAM] unsigned char 
  8515 ;;  max_power       1   24[COMRAM] unsigned char 
  8516 ;;  acceleration    1    0        unsigned char 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      void 
  8519 ;; Registers used:
  8520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8529 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8530 ;;Total ram usage:        8 bytes
  8531 ;; Hardware stack levels used: 1
  8532 ;; Hardware stack levels required when called: 2
  8533 ;; This function calls:
  8534 ;;		___lbdiv
  8535 ;;		_delay_ms_function
  8536 ;;		_setMotorPWM
  8537 ;; This function is called by:
  8538 ;;		_calibration_routine
  8539 ;;		_maze_search
  8540 ;;		_maze_return
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text31
  8545   003EC2                     __ptext31:
  8546                           	callstack 0
  8547   003EC2                     _rightTURN:
  8548                           	callstack 27
  8549                           
  8550                           ;incstack = 0
  8551                           ;rightTURN@rotation_calibration stored from wreg
  8552   003EC2  6E16               	movwf	rightTURN@rotation_calibration^0,c
  8553   003EC4                     
  8554                           ;dc_motor_v1.c: 256:     mL->direction = 1;
  8555   003EC4  5013               	movf	rightTURN@mL^0,w,c
  8556   003EC6  6ED9               	movwf	fsr2l,c
  8557   003EC8  6ADA               	clrf	fsr2h,c
  8558   003ECA  0E01               	movlw	1
  8559   003ECC  26D9               	addwf	fsr2l,f,c
  8560   003ECE  0E01               	movlw	1
  8561   003ED0  6EDF               	movwf	indf2,c
  8562                           
  8563                           ;dc_motor_v1.c: 257:     mR->direction = 0;
  8564   003ED2  5014               	movf	rightTURN@mR^0,w,c
  8565   003ED4  6ED9               	movwf	fsr2l,c
  8566   003ED6  6ADA               	clrf	fsr2h,c
  8567   003ED8  0E01               	movlw	1
  8568   003EDA  26D9               	addwf	fsr2l,f,c
  8569   003EDC  6ADF               	clrf	indf2,c
  8570   003EDE                     
  8571                           ;dc_motor_v1.c: 259:     char max_power = 40;
  8572   003EDE  0E28               	movlw	40
  8573   003EE0  6E19               	movwf	rightTURN@max_power^0,c
  8574   003EE2                     
  8575                           ;dc_motor_v1.c: 261:     char delay_time = acceleration_time/max_power;
  8576   003EE2  0E28               	movlw	40
  8577   003EE4  6E01               	movwf	___lbdiv@divisor^0,c
  8578   003EE6  0E64               	movlw	100
  8579   003EE8  ECF2  F023         	call	___lbdiv
  8580   003EEC  6E1A               	movwf	rightTURN@delay_time^0,c
  8581   003EEE                     
  8582                           ;dc_motor_v1.c: 264:     for(char i=0; i< max_power; i++){
  8583   003EEE  0E00               	movlw	0
  8584   003EF0  6E17               	movwf	rightTURN@i^0,c
  8585   003EF2  EF9D  F01F         	goto	l3963
  8586   003EF6                     l3953:
  8587                           
  8588                           ;dc_motor_v1.c: 265:         mL->power = mL->power + 1;
  8589   003EF6  5013               	movf	rightTURN@mL^0,w,c
  8590   003EF8  6ED9               	movwf	fsr2l,c
  8591   003EFA  6ADA               	clrf	fsr2h,c
  8592   003EFC  5013               	movf	rightTURN@mL^0,w,c
  8593   003EFE  6EE1               	movwf	fsr1l,c
  8594   003F00  6AE2               	clrf	fsr1h,c
  8595   003F02  50E7               	movf	indf1,w,c
  8596   003F04  6E15               	movwf	??_rightTURN^0,c
  8597   003F06  2815               	incf	??_rightTURN^0,w,c
  8598   003F08  6EDF               	movwf	indf2,c
  8599                           
  8600                           ;dc_motor_v1.c: 266:         mR->power = mR->power + 1 ;
  8601   003F0A  5014               	movf	rightTURN@mR^0,w,c
  8602   003F0C  6ED9               	movwf	fsr2l,c
  8603   003F0E  6ADA               	clrf	fsr2h,c
  8604   003F10  5014               	movf	rightTURN@mR^0,w,c
  8605   003F12  6EE1               	movwf	fsr1l,c
  8606   003F14  6AE2               	clrf	fsr1h,c
  8607   003F16  50E7               	movf	indf1,w,c
  8608   003F18  6E15               	movwf	??_rightTURN^0,c
  8609   003F1A  2815               	incf	??_rightTURN^0,w,c
  8610   003F1C  6EDF               	movwf	indf2,c
  8611   003F1E                     
  8612                           ;dc_motor_v1.c: 267:         setMotorPWM(mR);
  8613   003F1E  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8614   003F22  EC71  F01D         	call	_setMotorPWM	;wreg free
  8615   003F26                     
  8616                           ;dc_motor_v1.c: 268:         setMotorPWM(mL);
  8617   003F26  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8618   003F2A  EC71  F01D         	call	_setMotorPWM	;wreg free
  8619   003F2E                     
  8620                           ;dc_motor_v1.c: 269:         delay_ms_function(delay_time);
  8621   003F2E  C01A  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8622   003F32  6A02               	clrf	(delay_ms_function@milliseconds+1)^0,c
  8623   003F34  EC3F  F025         	call	_delay_ms_function	;wreg free
  8624   003F38                     
  8625                           ;dc_motor_v1.c: 270:     }
  8626   003F38  2A17               	incf	rightTURN@i^0,f,c
  8627   003F3A                     l3963:
  8628   003F3A  5019               	movf	rightTURN@max_power^0,w,c
  8629   003F3C  5C17               	subwf	rightTURN@i^0,w,c
  8630   003F3E  A0D8               	btfss	status,0,c
  8631   003F40  EFA4  F01F         	goto	u4411
  8632   003F44  EFA6  F01F         	goto	u4410
  8633   003F48                     u4411:
  8634   003F48  EF7B  F01F         	goto	l3953
  8635   003F4C                     u4410:
  8636   003F4C                     
  8637                           ;dc_motor_v1.c: 275:     for(char j=0; j<rotation_calibration; j++){
  8638   003F4C  0E00               	movlw	0
  8639   003F4E  6E18               	movwf	rightTURN@j^0,c
  8640   003F50  EFB2  F01F         	goto	l346
  8641   003F54                     l3967:
  8642                           
  8643                           ;dc_motor_v1.c: 276:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8644   003F54  0ED0               	movlw	208
  8645   003F56  6E15               	movwf	??_rightTURN^0,c
  8646   003F58  0ECA               	movlw	202
  8647   003F5A                     u5177:
  8648   003F5A  2EE8               	decfsz	wreg,f,c
  8649   003F5C  D7FE               	bra	u5177
  8650   003F5E  2E15               	decfsz	??_rightTURN^0,f,c
  8651   003F60  D7FC               	bra	u5177
  8652   003F62                     
  8653                           ;dc_motor_v1.c: 277:     }
  8654   003F62  2A18               	incf	rightTURN@j^0,f,c
  8655   003F64                     l346:
  8656   003F64  5016               	movf	rightTURN@rotation_calibration^0,w,c
  8657   003F66  5C18               	subwf	rightTURN@j^0,w,c
  8658   003F68  A0D8               	btfss	status,0,c
  8659   003F6A  EFB9  F01F         	goto	u4421
  8660   003F6E  EFBB  F01F         	goto	u4420
  8661   003F72                     u4421:
  8662   003F72  EFAA  F01F         	goto	l3967
  8663   003F76                     u4420:
  8664   003F76  EFE8  F01F         	goto	l3985
  8665   003F7A                     l3971:
  8666                           
  8667                           ;dc_motor_v1.c: 281:         if(mR->power > 0 ){
  8668   003F7A  5014               	movf	rightTURN@mR^0,w,c
  8669   003F7C  6ED9               	movwf	fsr2l,c
  8670   003F7E  6ADA               	clrf	fsr2h,c
  8671   003F80  50DF               	movf	indf2,w,c
  8672   003F82  B4D8               	btfsc	status,2,c
  8673   003F84  EFC6  F01F         	goto	u4431
  8674   003F88  EFC8  F01F         	goto	u4430
  8675   003F8C                     u4431:
  8676   003F8C  EFCC  F01F         	goto	l3975
  8677   003F90                     u4430:
  8678   003F90                     
  8679                           ;dc_motor_v1.c: 282:             mR->power--;
  8680   003F90  5014               	movf	rightTURN@mR^0,w,c
  8681   003F92  6ED9               	movwf	fsr2l,c
  8682   003F94  6ADA               	clrf	fsr2h,c
  8683   003F96  06DF               	decf	indf2,f,c
  8684   003F98                     l3975:
  8685                           
  8686                           ;dc_motor_v1.c: 284:         if(mL->power > 0 ){
  8687   003F98  5013               	movf	rightTURN@mL^0,w,c
  8688   003F9A  6ED9               	movwf	fsr2l,c
  8689   003F9C  6ADA               	clrf	fsr2h,c
  8690   003F9E  50DF               	movf	indf2,w,c
  8691   003FA0  B4D8               	btfsc	status,2,c
  8692   003FA2  EFD5  F01F         	goto	u4441
  8693   003FA6  EFD7  F01F         	goto	u4440
  8694   003FAA                     u4441:
  8695   003FAA  EFDB  F01F         	goto	l3979
  8696   003FAE                     u4440:
  8697   003FAE                     
  8698                           ;dc_motor_v1.c: 285:             mL->power--;
  8699   003FAE  5013               	movf	rightTURN@mL^0,w,c
  8700   003FB0  6ED9               	movwf	fsr2l,c
  8701   003FB2  6ADA               	clrf	fsr2h,c
  8702   003FB4  06DF               	decf	indf2,f,c
  8703   003FB6                     l3979:
  8704                           
  8705                           ;dc_motor_v1.c: 287:         setMotorPWM(mR);
  8706   003FB6  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8707   003FBA  EC71  F01D         	call	_setMotorPWM	;wreg free
  8708   003FBE                     
  8709                           ;dc_motor_v1.c: 288:         setMotorPWM(mL);
  8710   003FBE  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8711   003FC2  EC71  F01D         	call	_setMotorPWM	;wreg free
  8712   003FC6                     
  8713                           ;dc_motor_v1.c: 289:         delay_ms_function(delay_time);
  8714   003FC6  C01A  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8715   003FCA  6A02               	clrf	(delay_ms_function@milliseconds+1)^0,c
  8716   003FCC  EC3F  F025         	call	_delay_ms_function	;wreg free
  8717   003FD0                     l3985:
  8718                           
  8719                           ;dc_motor_v1.c: 280:     while(mL->power || mR->power > 0){
  8720   003FD0  5013               	movf	rightTURN@mL^0,w,c
  8721   003FD2  6ED9               	movwf	fsr2l,c
  8722   003FD4  6ADA               	clrf	fsr2h,c
  8723   003FD6  50DF               	movf	indf2,w,c
  8724   003FD8  A4D8               	btfss	status,2,c
  8725   003FDA  EFF1  F01F         	goto	u4451
  8726   003FDE  EFF3  F01F         	goto	u4450
  8727   003FE2                     u4451:
  8728   003FE2  EFBD  F01F         	goto	l3971
  8729   003FE6                     u4450:
  8730   003FE6  5014               	movf	rightTURN@mR^0,w,c
  8731   003FE8  6ED9               	movwf	fsr2l,c
  8732   003FEA  6ADA               	clrf	fsr2h,c
  8733   003FEC  50DF               	movf	indf2,w,c
  8734   003FEE  A4D8               	btfss	status,2,c
  8735   003FF0  EFFC  F01F         	goto	u4461
  8736   003FF4  EFFE  F01F         	goto	u4460
  8737   003FF8                     u4461:
  8738   003FF8  EFBD  F01F         	goto	l3971
  8739   003FFC                     u4460:
  8740   003FFC  0012               	return		;funcret
  8741   003FFE                     __end_of_rightTURN:
  8742                           	callstack 0
  8743                           
  8744 ;; *************** function _leftTURN *****************
  8745 ;; Defined at:
  8746 ;;		line 214 in file "dc_motor_v1.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  rotation_cal    1    wreg     unsigned char 
  8749 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8750 ;;		 -> motorL(9), 
  8751 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8752 ;;		 -> motorR(9), 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;  rotation_cal    1   21[COMRAM] unsigned char 
  8755 ;;  j               1   23[COMRAM] unsigned char 
  8756 ;;  i               1   22[COMRAM] unsigned char 
  8757 ;;  delay_time      1   25[COMRAM] unsigned char 
  8758 ;;  max_power       1   24[COMRAM] unsigned char 
  8759 ;;  acceleration    1    0        unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;Total ram usage:        8 bytes
  8774 ;; Hardware stack levels used: 1
  8775 ;; Hardware stack levels required when called: 2
  8776 ;; This function calls:
  8777 ;;		___lbdiv
  8778 ;;		_delay_ms_function
  8779 ;;		_setMotorPWM
  8780 ;; This function is called by:
  8781 ;;		_calibration_routine
  8782 ;;		_maze_search
  8783 ;;		_maze_return
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text32
  8788   003FFE                     __ptext32:
  8789                           	callstack 0
  8790   003FFE                     _leftTURN:
  8791                           	callstack 27
  8792                           
  8793                           ;incstack = 0
  8794                           ;leftTURN@rotation_calibration stored from wreg
  8795   003FFE  6E16               	movwf	leftTURN@rotation_calibration^0,c
  8796   004000                     
  8797                           ;dc_motor_v1.c: 216:     mL->direction = 0;
  8798   004000  5013               	movf	leftTURN@mL^0,w,c
  8799   004002  6ED9               	movwf	fsr2l,c
  8800   004004  6ADA               	clrf	fsr2h,c
  8801   004006  0E01               	movlw	1
  8802   004008  26D9               	addwf	fsr2l,f,c
  8803   00400A  6ADF               	clrf	indf2,c
  8804                           
  8805                           ;dc_motor_v1.c: 217:     mR->direction = 1;
  8806   00400C  5014               	movf	leftTURN@mR^0,w,c
  8807   00400E  6ED9               	movwf	fsr2l,c
  8808   004010  6ADA               	clrf	fsr2h,c
  8809   004012  0E01               	movlw	1
  8810   004014  26D9               	addwf	fsr2l,f,c
  8811   004016  0E01               	movlw	1
  8812   004018  6EDF               	movwf	indf2,c
  8813   00401A                     
  8814                           ;dc_motor_v1.c: 219:     char max_power = 40;
  8815   00401A  0E28               	movlw	40
  8816   00401C  6E19               	movwf	leftTURN@max_power^0,c
  8817   00401E                     
  8818                           ;dc_motor_v1.c: 221:     char delay_time = acceleration_time/max_power;
  8819   00401E  0E28               	movlw	40
  8820   004020  6E01               	movwf	___lbdiv@divisor^0,c
  8821   004022  0E64               	movlw	100
  8822   004024  ECF2  F023         	call	___lbdiv
  8823   004028  6E1A               	movwf	leftTURN@delay_time^0,c
  8824   00402A                     
  8825                           ;dc_motor_v1.c: 224:     for(char i=0; i< max_power; i++){
  8826   00402A  0E00               	movlw	0
  8827   00402C  6E17               	movwf	leftTURN@i^0,c
  8828   00402E  EF3B  F020         	goto	l4009
  8829   004032                     l3999:
  8830                           
  8831                           ;dc_motor_v1.c: 225:         mL->power = mL->power + 1;
  8832   004032  5013               	movf	leftTURN@mL^0,w,c
  8833   004034  6ED9               	movwf	fsr2l,c
  8834   004036  6ADA               	clrf	fsr2h,c
  8835   004038  5013               	movf	leftTURN@mL^0,w,c
  8836   00403A  6EE1               	movwf	fsr1l,c
  8837   00403C  6AE2               	clrf	fsr1h,c
  8838   00403E  50E7               	movf	indf1,w,c
  8839   004040  6E15               	movwf	??_leftTURN^0,c
  8840   004042  2815               	incf	??_leftTURN^0,w,c
  8841   004044  6EDF               	movwf	indf2,c
  8842                           
  8843                           ;dc_motor_v1.c: 226:         mR->power = mR->power + 1 ;
  8844   004046  5014               	movf	leftTURN@mR^0,w,c
  8845   004048  6ED9               	movwf	fsr2l,c
  8846   00404A  6ADA               	clrf	fsr2h,c
  8847   00404C  5014               	movf	leftTURN@mR^0,w,c
  8848   00404E  6EE1               	movwf	fsr1l,c
  8849   004050  6AE2               	clrf	fsr1h,c
  8850   004052  50E7               	movf	indf1,w,c
  8851   004054  6E15               	movwf	??_leftTURN^0,c
  8852   004056  2815               	incf	??_leftTURN^0,w,c
  8853   004058  6EDF               	movwf	indf2,c
  8854   00405A                     
  8855                           ;dc_motor_v1.c: 227:         setMotorPWM(mR);
  8856   00405A  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8857   00405E  EC71  F01D         	call	_setMotorPWM	;wreg free
  8858   004062                     
  8859                           ;dc_motor_v1.c: 228:         setMotorPWM(mL);
  8860   004062  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8861   004066  EC71  F01D         	call	_setMotorPWM	;wreg free
  8862   00406A                     
  8863                           ;dc_motor_v1.c: 229:         delay_ms_function(delay_time);
  8864   00406A  C01A  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8865   00406E  6A02               	clrf	(delay_ms_function@milliseconds+1)^0,c
  8866   004070  EC3F  F025         	call	_delay_ms_function	;wreg free
  8867   004074                     
  8868                           ;dc_motor_v1.c: 230:     }
  8869   004074  2A17               	incf	leftTURN@i^0,f,c
  8870   004076                     l4009:
  8871   004076  5019               	movf	leftTURN@max_power^0,w,c
  8872   004078  5C17               	subwf	leftTURN@i^0,w,c
  8873   00407A  A0D8               	btfss	status,0,c
  8874   00407C  EF42  F020         	goto	u4471
  8875   004080  EF44  F020         	goto	u4470
  8876   004084                     u4471:
  8877   004084  EF19  F020         	goto	l3999
  8878   004088                     u4470:
  8879   004088                     
  8880                           ;dc_motor_v1.c: 235:     for(char j=0; j<rotation_calibration; j++){
  8881   004088  0E00               	movlw	0
  8882   00408A  6E18               	movwf	leftTURN@j^0,c
  8883   00408C  EF50  F020         	goto	l332
  8884   004090                     l4013:
  8885                           
  8886                           ;dc_motor_v1.c: 236:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8887   004090  0ED0               	movlw	208
  8888   004092  6E15               	movwf	??_leftTURN^0,c
  8889   004094  0ECA               	movlw	202
  8890   004096                     u5187:
  8891   004096  2EE8               	decfsz	wreg,f,c
  8892   004098  D7FE               	bra	u5187
  8893   00409A  2E15               	decfsz	??_leftTURN^0,f,c
  8894   00409C  D7FC               	bra	u5187
  8895   00409E                     
  8896                           ;dc_motor_v1.c: 237:     }
  8897   00409E  2A18               	incf	leftTURN@j^0,f,c
  8898   0040A0                     l332:
  8899   0040A0  5016               	movf	leftTURN@rotation_calibration^0,w,c
  8900   0040A2  5C18               	subwf	leftTURN@j^0,w,c
  8901   0040A4  A0D8               	btfss	status,0,c
  8902   0040A6  EF57  F020         	goto	u4481
  8903   0040AA  EF59  F020         	goto	u4480
  8904   0040AE                     u4481:
  8905   0040AE  EF48  F020         	goto	l4013
  8906   0040B2                     u4480:
  8907   0040B2  EF86  F020         	goto	l4031
  8908   0040B6                     l4017:
  8909                           
  8910                           ;dc_motor_v1.c: 241:         if(mR->power > 0 ){
  8911   0040B6  5014               	movf	leftTURN@mR^0,w,c
  8912   0040B8  6ED9               	movwf	fsr2l,c
  8913   0040BA  6ADA               	clrf	fsr2h,c
  8914   0040BC  50DF               	movf	indf2,w,c
  8915   0040BE  B4D8               	btfsc	status,2,c
  8916   0040C0  EF64  F020         	goto	u4491
  8917   0040C4  EF66  F020         	goto	u4490
  8918   0040C8                     u4491:
  8919   0040C8  EF6A  F020         	goto	l4021
  8920   0040CC                     u4490:
  8921   0040CC                     
  8922                           ;dc_motor_v1.c: 242:             mR->power--;
  8923   0040CC  5014               	movf	leftTURN@mR^0,w,c
  8924   0040CE  6ED9               	movwf	fsr2l,c
  8925   0040D0  6ADA               	clrf	fsr2h,c
  8926   0040D2  06DF               	decf	indf2,f,c
  8927   0040D4                     l4021:
  8928                           
  8929                           ;dc_motor_v1.c: 244:         if(mL->power > 0 ){
  8930   0040D4  5013               	movf	leftTURN@mL^0,w,c
  8931   0040D6  6ED9               	movwf	fsr2l,c
  8932   0040D8  6ADA               	clrf	fsr2h,c
  8933   0040DA  50DF               	movf	indf2,w,c
  8934   0040DC  B4D8               	btfsc	status,2,c
  8935   0040DE  EF73  F020         	goto	u4501
  8936   0040E2  EF75  F020         	goto	u4500
  8937   0040E6                     u4501:
  8938   0040E6  EF79  F020         	goto	l4025
  8939   0040EA                     u4500:
  8940   0040EA                     
  8941                           ;dc_motor_v1.c: 245:             mL->power--;
  8942   0040EA  5013               	movf	leftTURN@mL^0,w,c
  8943   0040EC  6ED9               	movwf	fsr2l,c
  8944   0040EE  6ADA               	clrf	fsr2h,c
  8945   0040F0  06DF               	decf	indf2,f,c
  8946   0040F2                     l4025:
  8947                           
  8948                           ;dc_motor_v1.c: 247:         setMotorPWM(mR);
  8949   0040F2  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8950   0040F6  EC71  F01D         	call	_setMotorPWM	;wreg free
  8951   0040FA                     
  8952                           ;dc_motor_v1.c: 248:         setMotorPWM(mL);
  8953   0040FA  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8954   0040FE  EC71  F01D         	call	_setMotorPWM	;wreg free
  8955   004102                     
  8956                           ;dc_motor_v1.c: 249:         delay_ms_function(delay_time);
  8957   004102  C01A  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8958   004106  6A02               	clrf	(delay_ms_function@milliseconds+1)^0,c
  8959   004108  EC3F  F025         	call	_delay_ms_function	;wreg free
  8960   00410C                     l4031:
  8961                           
  8962                           ;dc_motor_v1.c: 240:     while(mL->power || mR->power > 0){
  8963   00410C  5013               	movf	leftTURN@mL^0,w,c
  8964   00410E  6ED9               	movwf	fsr2l,c
  8965   004110  6ADA               	clrf	fsr2h,c
  8966   004112  50DF               	movf	indf2,w,c
  8967   004114  A4D8               	btfss	status,2,c
  8968   004116  EF8F  F020         	goto	u4511
  8969   00411A  EF91  F020         	goto	u4510
  8970   00411E                     u4511:
  8971   00411E  EF5B  F020         	goto	l4017
  8972   004122                     u4510:
  8973   004122  5014               	movf	leftTURN@mR^0,w,c
  8974   004124  6ED9               	movwf	fsr2l,c
  8975   004126  6ADA               	clrf	fsr2h,c
  8976   004128  50DF               	movf	indf2,w,c
  8977   00412A  A4D8               	btfss	status,2,c
  8978   00412C  EF9A  F020         	goto	u4521
  8979   004130  EF9C  F020         	goto	u4520
  8980   004134                     u4521:
  8981   004134  EF5B  F020         	goto	l4017
  8982   004138                     u4520:
  8983   004138  0012               	return		;funcret
  8984   00413A                     __end_of_leftTURN:
  8985                           	callstack 0
  8986                           
  8987 ;; *************** function _forward *****************
  8988 ;; Defined at:
  8989 ;;		line 122 in file "dc_motor_v1.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  Distance_Cal    1    wreg     unsigned char 
  8992 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8993 ;;		 -> motorL(9), 
  8994 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8995 ;;		 -> motorR(9), 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  Distance_Cal    1   21[COMRAM] unsigned char 
  8998 ;;  j               1   23[COMRAM] unsigned char 
  8999 ;;  i               1   22[COMRAM] unsigned char 
  9000 ;;  delay_time      1   25[COMRAM] unsigned char 
  9001 ;;  max_power       1   24[COMRAM] unsigned char 
  9002 ;;  acceleration    1    0        unsigned char 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9013 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9015 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9016 ;;Total ram usage:        8 bytes
  9017 ;; Hardware stack levels used: 1
  9018 ;; Hardware stack levels required when called: 2
  9019 ;; This function calls:
  9020 ;;		___lbdiv
  9021 ;;		_delay_ms_function
  9022 ;;		_setMotorPWM
  9023 ;; This function is called by:
  9024 ;;		_calibration_routine
  9025 ;;		_maze_search
  9026 ;;		_maze_return
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text33
  9031   003D84                     __ptext33:
  9032                           	callstack 0
  9033   003D84                     _forward:
  9034                           	callstack 27
  9035                           
  9036                           ;incstack = 0
  9037                           ;forward@Distance_Calibration stored from wreg
  9038   003D84  6E16               	movwf	forward@Distance_Calibration^0,c
  9039   003D86                     
  9040                           ;dc_motor_v1.c: 127:     mL->direction = 1;
  9041   003D86  5013               	movf	forward@mL^0,w,c
  9042   003D88  6ED9               	movwf	fsr2l,c
  9043   003D8A  6ADA               	clrf	fsr2h,c
  9044   003D8C  0E01               	movlw	1
  9045   003D8E  26D9               	addwf	fsr2l,f,c
  9046   003D90  0E01               	movlw	1
  9047   003D92  6EDF               	movwf	indf2,c
  9048                           
  9049                           ;dc_motor_v1.c: 128:     mR->direction = 1;
  9050   003D94  5014               	movf	forward@mR^0,w,c
  9051   003D96  6ED9               	movwf	fsr2l,c
  9052   003D98  6ADA               	clrf	fsr2h,c
  9053   003D9A  0E01               	movlw	1
  9054   003D9C  26D9               	addwf	fsr2l,f,c
  9055   003D9E  0E01               	movlw	1
  9056   003DA0  6EDF               	movwf	indf2,c
  9057   003DA2                     
  9058                           ;dc_motor_v1.c: 131:     char max_power = 40;
  9059   003DA2  0E28               	movlw	40
  9060   003DA4  6E19               	movwf	forward@max_power^0,c
  9061   003DA6                     
  9062                           ;dc_motor_v1.c: 133:     char delay_time = acceleration_time/max_power;
  9063   003DA6  0E28               	movlw	40
  9064   003DA8  6E01               	movwf	___lbdiv@divisor^0,c
  9065   003DAA  0E64               	movlw	100
  9066   003DAC  ECF2  F023         	call	___lbdiv
  9067   003DB0  6E1A               	movwf	forward@delay_time^0,c
  9068   003DB2                     
  9069                           ;dc_motor_v1.c: 137:     for(char i=0; i< max_power; i++){
  9070   003DB2  0E00               	movlw	0
  9071   003DB4  6E17               	movwf	forward@i^0,c
  9072   003DB6  EFFF  F01E         	goto	l4055
  9073   003DBA                     l4045:
  9074                           
  9075                           ;dc_motor_v1.c: 138:         mL->power = mL->power + 1;
  9076   003DBA  5013               	movf	forward@mL^0,w,c
  9077   003DBC  6ED9               	movwf	fsr2l,c
  9078   003DBE  6ADA               	clrf	fsr2h,c
  9079   003DC0  5013               	movf	forward@mL^0,w,c
  9080   003DC2  6EE1               	movwf	fsr1l,c
  9081   003DC4  6AE2               	clrf	fsr1h,c
  9082   003DC6  50E7               	movf	indf1,w,c
  9083   003DC8  6E15               	movwf	??_forward^0,c
  9084   003DCA  2815               	incf	??_forward^0,w,c
  9085   003DCC  6EDF               	movwf	indf2,c
  9086                           
  9087                           ;dc_motor_v1.c: 139:         mR->power = mR->power + 1 ;
  9088   003DCE  5014               	movf	forward@mR^0,w,c
  9089   003DD0  6ED9               	movwf	fsr2l,c
  9090   003DD2  6ADA               	clrf	fsr2h,c
  9091   003DD4  5014               	movf	forward@mR^0,w,c
  9092   003DD6  6EE1               	movwf	fsr1l,c
  9093   003DD8  6AE2               	clrf	fsr1h,c
  9094   003DDA  50E7               	movf	indf1,w,c
  9095   003DDC  6E15               	movwf	??_forward^0,c
  9096   003DDE  2815               	incf	??_forward^0,w,c
  9097   003DE0  6EDF               	movwf	indf2,c
  9098   003DE2                     
  9099                           ;dc_motor_v1.c: 140:         setMotorPWM(mR);
  9100   003DE2  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9101   003DE6  EC71  F01D         	call	_setMotorPWM	;wreg free
  9102   003DEA                     
  9103                           ;dc_motor_v1.c: 141:         setMotorPWM(mL);
  9104   003DEA  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9105   003DEE  EC71  F01D         	call	_setMotorPWM	;wreg free
  9106   003DF2                     
  9107                           ;dc_motor_v1.c: 142:         delay_ms_function(delay_time);
  9108   003DF2  C01A  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9109   003DF6  6A02               	clrf	(delay_ms_function@milliseconds+1)^0,c
  9110   003DF8  EC3F  F025         	call	_delay_ms_function	;wreg free
  9111   003DFC                     
  9112                           ;dc_motor_v1.c: 143:     }
  9113   003DFC  2A17               	incf	forward@i^0,f,c
  9114   003DFE                     l4055:
  9115   003DFE  5019               	movf	forward@max_power^0,w,c
  9116   003E00  5C17               	subwf	forward@i^0,w,c
  9117   003E02  A0D8               	btfss	status,0,c
  9118   003E04  EF06  F01F         	goto	u4531
  9119   003E08  EF08  F01F         	goto	u4530
  9120   003E0C                     u4531:
  9121   003E0C  EFDD  F01E         	goto	l4045
  9122   003E10                     u4530:
  9123   003E10                     
  9124                           ;dc_motor_v1.c: 148:     for(char j=0; j<Distance_Calibration; j++){
  9125   003E10  0E00               	movlw	0
  9126   003E12  6E18               	movwf	forward@j^0,c
  9127   003E14  EF14  F01F         	goto	l304
  9128   003E18                     l4059:
  9129                           
  9130                           ;dc_motor_v1.c: 149:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9131   003E18  0ED0               	movlw	208
  9132   003E1A  6E15               	movwf	??_forward^0,c
  9133   003E1C  0ECA               	movlw	202
  9134   003E1E                     u5197:
  9135   003E1E  2EE8               	decfsz	wreg,f,c
  9136   003E20  D7FE               	bra	u5197
  9137   003E22  2E15               	decfsz	??_forward^0,f,c
  9138   003E24  D7FC               	bra	u5197
  9139   003E26                     
  9140                           ;dc_motor_v1.c: 150:     }
  9141   003E26  2A18               	incf	forward@j^0,f,c
  9142   003E28                     l304:
  9143   003E28  5016               	movf	forward@Distance_Calibration^0,w,c
  9144   003E2A  5C18               	subwf	forward@j^0,w,c
  9145   003E2C  A0D8               	btfss	status,0,c
  9146   003E2E  EF1B  F01F         	goto	u4541
  9147   003E32  EF1D  F01F         	goto	u4540
  9148   003E36                     u4541:
  9149   003E36  EF0C  F01F         	goto	l4059
  9150   003E3A                     u4540:
  9151   003E3A  EF4A  F01F         	goto	l4077
  9152   003E3E                     l4063:
  9153                           
  9154                           ;dc_motor_v1.c: 154:         if(mR->power > 0 ){
  9155   003E3E  5014               	movf	forward@mR^0,w,c
  9156   003E40  6ED9               	movwf	fsr2l,c
  9157   003E42  6ADA               	clrf	fsr2h,c
  9158   003E44  50DF               	movf	indf2,w,c
  9159   003E46  B4D8               	btfsc	status,2,c
  9160   003E48  EF28  F01F         	goto	u4551
  9161   003E4C  EF2A  F01F         	goto	u4550
  9162   003E50                     u4551:
  9163   003E50  EF2E  F01F         	goto	l4067
  9164   003E54                     u4550:
  9165   003E54                     
  9166                           ;dc_motor_v1.c: 155:             mR->power--;
  9167   003E54  5014               	movf	forward@mR^0,w,c
  9168   003E56  6ED9               	movwf	fsr2l,c
  9169   003E58  6ADA               	clrf	fsr2h,c
  9170   003E5A  06DF               	decf	indf2,f,c
  9171   003E5C                     l4067:
  9172                           
  9173                           ;dc_motor_v1.c: 157:         if(mL->power > 0 ){
  9174   003E5C  5013               	movf	forward@mL^0,w,c
  9175   003E5E  6ED9               	movwf	fsr2l,c
  9176   003E60  6ADA               	clrf	fsr2h,c
  9177   003E62  50DF               	movf	indf2,w,c
  9178   003E64  B4D8               	btfsc	status,2,c
  9179   003E66  EF37  F01F         	goto	u4561
  9180   003E6A  EF39  F01F         	goto	u4560
  9181   003E6E                     u4561:
  9182   003E6E  EF3D  F01F         	goto	l4071
  9183   003E72                     u4560:
  9184   003E72                     
  9185                           ;dc_motor_v1.c: 158:             mL->power--;
  9186   003E72  5013               	movf	forward@mL^0,w,c
  9187   003E74  6ED9               	movwf	fsr2l,c
  9188   003E76  6ADA               	clrf	fsr2h,c
  9189   003E78  06DF               	decf	indf2,f,c
  9190   003E7A                     l4071:
  9191                           
  9192                           ;dc_motor_v1.c: 160:         setMotorPWM(mR);
  9193   003E7A  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9194   003E7E  EC71  F01D         	call	_setMotorPWM	;wreg free
  9195   003E82                     
  9196                           ;dc_motor_v1.c: 161:         setMotorPWM(mL);
  9197   003E82  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9198   003E86  EC71  F01D         	call	_setMotorPWM	;wreg free
  9199   003E8A                     
  9200                           ;dc_motor_v1.c: 162:         delay_ms_function(delay_time);
  9201   003E8A  C01A  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9202   003E8E  6A02               	clrf	(delay_ms_function@milliseconds+1)^0,c
  9203   003E90  EC3F  F025         	call	_delay_ms_function	;wreg free
  9204   003E94                     l4077:
  9205                           
  9206                           ;dc_motor_v1.c: 153:     while(mL->power || mR->power > 0){
  9207   003E94  5013               	movf	forward@mL^0,w,c
  9208   003E96  6ED9               	movwf	fsr2l,c
  9209   003E98  6ADA               	clrf	fsr2h,c
  9210   003E9A  50DF               	movf	indf2,w,c
  9211   003E9C  A4D8               	btfss	status,2,c
  9212   003E9E  EF53  F01F         	goto	u4571
  9213   003EA2  EF55  F01F         	goto	u4570
  9214   003EA6                     u4571:
  9215   003EA6  EF1F  F01F         	goto	l4063
  9216   003EAA                     u4570:
  9217   003EAA  5014               	movf	forward@mR^0,w,c
  9218   003EAC  6ED9               	movwf	fsr2l,c
  9219   003EAE  6ADA               	clrf	fsr2h,c
  9220   003EB0  50DF               	movf	indf2,w,c
  9221   003EB2  A4D8               	btfss	status,2,c
  9222   003EB4  EF5E  F01F         	goto	u4581
  9223   003EB8  EF60  F01F         	goto	u4580
  9224   003EBC                     u4581:
  9225   003EBC  EF1F  F01F         	goto	l4063
  9226   003EC0                     u4580:
  9227   003EC0  0012               	return		;funcret
  9228   003EC2                     __end_of_forward:
  9229                           	callstack 0
  9230                           
  9231 ;; *************** function _backward *****************
  9232 ;; Defined at:
  9233 ;;		line 167 in file "dc_motor_v1.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  Distance_Cal    1    wreg     unsigned char 
  9236 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9237 ;;		 -> motorL(9), 
  9238 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9239 ;;		 -> motorR(9), 
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9242 ;;  j               2   26[COMRAM] int 
  9243 ;;  i               2   24[COMRAM] int 
  9244 ;;  delay_time      1   29[COMRAM] unsigned char 
  9245 ;;  max_power       1   28[COMRAM] unsigned char 
  9246 ;;  acceleration    1    0        unsigned char 
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1    wreg      void 
  9249 ;; Registers used:
  9250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9258 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9260 ;;Total ram usage:       12 bytes
  9261 ;; Hardware stack levels used: 1
  9262 ;; Hardware stack levels required when called: 2
  9263 ;; This function calls:
  9264 ;;		___lbdiv
  9265 ;;		_delay_ms_function
  9266 ;;		_setMotorPWM
  9267 ;; This function is called by:
  9268 ;;		_calibration_routine
  9269 ;;		_maze_search
  9270 ;;		_maze_return
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text34
  9275   003978                     __ptext34:
  9276                           	callstack 0
  9277   003978                     _backward:
  9278                           	callstack 27
  9279                           
  9280                           ;incstack = 0
  9281                           ;backward@Distance_Calibration stored from wreg
  9282   003978  6E18               	movwf	backward@Distance_Calibration^0,c
  9283   00397A                     
  9284                           ;dc_motor_v1.c: 173:     mL->direction = 0;
  9285   00397A  5013               	movf	backward@mL^0,w,c
  9286   00397C  6ED9               	movwf	fsr2l,c
  9287   00397E  6ADA               	clrf	fsr2h,c
  9288   003980  0E01               	movlw	1
  9289   003982  26D9               	addwf	fsr2l,f,c
  9290   003984  6ADF               	clrf	indf2,c
  9291                           
  9292                           ;dc_motor_v1.c: 174:     mR->direction = 0;
  9293   003986  5014               	movf	backward@mR^0,w,c
  9294   003988  6ED9               	movwf	fsr2l,c
  9295   00398A  6ADA               	clrf	fsr2h,c
  9296   00398C  0E01               	movlw	1
  9297   00398E  26D9               	addwf	fsr2l,f,c
  9298   003990  6ADF               	clrf	indf2,c
  9299   003992                     
  9300                           ;dc_motor_v1.c: 177:     char max_power = 40;
  9301   003992  0E28               	movlw	40
  9302   003994  6E1D               	movwf	backward@max_power^0,c
  9303   003996                     
  9304                           ;dc_motor_v1.c: 179:     char delay_time = acceleration_time/max_power;
  9305   003996  0E28               	movlw	40
  9306   003998  6E01               	movwf	___lbdiv@divisor^0,c
  9307   00399A  0E64               	movlw	100
  9308   00399C  ECF2  F023         	call	___lbdiv
  9309   0039A0  6E1E               	movwf	backward@delay_time^0,c
  9310   0039A2                     
  9311                           ;dc_motor_v1.c: 182:     for(int i=0; i< max_power; i++){
  9312   0039A2  0E00               	movlw	0
  9313   0039A4  6E1A               	movwf	(backward@i+1)^0,c
  9314   0039A6  0E00               	movlw	0
  9315   0039A8  6E19               	movwf	backward@i^0,c
  9316   0039AA  EFFA  F01C         	goto	l4101
  9317   0039AE                     l4091:
  9318                           
  9319                           ;dc_motor_v1.c: 183:         mL->power = mL->power + 1;
  9320   0039AE  5013               	movf	backward@mL^0,w,c
  9321   0039B0  6ED9               	movwf	fsr2l,c
  9322   0039B2  6ADA               	clrf	fsr2h,c
  9323   0039B4  5013               	movf	backward@mL^0,w,c
  9324   0039B6  6EE1               	movwf	fsr1l,c
  9325   0039B8  6AE2               	clrf	fsr1h,c
  9326   0039BA  50E7               	movf	indf1,w,c
  9327   0039BC  6E15               	movwf	??_backward^0,c
  9328   0039BE  2815               	incf	??_backward^0,w,c
  9329   0039C0  6EDF               	movwf	indf2,c
  9330                           
  9331                           ;dc_motor_v1.c: 184:         mR->power = mR->power + 1 ;
  9332   0039C2  5014               	movf	backward@mR^0,w,c
  9333   0039C4  6ED9               	movwf	fsr2l,c
  9334   0039C6  6ADA               	clrf	fsr2h,c
  9335   0039C8  5014               	movf	backward@mR^0,w,c
  9336   0039CA  6EE1               	movwf	fsr1l,c
  9337   0039CC  6AE2               	clrf	fsr1h,c
  9338   0039CE  50E7               	movf	indf1,w,c
  9339   0039D0  6E15               	movwf	??_backward^0,c
  9340   0039D2  2815               	incf	??_backward^0,w,c
  9341   0039D4  6EDF               	movwf	indf2,c
  9342   0039D6                     
  9343                           ;dc_motor_v1.c: 185:         setMotorPWM(mR);
  9344   0039D6  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9345   0039DA  EC71  F01D         	call	_setMotorPWM	;wreg free
  9346   0039DE                     
  9347                           ;dc_motor_v1.c: 186:         setMotorPWM(mL);
  9348   0039DE  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9349   0039E2  EC71  F01D         	call	_setMotorPWM	;wreg free
  9350   0039E6                     
  9351                           ;dc_motor_v1.c: 187:         delay_ms_function(delay_time);
  9352   0039E6  C01E  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9353   0039EA  6A02               	clrf	(delay_ms_function@milliseconds+1)^0,c
  9354   0039EC  EC3F  F025         	call	_delay_ms_function	;wreg free
  9355   0039F0                     
  9356                           ;dc_motor_v1.c: 188:     }
  9357   0039F0  4A19               	infsnz	backward@i^0,f,c
  9358   0039F2  2A1A               	incf	(backward@i+1)^0,f,c
  9359   0039F4                     l4101:
  9360   0039F4  501D               	movf	backward@max_power^0,w,c
  9361   0039F6  6E15               	movwf	??_backward^0,c
  9362   0039F8  6A16               	clrf	(??_backward+1)^0,c
  9363   0039FA  5015               	movf	??_backward^0,w,c
  9364   0039FC  5C19               	subwf	backward@i^0,w,c
  9365   0039FE  501A               	movf	(backward@i+1)^0,w,c
  9366   003A00  0A80               	xorlw	128
  9367   003A02  6E17               	movwf	(??_backward+2)^0,c
  9368   003A04  5016               	movf	(??_backward+1)^0,w,c
  9369   003A06  0A80               	xorlw	128
  9370   003A08  5817               	subwfb	(??_backward+2)^0,w,c
  9371   003A0A  A0D8               	btfss	status,0,c
  9372   003A0C  EF0A  F01D         	goto	u4591
  9373   003A10  EF0C  F01D         	goto	u4590
  9374   003A14                     u4591:
  9375   003A14  EFD7  F01C         	goto	l4091
  9376   003A18                     u4590:
  9377   003A18                     
  9378                           ;dc_motor_v1.c: 193:     for(int j=0; j<Distance_Calibration; j++){
  9379   003A18  0E00               	movlw	0
  9380   003A1A  6E1C               	movwf	(backward@j+1)^0,c
  9381   003A1C  0E00               	movlw	0
  9382   003A1E  6E1B               	movwf	backward@j^0,c
  9383   003A20  EF1B  F01D         	goto	l318
  9384   003A24                     l4105:
  9385                           
  9386                           ;dc_motor_v1.c: 194:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9387   003A24  0ED0               	movlw	208
  9388   003A26  6E15               	movwf	??_backward^0,c
  9389   003A28  0ECA               	movlw	202
  9390   003A2A                     u5207:
  9391   003A2A  2EE8               	decfsz	wreg,f,c
  9392   003A2C  D7FE               	bra	u5207
  9393   003A2E  2E15               	decfsz	??_backward^0,f,c
  9394   003A30  D7FC               	bra	u5207
  9395   003A32                     
  9396                           ;dc_motor_v1.c: 195:     }
  9397   003A32  4A1B               	infsnz	backward@j^0,f,c
  9398   003A34  2A1C               	incf	(backward@j+1)^0,f,c
  9399   003A36                     l318:
  9400   003A36  5018               	movf	backward@Distance_Calibration^0,w,c
  9401   003A38  6E15               	movwf	??_backward^0,c
  9402   003A3A  6A16               	clrf	(??_backward+1)^0,c
  9403   003A3C  5015               	movf	??_backward^0,w,c
  9404   003A3E  5C1B               	subwf	backward@j^0,w,c
  9405   003A40  501C               	movf	(backward@j+1)^0,w,c
  9406   003A42  0A80               	xorlw	128
  9407   003A44  6E17               	movwf	(??_backward+2)^0,c
  9408   003A46  5016               	movf	(??_backward+1)^0,w,c
  9409   003A48  0A80               	xorlw	128
  9410   003A4A  5817               	subwfb	(??_backward+2)^0,w,c
  9411   003A4C  A0D8               	btfss	status,0,c
  9412   003A4E  EF2B  F01D         	goto	u4601
  9413   003A52  EF2D  F01D         	goto	u4600
  9414   003A56                     u4601:
  9415   003A56  EF12  F01D         	goto	l4105
  9416   003A5A                     u4600:
  9417   003A5A  EF5A  F01D         	goto	l4123
  9418   003A5E                     l4109:
  9419                           
  9420                           ;dc_motor_v1.c: 199:         if(mR->power > 0 ){
  9421   003A5E  5014               	movf	backward@mR^0,w,c
  9422   003A60  6ED9               	movwf	fsr2l,c
  9423   003A62  6ADA               	clrf	fsr2h,c
  9424   003A64  50DF               	movf	indf2,w,c
  9425   003A66  B4D8               	btfsc	status,2,c
  9426   003A68  EF38  F01D         	goto	u4611
  9427   003A6C  EF3A  F01D         	goto	u4610
  9428   003A70                     u4611:
  9429   003A70  EF3E  F01D         	goto	l4113
  9430   003A74                     u4610:
  9431   003A74                     
  9432                           ;dc_motor_v1.c: 200:             mR->power--;
  9433   003A74  5014               	movf	backward@mR^0,w,c
  9434   003A76  6ED9               	movwf	fsr2l,c
  9435   003A78  6ADA               	clrf	fsr2h,c
  9436   003A7A  06DF               	decf	indf2,f,c
  9437   003A7C                     l4113:
  9438                           
  9439                           ;dc_motor_v1.c: 202:         if(mL->power > 0 ){
  9440   003A7C  5013               	movf	backward@mL^0,w,c
  9441   003A7E  6ED9               	movwf	fsr2l,c
  9442   003A80  6ADA               	clrf	fsr2h,c
  9443   003A82  50DF               	movf	indf2,w,c
  9444   003A84  B4D8               	btfsc	status,2,c
  9445   003A86  EF47  F01D         	goto	u4621
  9446   003A8A  EF49  F01D         	goto	u4620
  9447   003A8E                     u4621:
  9448   003A8E  EF4D  F01D         	goto	l4117
  9449   003A92                     u4620:
  9450   003A92                     
  9451                           ;dc_motor_v1.c: 203:             mL->power--;
  9452   003A92  5013               	movf	backward@mL^0,w,c
  9453   003A94  6ED9               	movwf	fsr2l,c
  9454   003A96  6ADA               	clrf	fsr2h,c
  9455   003A98  06DF               	decf	indf2,f,c
  9456   003A9A                     l4117:
  9457                           
  9458                           ;dc_motor_v1.c: 205:         setMotorPWM(mR);
  9459   003A9A  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9460   003A9E  EC71  F01D         	call	_setMotorPWM	;wreg free
  9461   003AA2                     
  9462                           ;dc_motor_v1.c: 206:         setMotorPWM(mL);
  9463   003AA2  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9464   003AA6  EC71  F01D         	call	_setMotorPWM	;wreg free
  9465   003AAA                     
  9466                           ;dc_motor_v1.c: 207:         delay_ms_function(delay_time);
  9467   003AAA  C01E  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9468   003AAE  6A02               	clrf	(delay_ms_function@milliseconds+1)^0,c
  9469   003AB0  EC3F  F025         	call	_delay_ms_function	;wreg free
  9470   003AB4                     l4123:
  9471                           
  9472                           ;dc_motor_v1.c: 198:     while(mL->power || mR->power > 0){
  9473   003AB4  5013               	movf	backward@mL^0,w,c
  9474   003AB6  6ED9               	movwf	fsr2l,c
  9475   003AB8  6ADA               	clrf	fsr2h,c
  9476   003ABA  50DF               	movf	indf2,w,c
  9477   003ABC  A4D8               	btfss	status,2,c
  9478   003ABE  EF63  F01D         	goto	u4631
  9479   003AC2  EF65  F01D         	goto	u4630
  9480   003AC6                     u4631:
  9481   003AC6  EF2F  F01D         	goto	l4109
  9482   003ACA                     u4630:
  9483   003ACA  5014               	movf	backward@mR^0,w,c
  9484   003ACC  6ED9               	movwf	fsr2l,c
  9485   003ACE  6ADA               	clrf	fsr2h,c
  9486   003AD0  50DF               	movf	indf2,w,c
  9487   003AD2  A4D8               	btfss	status,2,c
  9488   003AD4  EF6E  F01D         	goto	u4641
  9489   003AD8  EF70  F01D         	goto	u4640
  9490   003ADC                     u4641:
  9491   003ADC  EF2F  F01D         	goto	l4109
  9492   003AE0                     u4640:
  9493   003AE0  0012               	return		;funcret
  9494   003AE2                     __end_of_backward:
  9495                           	callstack 0
  9496                           
  9497 ;; *************** function _setMotorPWM *****************
  9498 ;; Defined at:
  9499 ;;		line 76 in file "dc_motor_v1.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  m               1   13[COMRAM] PTR struct DC_motor
  9502 ;;		 -> motorR(9), motorL(9), 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  negDuty         1   17[COMRAM] unsigned char 
  9505 ;;  posDuty         1   16[COMRAM] unsigned char 
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9515 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9518 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;Total ram usage:        5 bytes
  9520 ;; Hardware stack levels used: 1
  9521 ;; Hardware stack levels required when called: 1
  9522 ;; This function calls:
  9523 ;;		___lwdiv
  9524 ;;		___wmul
  9525 ;; This function is called by:
  9526 ;;		_forward
  9527 ;;		_backward
  9528 ;;		_leftTURN
  9529 ;;		_rightTURN
  9530 ;;		_stop
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text35
  9535   003AE2                     __ptext35:
  9536                           	callstack 0
  9537   003AE2                     _setMotorPWM:
  9538                           	callstack 27
  9539   003AE2                     
  9540                           ;dc_motor_v1.c: 76: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 77: {;dc_motor_v1.c: 78
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 80:     if(m->brakemode) {
  9541   003AE2  500E               	movf	setMotorPWM@m^0,w,c
  9542   003AE4  6ED9               	movwf	fsr2l,c
  9543   003AE6  6ADA               	clrf	fsr2h,c
  9544   003AE8  0E02               	movlw	2
  9545   003AEA  26D9               	addwf	fsr2l,f,c
  9546   003AEC  50DF               	movf	indf2,w,c
  9547   003AEE  B4D8               	btfsc	status,2,c
  9548   003AF0  EF7C  F01D         	goto	u3831
  9549   003AF4  EF7E  F01D         	goto	u3830
  9550   003AF8                     u3831:
  9551   003AF8  EFAE  F01D         	goto	l3713
  9552   003AFC                     u3830:
  9553   003AFC                     
  9554                           ;dc_motor_v1.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9555   003AFC  500E               	movf	setMotorPWM@m^0,w,c
  9556   003AFE  6ED9               	movwf	fsr2l,c
  9557   003B00  6ADA               	clrf	fsr2h,c
  9558   003B02  50DF               	movf	indf2,w,c
  9559   003B04  6E0F               	movwf	??_setMotorPWM^0,c
  9560   003B06  500F               	movf	??_setMotorPWM^0,w,c
  9561   003B08  6E01               	movwf	___wmul@multiplier^0,c
  9562   003B0A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9563   003B0C  500E               	movf	setMotorPWM@m^0,w,c
  9564   003B0E  6ED9               	movwf	fsr2l,c
  9565   003B10  6ADA               	clrf	fsr2h,c
  9566   003B12  0E03               	movlw	3
  9567   003B14  26D9               	addwf	fsr2l,f,c
  9568   003B16  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9569   003B1A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9570   003B1E  EC7F  F025         	call	___wmul	;wreg free
  9571   003B22  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9572   003B26  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9573   003B2A  0E00               	movlw	0
  9574   003B2C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9575   003B2E  0E64               	movlw	100
  9576   003B30  6E09               	movwf	___lwdiv@divisor^0,c
  9577   003B32  EC89  F023         	call	___lwdiv	;wreg free
  9578   003B36  500E               	movf	setMotorPWM@m^0,w,c
  9579   003B38  6ED9               	movwf	fsr2l,c
  9580   003B3A  6ADA               	clrf	fsr2h,c
  9581   003B3C  0E03               	movlw	3
  9582   003B3E  26D9               	addwf	fsr2l,f,c
  9583   003B40  50DF               	movf	indf2,w,c
  9584   003B42  6E10               	movwf	(??_setMotorPWM+1)^0,c
  9585   003B44  5007               	movf	?___lwdiv^0,w,c
  9586   003B46  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  9587   003B48  6E11               	movwf	setMotorPWM@posDuty^0,c
  9588   003B4A                     
  9589                           ;dc_motor_v1.c: 82:         negDuty=m->PWMperiod;
  9590   003B4A  500E               	movf	setMotorPWM@m^0,w,c
  9591   003B4C  6ED9               	movwf	fsr2l,c
  9592   003B4E  6ADA               	clrf	fsr2h,c
  9593   003B50  0E03               	movlw	3
  9594   003B52  26D9               	addwf	fsr2l,f,c
  9595   003B54  50DF               	movf	indf2,w,c
  9596   003B56  6E12               	movwf	setMotorPWM@negDuty^0,c
  9597                           
  9598                           ;dc_motor_v1.c: 83:     }
  9599   003B58  EFCF  F01D         	goto	l3717
  9600   003B5C                     l3713:
  9601                           
  9602                           ;dc_motor_v1.c: 85:         posDuty=0;
  9603   003B5C  0E00               	movlw	0
  9604   003B5E  6E11               	movwf	setMotorPWM@posDuty^0,c
  9605   003B60                     
  9606                           ;dc_motor_v1.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9607   003B60  500E               	movf	setMotorPWM@m^0,w,c
  9608   003B62  6ED9               	movwf	fsr2l,c
  9609   003B64  6ADA               	clrf	fsr2h,c
  9610   003B66  50DF               	movf	indf2,w,c
  9611   003B68  6E0F               	movwf	??_setMotorPWM^0,c
  9612   003B6A  500F               	movf	??_setMotorPWM^0,w,c
  9613   003B6C  6E01               	movwf	___wmul@multiplier^0,c
  9614   003B6E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9615   003B70  500E               	movf	setMotorPWM@m^0,w,c
  9616   003B72  6ED9               	movwf	fsr2l,c
  9617   003B74  6ADA               	clrf	fsr2h,c
  9618   003B76  0E03               	movlw	3
  9619   003B78  26D9               	addwf	fsr2l,f,c
  9620   003B7A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9621   003B7E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9622   003B82  EC7F  F025         	call	___wmul	;wreg free
  9623   003B86  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9624   003B8A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9625   003B8E  0E00               	movlw	0
  9626   003B90  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9627   003B92  0E64               	movlw	100
  9628   003B94  6E09               	movwf	___lwdiv@divisor^0,c
  9629   003B96  EC89  F023         	call	___lwdiv	;wreg free
  9630   003B9A  5007               	movf	?___lwdiv^0,w,c
  9631   003B9C  6E12               	movwf	setMotorPWM@negDuty^0,c
  9632   003B9E                     l3717:
  9633                           
  9634                           ;dc_motor_v1.c: 89:     if (m->direction) {
  9635   003B9E  500E               	movf	setMotorPWM@m^0,w,c
  9636   003BA0  6ED9               	movwf	fsr2l,c
  9637   003BA2  6ADA               	clrf	fsr2h,c
  9638   003BA4  0E01               	movlw	1
  9639   003BA6  26D9               	addwf	fsr2l,f,c
  9640   003BA8  50DF               	movf	indf2,w,c
  9641   003BAA  B4D8               	btfsc	status,2,c
  9642   003BAC  EFDA  F01D         	goto	u3841
  9643   003BB0  EFDC  F01D         	goto	u3840
  9644   003BB4                     u3841:
  9645   003BB4  EFFC  F01D         	goto	l3721
  9646   003BB8                     u3840:
  9647   003BB8                     
  9648                           ;dc_motor_v1.c: 90:         *(m->posDutyHighByte)=posDuty;
  9649   003BB8  500E               	movf	setMotorPWM@m^0,w,c
  9650   003BBA  6ED9               	movwf	fsr2l,c
  9651   003BBC  6ADA               	clrf	fsr2h,c
  9652   003BBE  0E05               	movlw	5
  9653   003BC0  26D9               	addwf	fsr2l,f,c
  9654   003BC2  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9655   003BC6  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9656   003BCA  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9657   003BCE  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9658   003BD2  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9659                           
  9660                           ;dc_motor_v1.c: 91:         *(m->negDutyHighByte)=negDuty;
  9661   003BD6  500E               	movf	setMotorPWM@m^0,w,c
  9662   003BD8  6ED9               	movwf	fsr2l,c
  9663   003BDA  6ADA               	clrf	fsr2h,c
  9664   003BDC  0E07               	movlw	7
  9665   003BDE  26D9               	addwf	fsr2l,f,c
  9666   003BE0  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9667   003BE4  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9668   003BE8  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9669   003BEC  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9670   003BF0  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9671                           
  9672                           ;dc_motor_v1.c: 92:     } else {
  9673   003BF4  EF1A  F01E         	goto	l290
  9674   003BF8                     l3721:
  9675                           
  9676                           ;dc_motor_v1.c: 93:         *(m->posDutyHighByte)=negDuty;
  9677   003BF8  500E               	movf	setMotorPWM@m^0,w,c
  9678   003BFA  6ED9               	movwf	fsr2l,c
  9679   003BFC  6ADA               	clrf	fsr2h,c
  9680   003BFE  0E05               	movlw	5
  9681   003C00  26D9               	addwf	fsr2l,f,c
  9682   003C02  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9683   003C06  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9684   003C0A  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9685   003C0E  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9686   003C12  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9687                           
  9688                           ;dc_motor_v1.c: 94:         *(m->negDutyHighByte)=posDuty;
  9689   003C16  500E               	movf	setMotorPWM@m^0,w,c
  9690   003C18  6ED9               	movwf	fsr2l,c
  9691   003C1A  6ADA               	clrf	fsr2h,c
  9692   003C1C  0E07               	movlw	7
  9693   003C1E  26D9               	addwf	fsr2l,f,c
  9694   003C20  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9695   003C24  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9696   003C28  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9697   003C2C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9698   003C30  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9699   003C34                     l290:
  9700   003C34  0012               	return		;funcret
  9701   003C36                     __end_of_setMotorPWM:
  9702                           	callstack 0
  9703                           
  9704 ;; *************** function ___wmul *****************
  9705 ;; Defined at:
  9706 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;  multiplier      2    0[COMRAM] unsigned int 
  9709 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;  product         2    4[COMRAM] unsigned int 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  2    0[COMRAM] unsigned int 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0, prodl, prodh
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9725 ;;Total ram usage:        6 bytes
  9726 ;; Hardware stack levels used: 1
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_setMotorPWM
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text36
  9735   004AFE                     __ptext36:
  9736                           	callstack 0
  9737   004AFE                     ___wmul:
  9738                           	callstack 27
  9739   004AFE  5001               	movf	___wmul@multiplier^0,w,c
  9740   004B00  0203               	mulwf	___wmul@multiplicand^0,c
  9741   004B02  CFF3 F005          	movff	prodl,___wmul@product
  9742   004B06  CFF4 F006          	movff	prodh,___wmul@product+1
  9743   004B0A  5001               	movf	___wmul@multiplier^0,w,c
  9744   004B0C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9745   004B0E  50F3               	movf	243,w,c
  9746   004B10  2606               	addwf	(___wmul@product+1)^0,f,c
  9747   004B12  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9748   004B14  0203               	mulwf	___wmul@multiplicand^0,c
  9749   004B16  50F3               	movf	243,w,c
  9750   004B18  2606               	addwf	(___wmul@product+1)^0,f,c
  9751   004B1A  C005  F001         	movff	___wmul@product,?___wmul
  9752   004B1E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9753   004B22  0012               	return		;funcret
  9754   004B24                     __end_of___wmul:
  9755                           	callstack 0
  9756                           
  9757 ;; *************** function ___lwdiv *****************
  9758 ;; Defined at:
  9759 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  dividend        2    6[COMRAM] unsigned int 
  9762 ;;  divisor         2    8[COMRAM] unsigned int 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  quotient        2   10[COMRAM] unsigned int 
  9765 ;;  counter         1   12[COMRAM] unsigned char 
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  2    6[COMRAM] unsigned int 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9776 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9778 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9779 ;;Total ram usage:        7 bytes
  9780 ;; Hardware stack levels used: 1
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_setMotorPWM
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text37
  9789   004712                     __ptext37:
  9790                           	callstack 0
  9791   004712                     ___lwdiv:
  9792                           	callstack 27
  9793   004712  0E00               	movlw	0
  9794   004714  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9795   004716  0E00               	movlw	0
  9796   004718  6E0B               	movwf	___lwdiv@quotient^0,c
  9797   00471A  5009               	movf	___lwdiv@divisor^0,w,c
  9798   00471C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9799   00471E  B4D8               	btfsc	status,2,c
  9800   004720  EF94  F023         	goto	u3671
  9801   004724  EF96  F023         	goto	u3670
  9802   004728                     u3671:
  9803   004728  EFBE  F023         	goto	l1091
  9804   00472C                     u3670:
  9805   00472C  0E01               	movlw	1
  9806   00472E  6E0D               	movwf	___lwdiv@counter^0,c
  9807   004730  EF9E  F023         	goto	l3593
  9808   004734                     l3591:
  9809   004734  90D8               	bcf	status,0,c
  9810   004736  3609               	rlcf	___lwdiv@divisor^0,f,c
  9811   004738  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9812   00473A  2A0D               	incf	___lwdiv@counter^0,f,c
  9813   00473C                     l3593:
  9814   00473C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9815   00473E  EFA3  F023         	goto	u3681
  9816   004742  EFA5  F023         	goto	u3680
  9817   004746                     u3681:
  9818   004746  EF9A  F023         	goto	l3591
  9819   00474A                     u3680:
  9820   00474A                     l3595:
  9821   00474A  90D8               	bcf	status,0,c
  9822   00474C  360B               	rlcf	___lwdiv@quotient^0,f,c
  9823   00474E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9824   004750  5009               	movf	___lwdiv@divisor^0,w,c
  9825   004752  5C07               	subwf	___lwdiv@dividend^0,w,c
  9826   004754  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9827   004756  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9828   004758  A0D8               	btfss	status,0,c
  9829   00475A  EFB1  F023         	goto	u3691
  9830   00475E  EFB3  F023         	goto	u3690
  9831   004762                     u3691:
  9832   004762  EFB8  F023         	goto	l3603
  9833   004766                     u3690:
  9834   004766  5009               	movf	___lwdiv@divisor^0,w,c
  9835   004768  5E07               	subwf	___lwdiv@dividend^0,f,c
  9836   00476A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9837   00476C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9838   00476E  800B               	bsf	___lwdiv@quotient^0,0,c
  9839   004770                     l3603:
  9840   004770  90D8               	bcf	status,0,c
  9841   004772  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9842   004774  3209               	rrcf	___lwdiv@divisor^0,f,c
  9843   004776  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9844   004778  EFA5  F023         	goto	l3595
  9845   00477C                     l1091:
  9846   00477C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9847   004780  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9848   004784  0012               	return		;funcret
  9849   004786                     __end_of___lwdiv:
  9850                           	callstack 0
  9851                           
  9852 ;; *************** function _delay_ms_function *****************
  9853 ;; Defined at:
  9854 ;;		line 68 in file "dc_motor_v1.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  milliseconds    2    0[COMRAM] unsigned int 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;		None
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  1    wreg      void 
  9861 ;; Registers used:
  9862 ;;		wreg, status,2, status,0
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9871 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9872 ;;Total ram usage:        3 bytes
  9873 ;; Hardware stack levels used: 1
  9874 ;; This function calls:
  9875 ;;		Nothing
  9876 ;; This function is called by:
  9877 ;;		_forward
  9878 ;;		_backward
  9879 ;;		_leftTURN
  9880 ;;		_rightTURN
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text38
  9885   004A7E                     __ptext38:
  9886                           	callstack 0
  9887   004A7E                     _delay_ms_function:
  9888                           	callstack 28
  9889   004A7E                     
  9890                           ;dc_motor_v1.c: 69:     while (milliseconds > 0) {
  9891   004A7E  EF4C  F025         	goto	l280
  9892   004A82                     l3703:
  9893                           
  9894                           ;dc_motor_v1.c: 70:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9895   004A82  0E15               	movlw	21
  9896   004A84  6E03               	movwf	??_delay_ms_function^0,c
  9897   004A86  0EC6               	movlw	198
  9898   004A88                     u5217:
  9899   004A88  2EE8               	decfsz	wreg,f,c
  9900   004A8A  D7FE               	bra	u5217
  9901   004A8C  2E03               	decfsz	??_delay_ms_function^0,f,c
  9902   004A8E  D7FC               	bra	u5217
  9903   004A90  D000               	nop2	
  9904   004A92                     
  9905                           ;dc_motor_v1.c: 71:         milliseconds--;
  9906   004A92  0601               	decf	delay_ms_function@milliseconds^0,f,c
  9907   004A94  A0D8               	btfss	status,0,c
  9908   004A96  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  9909   004A98                     l280:
  9910                           
  9911                           ;dc_motor_v1.c: 69:     while (milliseconds > 0) {
  9912   004A98  5001               	movf	delay_ms_function@milliseconds^0,w,c
  9913   004A9A  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  9914   004A9C  A4D8               	btfss	status,2,c
  9915   004A9E  EF53  F025         	goto	u3821
  9916   004AA2  EF55  F025         	goto	u3820
  9917   004AA6                     u3821:
  9918   004AA6  EF41  F025         	goto	l3703
  9919   004AAA                     u3820:
  9920   004AAA  0012               	return		;funcret
  9921   004AAC                     __end_of_delay_ms_function:
  9922                           	callstack 0
  9923                           
  9924 ;; *************** function ___lbdiv *****************
  9925 ;; Defined at:
  9926 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lbdiv.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  dividend        1    wreg     unsigned char 
  9929 ;;  divisor         1    0[COMRAM] unsigned char 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  dividend        1    1[COMRAM] unsigned char 
  9932 ;;  quotient        1    3[COMRAM] unsigned char 
  9933 ;;  counter         1    2[COMRAM] unsigned char 
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      unsigned char 
  9936 ;; Registers used:
  9937 ;;		wreg, status,2, status,0
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9943 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9944 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9947 ;;Total ram usage:        4 bytes
  9948 ;; Hardware stack levels used: 1
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_forward
  9953 ;;		_backward
  9954 ;;		_leftTURN
  9955 ;;		_rightTURN
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text39
  9960   0047E4                     __ptext39:
  9961                           	callstack 0
  9962   0047E4                     ___lbdiv:
  9963                           	callstack 28
  9964                           
  9965                           ;incstack = 0
  9966                           ;___lbdiv@dividend stored from wreg
  9967   0047E4  6E02               	movwf	___lbdiv@dividend^0,c
  9968   0047E6  0E00               	movlw	0
  9969   0047E8  6E04               	movwf	___lbdiv@quotient^0,c
  9970   0047EA  5001               	movf	___lbdiv@divisor^0,w,c
  9971   0047EC  B4D8               	btfsc	status,2,c
  9972   0047EE  EFFB  F023         	goto	u3851
  9973   0047F2  EFFD  F023         	goto	u3850
  9974   0047F6                     u3851:
  9975   0047F6  EF1E  F024         	goto	l3745
  9976   0047FA                     u3850:
  9977   0047FA  0E01               	movlw	1
  9978   0047FC  6E03               	movwf	___lbdiv@counter^0,c
  9979   0047FE  EF04  F024         	goto	l3733
  9980   004802                     l3729:
  9981   004802  90D8               	bcf	status,0,c
  9982   004804  3601               	rlcf	___lbdiv@divisor^0,f,c
  9983   004806  2A03               	incf	___lbdiv@counter^0,f,c
  9984   004808                     l3733:
  9985   004808  AE01               	btfss	___lbdiv@divisor^0,7,c
  9986   00480A  EF09  F024         	goto	u3861
  9987   00480E  EF0B  F024         	goto	u3860
  9988   004812                     u3861:
  9989   004812  EF01  F024         	goto	l3729
  9990   004816                     u3860:
  9991   004816                     l3735:
  9992   004816  90D8               	bcf	status,0,c
  9993   004818  3604               	rlcf	___lbdiv@quotient^0,f,c
  9994   00481A  5001               	movf	___lbdiv@divisor^0,w,c
  9995   00481C  5C02               	subwf	___lbdiv@dividend^0,w,c
  9996   00481E  A0D8               	btfss	status,0,c
  9997   004820  EF14  F024         	goto	u3871
  9998   004824  EF16  F024         	goto	u3870
  9999   004828                     u3871:
 10000   004828  EF19  F024         	goto	l3741
 10001   00482C                     u3870:
 10002   00482C  5001               	movf	___lbdiv@divisor^0,w,c
 10003   00482E  5E02               	subwf	___lbdiv@dividend^0,f,c
 10004   004830  8004               	bsf	___lbdiv@quotient^0,0,c
 10005   004832                     l3741:
 10006   004832  90D8               	bcf	status,0,c
 10007   004834  3201               	rrcf	___lbdiv@divisor^0,f,c
 10008   004836  2E03               	decfsz	___lbdiv@counter^0,f,c
 10009   004838  EF0B  F024         	goto	l3735
 10010   00483C                     l3745:
 10011   00483C  5004               	movf	___lbdiv@quotient^0,w,c
 10012   00483E  0012               	return		;funcret
 10013   004840                     __end_of___lbdiv:
 10014                           	callstack 0
 10015                           
 10016 ;; *************** function _adjust_calibration *****************
 10017 ;; Defined at:
 10018 ;;		line 25 in file "calibration.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;  calibration_    1    0[COMRAM] PTR int 
 10021 ;;		 -> calibration(9), 
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;		None
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  1    wreg      void 
 10026 ;; Registers used:
 10027 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10033 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10036 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10037 ;;Total ram usage:        5 bytes
 10038 ;; Hardware stack levels used: 1
 10039 ;; This function calls:
 10040 ;;		Nothing
 10041 ;; This function is called by:
 10042 ;;		_calibration_routine
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           	psect	text40
 10047   003C36                     __ptext40:
 10048                           	callstack 0
 10049   003C36                     _adjust_calibration:
 10050                           	callstack 29
 10051   003C36                     l185:
 10052                           
 10053                           ;calibration.c: 31:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
 10054   003C36  A68E               	btfss	142,3,c	;volatile
 10055   003C38  EF20  F01E         	goto	u4331
 10056   003C3C  EF22  F01E         	goto	u4330
 10057   003C40                     u4331:
 10058   003C40  EF29  F01E         	goto	l3889
 10059   003C44                     u4330:
 10060   003C44  B48E               	btfsc	142,2,c	;volatile
 10061   003C46  EF27  F01E         	goto	u4341
 10062   003C4A  EF29  F01E         	goto	u4340
 10063   003C4E                     u4341:
 10064   003C4E  EF1B  F01E         	goto	l185
 10065   003C52                     u4340:
 10066   003C52                     l3889:
 10067                           
 10068                           ;calibration.c: 32:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10069   003C52  0E09               	movlw	9
 10070   003C54  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10071   003C56  0E1E               	movlw	30
 10072   003C58  6E02               	movwf	??_adjust_calibration^0,c
 10073   003C5A  0EE4               	movlw	228
 10074   003C5C                     u5227:
 10075   003C5C  2EE8               	decfsz	wreg,f,c
 10076   003C5E  D7FE               	bra	u5227
 10077   003C60  2E02               	decfsz	??_adjust_calibration^0,f,c
 10078   003C62  D7FC               	bra	u5227
 10079   003C64  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10080   003C66  D7FA               	bra	u5227
 10081   003C68  D000               	nop2	
 10082   003C6A                     
 10083                           ;calibration.c: 34:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
 10084   003C6A  B68E               	btfsc	142,3,c	;volatile
 10085   003C6C  EF3A  F01E         	goto	u4351
 10086   003C70  EF3C  F01E         	goto	u4350
 10087   003C74                     u4351:
 10088   003C74  EF55  F01E         	goto	l189
 10089   003C78                     u4350:
 10090   003C78  B48E               	btfsc	142,2,c	;volatile
 10091   003C7A  EF41  F01E         	goto	u4361
 10092   003C7E  EF43  F01E         	goto	u4360
 10093   003C82                     u4361:
 10094   003C82  EF55  F01E         	goto	l189
 10095   003C86                     u4360:
 10096   003C86                     
 10097                           ;calibration.c: 36:                 LATHbits.LATH3 = 1;
 10098   003C86  8680               	bsf	128,3,c	;volatile
 10099                           
 10100                           ;calibration.c: 37:                 LATDbits.LATD7 = 1;
 10101   003C88  8E7C               	bsf	124,7,c	;volatile
 10102   003C8A                     
 10103                           ;calibration.c: 38:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
 10104   003C8A  0E52               	movlw	82
 10105   003C8C  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10106   003C8E  0E2B               	movlw	43
 10107   003C90  6E02               	movwf	??_adjust_calibration^0,c
 10108   003C92  0E00               	movlw	0
 10109   003C94                     u5237:
 10110   003C94  2EE8               	decfsz	wreg,f,c
 10111   003C96  D7FE               	bra	u5237
 10112   003C98  2E02               	decfsz	??_adjust_calibration^0,f,c
 10113   003C9A  D7FC               	bra	u5237
 10114   003C9C  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10115   003C9E  D7FA               	bra	u5237
 10116   003CA0  D000               	nop2	
 10117   003CA2                     
 10118                           ;calibration.c: 39:                 LATHbits.LATH3 = 0;
 10119   003CA2  9680               	bcf	128,3,c	;volatile
 10120   003CA4                     
 10121                           ;calibration.c: 40:                 LATDbits.LATD7 = 0;
 10122   003CA4  9E7C               	bcf	124,7,c	;volatile
 10123                           
 10124                           ;calibration.c: 41:                 break;
 10125   003CA6  EFC1  F01E         	goto	l195
 10126   003CAA                     l189:
 10127                           
 10128                           ;calibration.c: 44:                 if(!PORTFbits.RF2){
 10129   003CAA  B48E               	btfsc	142,2,c	;volatile
 10130   003CAC  EF5A  F01E         	goto	u4371
 10131   003CB0  EF5C  F01E         	goto	u4370
 10132   003CB4                     u4371:
 10133   003CB4  EF88  F01E         	goto	l3915
 10134   003CB8                     u4370:
 10135   003CB8                     
 10136                           ;calibration.c: 45:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10137   003CB8  0E11               	movlw	17
 10138   003CBA  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10139   003CBC  0E3C               	movlw	60
 10140   003CBE  6E02               	movwf	??_adjust_calibration^0,c
 10141   003CC0  0ECB               	movlw	203
 10142   003CC2                     u5247:
 10143   003CC2  2EE8               	decfsz	wreg,f,c
 10144   003CC4  D7FE               	bra	u5247
 10145   003CC6  2E02               	decfsz	??_adjust_calibration^0,f,c
 10146   003CC8  D7FC               	bra	u5247
 10147   003CCA  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10148   003CCC  D7FA               	bra	u5247
 10149   003CCE  0000               	nop	
 10150   003CD0                     
 10151                           ;calibration.c: 46:                     *calibration_label = *calibration_label + 1;
 10152   003CD0  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10153   003CD2  6ED9               	movwf	fsr2l,c
 10154   003CD4  6ADA               	clrf	fsr2h,c
 10155   003CD6  CFDE F002          	movff	postinc2,??_adjust_calibration
 10156   003CDA  CFDD F003          	movff	postdec2,??_adjust_calibration+1
 10157   003CDE  0E01               	movlw	1
 10158   003CE0  2602               	addwf	??_adjust_calibration^0,f,c
 10159   003CE2  0E00               	movlw	0
 10160   003CE4  2203               	addwfc	(??_adjust_calibration+1)^0,f,c
 10161   003CE6  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10162   003CE8  6ED9               	movwf	fsr2l,c
 10163   003CEA  6ADA               	clrf	fsr2h,c
 10164   003CEC  C002  FFDE         	movff	??_adjust_calibration,postinc2
 10165   003CF0  C003  FFDD         	movff	??_adjust_calibration+1,postdec2
 10166   003CF4                     
 10167                           ;calibration.c: 47:                     LATDbits.LATD7 = 1;
 10168   003CF4  8E7C               	bsf	124,7,c	;volatile
 10169   003CF6                     
 10170                           ;calibration.c: 48:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10171   003CF6  0E11               	movlw	17
 10172   003CF8  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10173   003CFA  0E3C               	movlw	60
 10174   003CFC  6E02               	movwf	??_adjust_calibration^0,c
 10175   003CFE  0ECB               	movlw	203
 10176   003D00                     u5257:
 10177   003D00  2EE8               	decfsz	wreg,f,c
 10178   003D02  D7FE               	bra	u5257
 10179   003D04  2E02               	decfsz	??_adjust_calibration^0,f,c
 10180   003D06  D7FC               	bra	u5257
 10181   003D08  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10182   003D0A  D7FA               	bra	u5257
 10183   003D0C  0000               	nop	
 10184   003D0E                     
 10185                           ;calibration.c: 49:                     LATDbits.LATD7 = 0;
 10186   003D0E  9E7C               	bcf	124,7,c	;volatile
 10187   003D10                     l3915:
 10188                           
 10189                           ;calibration.c: 52:                 if(!PORTFbits.RF3){
 10190   003D10  B68E               	btfsc	142,3,c	;volatile
 10191   003D12  EF8D  F01E         	goto	u4381
 10192   003D16  EF8F  F01E         	goto	u4380
 10193   003D1A                     u4381:
 10194   003D1A  EFBF  F01E         	goto	l186
 10195   003D1E                     u4380:
 10196   003D1E                     
 10197                           ;calibration.c: 53:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10198   003D1E  0E11               	movlw	17
 10199   003D20  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10200   003D22  0E3C               	movlw	60
 10201   003D24  6E02               	movwf	??_adjust_calibration^0,c
 10202   003D26  0ECB               	movlw	203
 10203   003D28                     u5267:
 10204   003D28  2EE8               	decfsz	wreg,f,c
 10205   003D2A  D7FE               	bra	u5267
 10206   003D2C  2E02               	decfsz	??_adjust_calibration^0,f,c
 10207   003D2E  D7FC               	bra	u5267
 10208   003D30  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10209   003D32  D7FA               	bra	u5267
 10210   003D34  0000               	nop	
 10211   003D36                     
 10212                           ;calibration.c: 54:                     *calibration_label = *calibration_label - 1;
 10213   003D36  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10214   003D38  6ED9               	movwf	fsr2l,c
 10215   003D3A  6ADA               	clrf	fsr2h,c
 10216   003D3C  CFDE F002          	movff	postinc2,??_adjust_calibration
 10217   003D40  CFDD F003          	movff	postdec2,??_adjust_calibration+1
 10218   003D44  0EFF               	movlw	255
 10219   003D46  2402               	addwf	??_adjust_calibration^0,w,c
 10220   003D48  6E04               	movwf	(??_adjust_calibration+2)^0,c
 10221   003D4A  0EFF               	movlw	255
 10222   003D4C  2003               	addwfc	(??_adjust_calibration+1)^0,w,c
 10223   003D4E  6E05               	movwf	(??_adjust_calibration+3)^0,c
 10224   003D50  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10225   003D52  6ED9               	movwf	fsr2l,c
 10226   003D54  6ADA               	clrf	fsr2h,c
 10227   003D56  C004  FFDE         	movff	??_adjust_calibration+2,postinc2
 10228   003D5A  C005  FFDD         	movff	??_adjust_calibration+3,postdec2
 10229   003D5E                     
 10230                           ;calibration.c: 55:                     LATHbits.LATH3 = 1;
 10231   003D5E  8680               	bsf	128,3,c	;volatile
 10232   003D60                     
 10233                           ;calibration.c: 56:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10234   003D60  0E11               	movlw	17
 10235   003D62  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10236   003D64  0E3C               	movlw	60
 10237   003D66  6E02               	movwf	??_adjust_calibration^0,c
 10238   003D68  0ECB               	movlw	203
 10239   003D6A                     u5277:
 10240   003D6A  2EE8               	decfsz	wreg,f,c
 10241   003D6C  D7FE               	bra	u5277
 10242   003D6E  2E02               	decfsz	??_adjust_calibration^0,f,c
 10243   003D70  D7FC               	bra	u5277
 10244   003D72  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10245   003D74  D7FA               	bra	u5277
 10246   003D76  0000               	nop	
 10247   003D78                     
 10248                           ;calibration.c: 57:                     LATHbits.LATH3 = 0;
 10249   003D78  9680               	bcf	128,3,c	;volatile
 10250   003D7A  EF1B  F01E         	goto	l185
 10251   003D7E                     l186:
 10252   003D7E  EF1B  F01E         	goto	l185
 10253   003D82                     l195:
 10254   003D82  0012               	return		;funcret
 10255   003D84                     __end_of_adjust_calibration:
 10256                           	callstack 0
 10257                           
 10258                           	psect	smallconst
 10259   000E00                     __psmallconst:
 10260                           	callstack 0
 10261   000E00  00                 	db	0
 10262   000E01  00                 	db	0	; dummy byte at the end
 10263   000000                     
 10264                           	psect	rparam
 10265   000000                     
 10266                           	psect	config
 10267                           
 10268                           ;Config register CONFIG1L @ 0x300000
 10269                           ;	External Oscillator mode Selection bits
 10270                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10271                           ;	Power-up default value for COSC bits
 10272                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10273   300000                     	org	3145728
 10274   300000  AA                 	db	170
 10275                           
 10276                           ;Config register CONFIG1H @ 0x300001
 10277                           ;	unspecified, using default values
 10278                           ;	Clock Out Enable bit
 10279                           ;	CLKOUTEN = 0x1, unprogrammed default
 10280                           ;	Clock Switch Enable bit
 10281                           ;	CSWEN = 0x1, unprogrammed default
 10282                           ;	Fail-Safe Clock Monitor Enable bit
 10283                           ;	FCMEN = 0x1, unprogrammed default
 10284   300001                     	org	3145729
 10285   300001  FF                 	db	255
 10286                           
 10287                           ;Config register CONFIG3L @ 0x300004
 10288                           ;	WDT Period Select bits
 10289                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10290                           ;	WDT operating mode
 10291                           ;	WDTE = OFF, WDT Disabled
 10292   300004                     	org	3145732
 10293   300004  9F                 	db	159
 10294                           
 10295                           ;Config register CONFIG3H @ 0x300005
 10296                           ;	unspecified, using default values
 10297                           ;	WDT Window Select bits
 10298                           ;	WDTCWS = 0x7, unprogrammed default
 10299                           ;	WDT input clock selector
 10300                           ;	WDTCCS = 0x7, unprogrammed default
 10301   300005                     	org	3145733
 10302   300005  FF                 	db	255
 10303                           tosu	equ	0xFFF
 10304                           tosh	equ	0xFFE
 10305                           tosl	equ	0xFFD
 10306                           stkptr	equ	0xFFC
 10307                           pclatu	equ	0xFFB
 10308                           pclath	equ	0xFFA
 10309                           pcl	equ	0xFF9
 10310                           tblptru	equ	0xFF8
 10311                           tblptrh	equ	0xFF7
 10312                           tblptrl	equ	0xFF6
 10313                           tablat	equ	0xFF5
 10314                           prodh	equ	0xFF4
 10315                           prodl	equ	0xFF3
 10316                           indf0	equ	0xFEF
 10317                           postinc0	equ	0xFEE
 10318                           postdec0	equ	0xFED
 10319                           preinc0	equ	0xFEC
 10320                           plusw0	equ	0xFEB
 10321                           fsr0h	equ	0xFEA
 10322                           fsr0l	equ	0xFE9
 10323                           wreg	equ	0xFE8
 10324                           indf1	equ	0xFE7
 10325                           postinc1	equ	0xFE6
 10326                           postdec1	equ	0xFE5
 10327                           preinc1	equ	0xFE4
 10328                           plusw1	equ	0xFE3
 10329                           fsr1h	equ	0xFE2
 10330                           fsr1l	equ	0xFE1
 10331                           bsr	equ	0xFE0
 10332                           indf2	equ	0xFDF
 10333                           postinc2	equ	0xFDE
 10334                           postdec2	equ	0xFDD
 10335                           preinc2	equ	0xFDC
 10336                           plusw2	equ	0xFDB
 10337                           fsr2h	equ	0xFDA
 10338                           fsr2l	equ	0xFD9
 10339                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    120     157
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    backward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    backward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    calibration_routine@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    calibration_routine@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    calibration_routine@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    leftTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    leftTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    maze_return@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    maze_return@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_return@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    maze_search@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    maze_search@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_search@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    rightTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    rightTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    rightTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    S551DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    S551DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    switch_calibration@calibration_index	PTR int  size(1) Largest target is 9
		 -> calibration(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _maze_return->_backward
    _calibration_routine->_backward
    _rightTURN->_setMotorPWM
    _leftTURN->_setMotorPWM
    _forward->_setMotorPWM
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  133784
                _calibration_routine
                    _initDCmotorsPWM
                        _maze_return
                        _maze_search
            _pause_until_RF2_pressed
 ---------------------------------------------------------------------------------
 (1) _pause_until_RF2_pressed                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _maze_search                                          7     4      3   73760
                                             93 COMRAM     2     2      0
                                            115 BANK0      5     2      3
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (2) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _color_cardCheck                                     32    30      2   43948
                                             91 COMRAM     2     0      2
                                             85 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGB_to_HSV                                          75    56     19   33673
                                             10 BANK0     75    56     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (4) _custom_floatmodulo                                  18    10      8   11208
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                             33 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _maze_return                                         12     9      3   29963
                                             30 COMRAM    12     9      3
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                  4     1      3   29896
                                             30 COMRAM     4     1      3
                 _adjust_calibration
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
                 _switch_calibration
 ---------------------------------------------------------------------------------
 (2) _switch_calibration                                   3     2      1     652
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _rightTURN                                            9     7      2    7109
                                             18 COMRAM     8     6      2
                            ___lbdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _leftTURN                                             9     7      2    5285
                                             18 COMRAM     8     6      2
                            ___lbdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              9     7      2    6805
                                             18 COMRAM     8     6      2
                            ___lbdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _backward                                            13    11      2    8021
                                             18 COMRAM    12    10      2
                            ___lbdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    2437
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms_function                                    3     1      2     631
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     466
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _adjust_calibration                                   5     4      1     696
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration_routine
     _adjust_calibration
     _backward
       ___lbdiv
       _delay_ms_function
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _forward
       ___lbdiv
       _delay_ms_function
       _setMotorPWM
     _leftTURN
       ___lbdiv
       _delay_ms_function
       _setMotorPWM
     _rightTURN
       ___lbdiv
       _delay_ms_function
       _setMotorPWM
     _switch_calibration
   _initDCmotorsPWM
   _maze_return
     _backward
     _forward
     _leftTURN
     _rightTURN
   _maze_search
     _backward
     _color_cardCheck
       _RGB_to_HSV
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         ___fleq
         ___flge
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___flsub
         _custom_floatmodulo
           ___fldiv
           ___fleq
           ___flmul
           ___flsub
           ___fltol
           ___xxtofl
       ___flge
       ___xxtofl
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _color_click_init
       _I2C_2_Master_Init
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _leftTURN
     _rightTURN
   _pause_until_RF2_pressed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhl     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllll     20      0       0      45        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhl      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17E      58        0.0%
DATA                 0      0     17E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 18 02:23:52 2024

                     _color_read_Red 4840                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 4930                                   l31 4A46  
                                 l40 48DE                                   l50 4250  
                                 l34 4B42                                   l43 497E  
                                 l60 195E                                   l37 488E  
                                 l70 1A50                                   l62 19B8  
                                 l46 492E                                   l80 1E18  
                                 l72 1A60                                   l64 19C8  
                                 l74 1ABA                                   l58 194E  
                                 l76 1ACA                                   l86 1F22  
                                 l87 1F5E                                   l99 1830  
                ___wmul@multiplicand 0003                     _color_read_Clear 48E0  
                   _color_read_Green 4890                                  l105 1838  
                                l203 45D2                                  l132 4AD4  
                                l141 4B62                                  l206 3596  
                                l150 4B4E                                  l135 4AD6  
                                l312 3EC0                                  l304 3E28  
                                l144 4B6C                                  l153 4A06  
                                l218 37C2                                  l138 4AFC  
                                l147 4B58                                  l340 4138  
                                l332 40A0                                  l326 3AE0  
                                l318 3A36                                  l182 47E2  
                                l280 4A98                                  l600 4B22  
                                l185 3C36                                  l186 3D7E  
                                l290 3C34                                  l354 3FFC  
                                l346 3F64                                  l178 4786  
                                l195 3D82                                  l283 4AAA  
                                l189 3CAA                                  l277 4710  
                                l198 4526                                  l199 4590  
                                l561 2450                                  l571 2916  
                                l568 2454                                  l577 29A2  
                                l597 2DD0                                  l870 445A  
                                l865 4414                                  l859 467C  
                                l897 4356                                  wreg 0FE8  
                       ___flmul@aexp 004C                         ___flmul@bexp 004D  
                       ___flmul@sign 0047                         ___flmul@temp 0052  
                       ___flmul@prod 004E           __end_of_adjust_calibration 3D84  
                       ___fltol@exp1 000A                                 l1006 483E  
                               l1130 25F8                                 l1221 308C  
                               l1214 2E96                                 l1231 31BC  
                               l1223 3104                                 l1224 30F2  
                               l1128 2644                                 l1145 275E  
                               l1137 2914                                 l1129 2632  
                               l3001 258E                                 l1218 31FA  
                               l1154 282E                                 l1170 49C4  
                               l1091 477C                                 l1155 281C  
                               l3011 25E0                                 l3003 2592  
                               l3101 2858                                 l3021 2624  
                               l3013 25F0                                 l3005 2596  
                               l1182 3594                                 l1262 38B2  
                               l3111 28D4                                 l3103 2892  
                               l3023 2626                                 l3015 2606  
                               l3007 259A                                 l1255 381A  
                               l1184 33F4                                 l4001 405A  
                               l1193 343A                                 l3201 3384  
                               l3121 28F4                                 l3113 28D8  
                               l3105 2894                                 l3041 26AE  
                               l3033 2676                                 l3025 2630  
                               l3017 2612                                 l3009 25C4  
                               l1098 4784                                 l1258 3976  
                               l4011 4088                                 l4003 4062  
                               l1195 34B2                                 l3211 33E0  
                               l1187 33B8                                 l3203 3394  
                               l3123 2902                                 l3115 28E6  
                               l3107 28A4                                 l3043 26B2  
                               l3035 2686                                 l3027 2652  
                               l3051 26D2                                 l3019 2616  
                               l3131 4AE6                                 l1196 34A0  
                               l4101 39F4                                 l4021 40D4  
                               l4013 4090                                 l4005 406A  
                               l3221 3420                                 l3213 33E2  
                               l3205 33A8                                 l3141 3228  
                               l3133 31FC                                 l3301 2E80  
                               l3125 2904                                 l3117 28EC  
                               l3109 28B4                                 l3053 26F8  
                               l3061 274E                                 l3045 26C0  
                               l3037 2694                                 l3029 2662  
                               l1269 390E                                 l4111 3A74  
                               l4103 3A18                                 l4023 40EA  
                               l4031 410C                                 l4015 409E  
                               l4007 4074                                 l3231 345C  
                               l3223 342A                                 l3215 33F2  
                               l3207 33B6                                 l3151 3262  
                               l3143 3238                                 l3135 3208  
                               l3311 2ECA                                 l3303 2E86  
                               l3119 28EE                                 l3071 27A2  
                               l3063 2774                                 l3055 272C  
                               l3047 26C2                                 l3039 26A2  
                               l4121 3AAA                                 l4113 3A7C  
                               l4105 3A24                                 l4041 3DA6  
                               l4033 4122                                 l4025 40F2  
                               l4017 40B6                                 l4009 4076  
                               l4201 37A2                                 l3241 34CE  
                               l3233 346A                                 l3225 3438  
                               l3217 3404                                 l3209 33C2  
                               l3161 328E                                 l3153 3268  
                               l3145 3248                                 l3137 3216  
                               l3321 2F1A                                 l3313 2ED6  
                               l3305 2EA6                                 l3081 27CC  
                               l3073 27B0                                 l3065 2784  
                               l3057 272E                                 l3049 26CC  
                               l3401 4980                                 l3129 4AD6  
                               l4115 3A92                                 l4123 3AB4  
                               l4107 3A32                                 l4051 3DF2  
                               l4043 3DB2                                 l4035 3D86  
                               l4027 40FA                                 l4019 40CC  
                               l4203 37B8                                 l4211 46B8  
                               l3251 353A                                 l3243 34DC  
                               l3235 3498                                 l3219 341A  
                               l3227 344A                                 l3171 32C8  
                               l3163 329E                                 l3155 326E  
                               l3147 324A                                 l3139 3218  
                               l3411 4612                                 l3331 2F5C  
                               l3323 2F26                                 l3315 2EE0  
                               l3307 2EB6                                 l3091 27FE  
                               l3083 27DC                                 l3075 27B2  
                               l3059 273E                                 l3403 4990  
                               l4131 47BA                                 l4125 3ACA  
                               l4117 3A9A                                 l4109 3A5E  
                               l4061 3E26                                 l4053 3DFC  
                               l4045 3DBA                                 l4037 3DA2  
                               l4029 4102                                 l4141 35B4  
                               l4221 46F4                                 l4213 46DC  
                               l4205 467E                                 l3261 3588  
                               l3253 3554                                 l3245 3506  
                               l3229 3458                                 l3173 32DE  
                               l3165 32AE                                 l3157 327C  
                               l3149 3252                                 l3413 4640  
                               l3341 2FBE                                 l3333 2F68  
                               l3325 2F32                                 l3317 2EF6  
                               l3093 2814                                 l3077 27C0  
                               l3069 2798                                 l3085 27DE  
                               l3501 3922                                 l4301 21A8  
                               l4133 47C8                                 l4119 3AA2  
                               l4071 3E7A                                 l4063 3E3E  
                               l4047 3DE2                                 l4055 3DFE  
                               l4039 3DA6                                 l4151 360E  
                               l4143 35CC                                 l4231 470E  
                               l4223 46FE                                 l4215 46E6  
                               l4207 468E                                 l3263 358A  
                               l3255 3570                                 l3239 34C2  
                               l3247 350A                                 l3191 3332  
                               l3175 32EE                                 l3183 330E  
                               l3167 32B0                                 l3159 327E  
                               l3415 4650                                 l3407 45D4  
                               l3351 3054                                 l3343 2FCA  
                               l3335 2F78                                 l3327 2F40  
                               l3319 2F02                                 l3271 2DD2  
                               l3079 27C8                                 l3087 27EC  
                               l3431 42A6                                 l3423 4252  
                               l3503 3946                                 l4311 2228  
                               l4303 21C2                                 l4135 47E0  
                               l4127 4788                                 l3601 476E  
                               l4081 397A                                 l4073 3E82  
                               l4065 3E54                                 l4057 3E10  
                               l4049 3DEA                                 l4161 3658  
                               l4153 3616                                 l4145 35D4  
                               l4137 3596                                 l4225 4700  
                               l4217 46E8                                 l4209 46B4  
                               l4401 2D46                                 l3257 3574  
                               l3249 3524                                 l3193 334C  
                               l3185 331E                                 l3177 32F6  
                               l3169 32B8                                 l3417 4674  
                               l3409 4602                                 l3361 30AA  
                               l3353 3072                                 l3345 2FE6  
                               l3337 2F92                                 l3329 2F4C  
                               l3281 2E0E                                 l3273 2DDE  
                               l3097 283E                                 l3089 27F0  
                               l3433 42A8                                 l3425 4268  
                               l3505 3956                                 l3513 4B5A  
                               l3521 4B50                                 l4313 2238  
                               l4321 228A                                 l4305 21DC  
                               l4241 1F80                                 l4233 1F60  
                               l4129 47A0                                 l3603 4770  
                               l4091 39AE                                 l4083 3992  
                               l4075 3E8A                                 l4067 3E5C  
                               l4059 3E18                                 l4171 36B2  
                               l4163 3670                                 l4155 362E  
                               l4147 35EC                                 l4139 35AC  
                               l4227 470A                                 l4219 46F2  
                               l4411 2DBE                                 l4403 2D8E  
                               l3259 3582                                 l3195 335C  
                               l3187 331E                                 l3179 32FA  
                               l3419 467A                                 l3371 3114  
                               l3363 30AE                                 l3355 307C  
                               l3347 3010                                 l3339 2FA2  
                               l3291 2E40                                 l3283 2E1E  
                               l3275 2DEC                                 l3099 284A  
                               l3435 42B8                                 l3507 3964  
                               l3531 49CC                                 l3515 4B5E  
                               l3523 4B54                                 l3611 4ABC  
                               l4331 22E2                                 l4323 229E  
                               l4315 223A                                 l4307 21F6  
                               l4251 1FAE                                 l4243 1F9A  
                               l4235 1F64                                 l3701 4A7E  
                               l3605 4776                                 l4093 39D6  
                               l4085 3996                                 l4069 3E72  
                               l4077 3E94                                 l4181 36FE  
                               l4173 36BC                                 l4165 367A  
                               l4157 3638                                 l4149 35F6  
                               l4229 470C                                 l4413 2DC0  
                               l4405 2D94                                 l3197 336C  
                               l3381 3176                                 l3373 3120  
                               l3365 30BC                                 l3357 308A  
                               l3349 3046                                 l3293 2E4E  
                               l3285 2E24                                 l3277 2DEE  
                               l3461 4336                                 l3445 42E2  
                               l3437 42BC                                 l3429 427C  
                               l3509 3966                                 l3533 49D4  
                               l3525 4B64                                 l3517 4B46  
                               l3621 4840                                 l3613 4ABE  
                               l4341 233E                                 l4325 22AE  
                               l4333 2300                                 l4317 2252  
                               l4309 2214                                 l4261 2052  
                               l4253 1FC0                                 l4245 1F9E  
                               l4237 1F7C                                 l4501 44E8  
                               l3703 4A82                                 l3711 3B4A  
                               l4095 39DE                                 l4087 3996  
                               l4079 3EAA                                 l4191 3758  
                               l4183 3716                                 l4175 36D4  
                               l4167 3692                                 l4159 3650  
                               l4407 2DA2                                 l3199 337C  
                               l3391 31DE                                 l3383 318A  
                               l3375 312E                                 l3367 30EA  
                               l3359 309C                                 l3295 2E50  
                               l3287 2E34                                 l3279 2DFE  
                               l3463 4346                                 l3455 430A  
                               l3447 42EC                                 l3439 42CA  
                               l3471 37E4                                 l3551 41D0  
                               l3543 413A                                 l3535 49DC  
                               l3527 4B68                                 l3519 4B4A  
                               l3623 4886                                 l3615 4AC0  
                               l3607 4AAC                                 l4351 239A  
                               l4335 2314                                 l4343 235C  
                               l4327 22B0                                 l4319 226C  
                               l4271 20B2                                 l4263 206E  
                               l4255 2026                                 l4247 1FAA  
                               l4239 1F7E                                 l4503 44EC  
                               l3705 4A92                                 l3721 3BF8  
                               l3713 3B5C                                 l4097 39E6  
                               l4089 39A2                                 l4193 3760  
                               l4185 371E                                 l4177 36DC  
                               l4169 369A                                 l4409 2DB0  
                               l3393 31E0                                 l3385 31A4  
                               l3377 3158                                 l3297 2E60  
                               l3289 2E3A                                 l3457 4316  
                               l3449 42F6                                 l3481 385C  
                               l3473 382A                                 l3553 4240  
                               l3545 416C                                 l3537 4A02  
                               l3529 49C8                                 l3633 4930  
                               l3641 4926                                 l3801 112A  
                               l3617 4AC2                                 l3609 4AB6  
                               l4345 2370                                 l4353 23B8  
                               l4337 2324                                 l4329 22C8  
                               l4281 20F0                                 l4273 20B4  
                               l4257 2034                                 l4265 208A  
                               l4249 1FAC                                 l4505 44FC  
                               l4441 445C                                 l3731 4806  
                               l3723 47E6                                 l3715 3B60  
                               l3707 3AE2                                 l4099 39F0  
                               l4195 3778                                 l4187 3736  
                               l4179 36F4                                 l4371 2970  
                               l4363 291E                                 l3571 43D4  
                               l3563 4358                                 l3387 31C0  
                               l3395 31E6                                 l3379 315C  
                               l3299 2E70                                 l2931 2470  
                               l3459 4326                                 l3491 38E4  
                               l3483 3868                                 l3475 3840  
                               l3467 37C6                                 l3651 1972  
                               l3539 4A04                                 l3635 4976  
                               l3627 4890                                 l3811 1200  
                               l3803 115C                                 l3619 4B26  
                               l4355 23CC                                 l4347 2380  
                               l4339 2326                                 l4291 214C  
                               l4275 20C6                                 l4283 210E  
                               l4267 209C                                 l4259 204C  
                               l4507 450E                                 l4451 4470  
                               l4443 4468                                 l3901 3CA4  
                               l3741 4832                                 l3733 4808  
                               l3725 47EA                                 l3557 4AFE  
                               l3717 3B9E                                 l3709 3AFC  
                               l4197 3782                                 l4189 3740  
                               l4381 2A2C                                 l4373 2974  
                               l4365 293A                                 l4357 2916  
                               l3581 4458                                 l3573 43E2  
                               l3565 4386                                 l3397 31EA  
                               l3389 31D0                                 l2941 24A4  
                               l2933 2472                                 l3493 38F0  
                               l3485 389A                                 l3469 37D6  
                               l3549 4180                                 l3661 1A74  
                               l3653 19A4                                 l3645 183A  
                               l3629 48D6                                 l3821 12D6  
                               l3813 120E                                 l3805 116A  
                               l4349 2382                                 l4285 2122  
                               l4293 216A                                 l4277 20D6  
                               l4269 20AE                                 l4461 4480  
                               l4453 4472                                 l4445 446A  
                               l3911 3CF6                                 l3743 4836  
                               l3735 4816                                 l3727 47FA  
                               l3591 4734                                 l3559 4B1A  
                               l3719 3BB8                                 l4199 379A  
                               l4391 2BDC                                 l4383 2A78  
                               l4367 294C                                 l4375 29A6  
                               l3575 43F4                                 l3567 4396  
                               l2951 24D6                                 l2935 2482  
                               l2943 24AC                                 l2927 2456  
                               l3495 38FE                                 l3487 389C  
                               l3479 3854                                 l3671 1B88  
                               l3663 1AA6                                 l3655 19D8  
                               l3647 1908                                 l3639 48E0  
                               l3831 13AC                                 l3823 1308  
                               l3815 1240                                 l3807 119C  
                               l3751 4A0C                                 l4295 217E  
                               l4287 2132                                 l4279 20D8  
                               l4471 44A0                                 l4463 4484  
                               l4455 4476                                 l4447 446C  
                               l4439 445C                                 l3921 3D5E  
                               l3913 3D0E                                 l3905 3CB8  
                               l3737 482C                                 l3729 4802  
                               l3745 483C                                 l3593 473C  
                               l3585 4712                                 l4393 2BFA  
                               l4385 2A96                                 l4377 29C2  
                               l4369 2958                                 l3577 4402  
                               l3569 43C4                                 l2961 250C  
                               l2953 24DC                                 l2945 24BC  
                               l2937 2492                                 l2929 2462  
                               l3497 391C                                 l3489 38A8  
                               l3681 1CD6                                 l3673 1BE0  
                               l3665 1ADA                                 l3657 1A0A  
                               l3649 193A                                 l3833 13DE  
                               l3841 1482                                 l3825 133A  
                               l3817 1272                                 l3809 11CE  
                               l3761 4A3C                                 l3753 4A16  
                               l4297 218E                                 l4289 2134  
                               l4481 44BC                                 l4473 44A4  
                               l4465 4488                                 l4457 4478  
                               l4449 446E                                 l3923 3D60  
                               l3907 3CD0                                 l3915 3D10  
                               l3739 4830                                 l3595 474A  
                               l3587 471A                                 l3931 4570  
                               l4395 2CBE                                 l4387 2AFA  
                               l4379 2A0E                                 l3579 4452  
                               l2971 2548                                 l2963 251C  
                               l2955 24EA                                 l2947 24C2  
                               l2939 24A2                                 l3499 391E  
                               l3691 1E28                                 l3683 1D32  
                               l3675 1C14                                 l3667 1B40  
                               l3659 1A3C                                 l3851 157C  
                               l3843 14B4                                 l3835 1410  
                               l3819 12A4                                 l3827 1348  
                               l3771 0E02                                 l3763 4A3E  
                               l3755 4A26                                 l4299 2190  
                               l4491 44D4                                 l4483 44C4  
                               l4475 44A8                                 l4467 4490  
                               l4459 447A                                 l3925 3D78  
                               l3917 3D1E                                 l3909 3CF4  
                               l3597 4750                                 l3589 472C  
                               l3941 45D0                                 l3933 4572  
                               l4397 2CDC                                 l4389 2B18  
                               l2981 2566                                 l2973 2556  
                               l2965 251E                                 l2957 24EC  
                               l2949 24D4                                 l3693 1E5C  
                               l3685 1D64                                 l3677 1C4C  
                               l3669 1B56                                 l3861 1652  
                               l3853 15AE                                 l3845 14E6  
                               l3837 1442                                 l3829 137A  
                               l3781 0F5A                                 l3773 0E9A  
                               l3765 4A40                                 l3757 4A30  
                               l3749 4A08                                 l4493 44D8  
                               l4485 44C8                                 l4477 44AC  
                               l4469 4498                                 l3919 3D36  
                               l3599 4766                                 l3951 3EEE  
                               l3943 3EC4                                 l3935 458A  
                               l3927 4534                                 l4399 2D28  
                               l2991 257A                                 l2983 256A  
                               l2975 255A                                 l2959 24FC  
                               l2967 2526                                 l3695 1E74  
                               l3687 1DBC                                 l3679 1C7E  
                               l3871 1728                                 l3863 1684  
                               l3847 1518                                 l3855 15BC  
                               l3839 1474                                 l3783 0F8C  
                               l3791 1030                                 l3775 0EEC  
                               l3767 4A42                                 l3759 4A3A  
                               l4495 44DC                                 l4487 44CC  
                               l4479 44B4                                 l3961 3F38  
                               l3953 3EF6                                 l3945 3EDE  
                               l3937 459E                                 l3929 454C  
                               l2993 257E                                 l2985 256E  
                               l2977 255E                                 l2969 2536  
                               l3697 1EA6                                 l3689 1E18  
                               l3881 1822                                 l3873 175A  
                               l3865 16B6                                 l3857 15EE  
                               l3849 154A                                 l3793 1062  
                               l3785 0FBE                                 l3777 0EF6  
                               l3769 4A44                                 l4497 44E0  
                               l4489 44D0                                 l3891 3C6A  
                               l3971 3F7A                                 l3955 3F1E  
                               l3963 3F3A                                 l3947 3EE2  
                               l3939 45B6                                 l2995 2582  
                               l2987 2572                                 l2979 2562  
                               l3699 1EC2                                 l3875 178C  
                               l3867 16E8                                 l3859 1620  
                               l3795 1094                                 l3883 1830  
                               l3787 0FF0                                 l3779 0F28  
                               l4499 44E4                                 l3893 3C78  
                               l3981 3FBE                                 l3973 3F90  
                               l3965 3F4C                                 l3957 3F26  
                               l3949 3EE2                                 l2997 2586  
                               l2989 2576                                 l3877 17BE  
                               l3869 16F6                                 l3797 10C6  
                               l3789 1022                                 l3895 3C86  
                               l3887 3C44                                 l3991 401A  
                               l3983 3FC6                                 l3975 3F98  
                               l3967 3F54                                 l3959 3F2E  
                               l2999 258A                                 l3879 17F0  
                               l3799 10F8                                 l3897 3C8A  
                               l3889 3C52                                 l3993 401E  
                               l3977 3FAE                                 l3985 3FD0  
                               l3969 3F62                                 l3899 3CA2  
                               l3995 401E                                 l3987 3FE6  
                               l3979 3FB6                                 l3997 402A  
                               l3989 4000                                 l3999 4032  
                               u3000 327C                                 u3001 3278  
                               u3010 328E                                 u3011 328A  
                               u3100 3438                                 u3020 329E  
                               u3101 3434                                 u3021 329A  
                               u3110 3458                                 u3030 32DE  
                               u3111 3454                                 u3031 32DA  
                               u3120 346A                                 u3040 331E  
                               u3200 2DEC                                 u4000 119C  
                       _BAUD4CONbits 0EE9                                 u3121 3466  
                               u3041 331A                                 u3201 2DE8  
                               u4001 1198                                 u3130 3498  
                               u3050 3394                                 u3210 2DFE  
                               u4010 11CE                                 u3131 3494  
                               u3051 3390                                 u3211 2DFA  
                               u4011 11CA                                 u3140 34AE  
                               u3060 33B6                                 u3300 30AA  
                               u3220 2E0E                                 u4100 13AC  
                               u4020 1200                                 u3141 34AA  
                               u3061 33B2                                 u3301 30A6  
                               u3221 2E0A                                 u4101 13A8  
                               u4021 11FC                                 u3150 34C2  
                               u3070 33E0                                 u3310 30BC  
                               u3230 2E4E                                 u4110 13DE  
                               u4030 1240                                 u3151 34BE  
                               u3071 33DC                                 u3311 30B8  
                               u3231 2E4A                                 u4111 13DA  
                               u4031 123C                                 u3160 34DC  
                               u3080 3404                                 u3400 4640  
                               u3320 30EA                                 u3240 2E60  
                               u2600 24EA                                 u4200 15AE  
                               u4120 1410                                 u4040 1272  
                               u3161 34D8                                 u3081 3400  
                               u3401 463C                                 u3321 30E6  
                               u3241 2E5C                                 u2601 24E6  
                               u4201 15AA                                 u4121 140C  
                               u4041 126E                                 u3170 3524  
                               u3090 341A                                 u3410 4674  
                               u3330 3100                                 u3250 2E70  
                               u2610 24FC                                 u4210 15EE  
                               u4130 1442                                 u4050 12A4  
                               _T2PR 0FBC                                 u3171 3520  
                               u3091 3416                                 u3411 4670  
                               u3331 30FC                                 u3251 2E6C  
                               u2611 24F8                                 u4211 15EA  
                               u4131 143E                                 u4051 12A0  
                               u3180 3554                                 u3340 3114  
                               u3260 2EA6                                 u2700 2644  
                               u2620 250C                                 u3420 4268  
                               u3500 37E4                                 u4300 17BE  
                               u4220 1620                                 u4140 1474  
                               u4060 12D6                                 u3181 3550  
                               u3341 3110                                 u3261 2EA2  
                               u2701 2640                                 u2621 2508  
                               u3421 4264                                 u3501 37E0  
                               u4301 17BA                                 u4221 161C  
                               u4141 1470                                 u4061 12D2  
                               u3190 3582                                 u3350 312E  
                               u3270 2EB6                                 u2710 2652  
                               u2630 2548                                 u3430 429C  
                               u3510 3840                                 u4310 17F0  
                               u4230 1652                                 u4150 14B4  
                               u4070 1308                                 u3191 357E  
                               u3351 312A                                 u3271 2EB2  
                               u2711 264E                                 u2631 2544  
                               u3511 383C                                 u4311 17EC  
                               u4231 164E                                 u4151 14B0  
                               u4071 1304                                 u4400 459E  
                               u3360 3176                                 u3280 3030  
                               u2800 27B0                                 u2720 2662  
                               u2640 2556                                 u2560 2470  
                               u3440 42CA                                 u3520 3896  
                               u4320 1822                                 u4240 1684  
                               u4160 14E6                                 u4080 133A  
                               u4401 459A                                 u3361 3172  
                               u2801 27AC                                 u2721 265E  
                               u2641 2552                                 u2561 246C  
                               u3441 42C6                                 u3521 3892  
                               u4321 181E                                 u4241 1680  
                               u4161 14E2                                 u4081 1336  
                               u4330 3C44                                 u4410 3F4C  
                               u3370 31A4                                 u3290 308A  
                               u2810 27C0                                 u2730 2694  
                               u2650 25C4                                 u2570 2482  
                               u3450 42DE                                 u3530 38E0  
                               u3610 416C                                 u4250 16B6  
                               u4170 1518                                 u4090 137A  
                               u4331 3C40                                 u4411 3F48  
                               u3371 31A0                                 u3291 3086  
                               u2811 27BC                                 u2731 2690  
                               u2651 25C0                                 u2571 247E  
                               u3451 42DA                                 u3435 4292  
                               u3531 38DC                                 u3611 4168  
                               u4251 16B2                                 u4171 1514  
                               u4091 1376                                 u5107 47D2  
                               u4340 3C52                                 u4500 40EA  
                               u4420 3F76                                 u3620 4386  
                               u3380 31DE                                 u2900 28A4  
                               u2820 27DC                                 u2740 26A2  
                               u2660 25DC                                 u2580 2492  
                               u3460 4306                                 u3540 38FE  
                               u3700 1908                                 u4260 16E8  
                               u4180 154A                                 u4341 3C4E  
                               u4501 40E6                                 u4421 3F72  
                               u3621 4382                                 u3381 31DA  
                               u3285 3026                                 u2901 28A0  
                               u2821 27D8                                 u2741 269E  
                               u2661 25D6                                 u2581 248E  
                               u3461 4302                                 u3541 38FA  
                               u3701 1904                                 u4261 16E4  
                               u4181 1546                                 u5117 1F6E  
                               u4350 3C78                                 u4510 4122  
                               u4430 3F90                                 u3630 43C4  
                               u3390 4602                                 u2910 28B4  
                               u2830 27EC                                 u2750 26C0  
                               u2670 25DE                                 u2590 24D4  
                               u3470 4326                                 u3550 390E  
                               u3710 193A                                 u4270 1728  
                               u4190 157C                                 u4351 3C74  
                               u5207 3A2A                                 u4511 411E  
                               u4431 3F8C                                 u3631 43C0  
                               u3391 45FE                                 u2911 28B0  
                               u2831 27E8                                 u2751 26BC  
                               u2591 24D0                                 u3471 4322  
                               u3551 390A                                 u3711 1936  
                               u4271 1724                                 u4191 1578  
                               u5127 4A1C                                 u4360 3C86  
                               u4600 3A5A                                 u4520 4138  
                               u4440 3FAE                                 u3640 43E2  
                               u2920 28D4                                 u2840 27FE  
                               u2760 26F8                                 u2680 2606  
                               u3480 4336                                 u3560 391C  
                               u3800 1E28                                 u3720 19A4  
                               u3608 49F2                                 u4280 175A  
                               u4361 3C82                                 u5217 4A88  
                               u4601 3A56                                 u4521 4134  
                               u4441 3FAA                                 u5137 453E  
                               u3641 43DE                                 u2921 28D0  
                               u2841 27FA                                 u2761 26F4  
                               u2681 2602                                 u3481 4332  
                               u3561 3918                                 u3801 1E24  
                               u3721 19A0                                 u4281 1756  
                               u4370 3CB8                                 u4610 3A74  
                               u4530 3E10                                 u4450 3FE6  
                               u3650 4402                                 u2930 28E6  
                               u2850 2814                                 u2770 273E  
                               u2690 2624                                 u3570 3956  
                               u3490 37D6                                 u3810 1EA6  
                               u3730 1A0A                                 u4290 178C  
                               u4371 3CB4                                 u5227 3C5C  
                               u4611 3A70                                 u4531 3E0C  
                               u4451 3FE2                                 u5147 457C  
                               u3651 43FE                                 u2931 28E2  
                               u2851 2810                                 u2771 273A  
                               u2691 2620                                 u3571 3952  
                               u3491 37D2                                 u3811 1EA2  
                               u3731 1A06                                 u4291 1788  
                               u4380 3D1E                                 u3820 4AAA  
                               u4620 3A92                                 u4540 3E3A  
                               u4460 3FFC                                 u4700 36B2  
                               u3660 4452                                 u2940 2902  
                               u2860 282A                                 u2780 2774  
                               u3580 3964                                 u3740 1A3C  
                               u3900 0F8C                                 u4381 3D1A  
                               u5237 3C94                                 u3821 4AA6  
                               u4621 3A8E                                 u4541 3E36  
                               u4461 3FF8                                 u5157 45A8  
                               u4701 36AE                                 u3661 444E  
                               u2941 28FE                                 u2861 2826  
                               u2781 2770                                 u3581 3960  
                               u3741 1A38                                 u3901 0F88  
                               u3670 472C                                 u3830 3AFC  
                               u4630 3ACA                                 u4550 3E54  
                               u4470 4088                                 u4390 4534  
                               u4710 36F4                                 u2870 283E  
                               u2790 2784                                 u3750 1AA6  
                               u2950 4AE6                                 u3590 49F0  
                               u3910 0FBE                                 u5247 3CC2  
                               u3671 4728                                 u3831 3AF8  
                               u4631 3AC6                                 u4551 3E50  
                               u4471 4084                                 u5167 45C2  
                               u4391 4530                                 u4711 36F0  
                               u2871 283A                                 u2791 2780  
                               u3751 1AA2                                 u2951 4AE2  
                               u3591 49E8                                 u3911 0FBA  
                               u5087 4792                                 u3680 474A  
                               u3840 3BB8                                 u4640 3AE0  
                               u4560 3E72                                 u4480 40B2  
                               u4720 3736                                 u2880 2858  
                               u3760 1B40                                 u2960 4AFC  
                               u3920 0FF0                                 u4800 217E  
                               u5257 3D00                                 u3681 4746  
                               u3841 3BB4                                 u4641 3ADC  
                               u4561 3E6E                                 u4481 40AE  
                               u5177 3F5A                                 u4721 3732  
                               u2881 2854                                 u3761 1B3C  
                               u2961 4AF8                                 u3921 0FEC  
                               u4801 217A                                 u5097 47AC  
                               u3850 47FA                                 u3690 4766  
                               u4570 3EAA                                 u4490 40CC  
                               u4730 3778                                 u2970 3216  
                               u2890 2892                                 u3770 1B88  
                               u3930 1022                                 u4810 2228  
                               u4650 47C8                                 u5267 3D28  
                               u3851 47F6                                 u3691 4762  
                               u4571 3EA6                                 u4491 40C8  
                               u5187 4096                                 u4731 3774  
                               u2971 3212                                 u2891 288E  
                               u3771 1B84                                 u3931 101E  
                               u4811 2224                                 u4651 47C4  
                               u3860 4816                                 u4580 3EC0  
                               u4740 37B8                                 u4660 35AC  
                               u4900 2A96                                 u2980 3228  
                               u3780 1C7E                                 u3940 1062  
                               u4820 229E                                 u5277 3D6A  
                               u3861 4812                                 u4581 3EBC  
                               u5197 3E1E                                 u4741 37B4  
                               u4661 35A8                                 u4901 2A92  
                               u2981 3224                                 u3781 1C7A  
                               u3941 105E                                 u4821 229A  
                               u3870 482C                                 u4590 3A18  
                               u4670 35EC                                 u4910 2B18  
                               u2990 3238                                 u3790 1D64  
                               u3950 1094                                 u4830 2314  
                               u4750 1FC0                                 u3871 4828  
                               u4591 3A14                                 u4671 35E8  
                               u4911 2B14                                 u2991 3234  
                               u3791 1D60                                 u3951 1090  
                               u4831 2310                                 u4751 1FBC  
                               u4680 362E                                 u4920 2BFA  
                               u3960 10C6                                 u3880 0F28  
                               u4840 2370                                 u4760 206E  
                               u4681 362A                                 u4921 2BF6  
                               u3961 10C2                                 u3881 0F24  
                               u4841 236C                                 u4761 206A  
                               u4690 3670                                 u4930 2CDC  
                               u3970 10F8                                 u3890 0F5A  
                               u4850 23CC                                 u4770 209C  
                               u4691 366C                                 u4931 2CD8  
                               u3971 10F4                                 u3891 0F56  
                               u4851 23C8                                 u4771 2098  
                               u4940 2D46                                 u4860 293A  
                               u3980 112A                                 u4780 20C6  
                               u4941 2D42                                 u4861 2936  
                               u3981 1126                                 u4781 20C2  
                               u4950 2DA2                                 u4870 299E  
                               u3990 115C                                 u4790 2122  
                               u4951 2D9E                                 u4871 299A  
                               u3991 1158                                 u4791 211E  
                               u4960 2DD0                                 u4880 29C2  
                               u4961 2DCC                                 u4881 29BE  
                               u4890 2A2C                                 u4891 2A28  
                               _main 445C                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 prodh 0FF4  
                               prodl 0FF3                                 start 0000  
                    ___fldiv@new_exp 0033               __end_of_color_read_Red 4890  
                       ___param_bank 0000              __end_of_color_cardCheck 183A  
            _forward_reset_threshold 00FB                        ___fltol@sign1 0009  
                    __end_of___fladd 2916                                ?_main 0001  
                    __end_of___fldiv 3596                      __end_of___lbdiv 4840  
                    __end_of___flmul 31FC                      __end_of___flsub 49C6  
                    __end_of___fltol 4358                          ?_RGB_to_HSV 006A  
                    __end_of___lwdiv 4786                         ?_maze_search 00D3  
                       ?_maze_return 001F           __end_of_I2C_2_Master_Start 4B64  
         __end_of_I2C_2_Master_Write 4B50                      __end_of_forward 3EC2  
                              tablat 0FF5                                status 0FD8  
                    ___lbdiv@divisor 0001                      ___lbdiv@counter 0003  
            __end_of_color_read_Blue 4980                _I2C_2_Master_RepStart 4B64  
                 _switch_calibration 4526                      ?_color_read_Red 0005  
                    __initialization 4A48                         __end_of_main 4526  
                ?_switch_calibration 0001                               ??_main 0060  
                      _Forward_Count 00DA                        __activetblptr 0000  
                       ?_setMotorPWM 000E                               _CCPR1H 0FAA  
                             _CCPR2H 0FA6                               _CCPR3H 0F25  
                             _CCPR4H 0F21                 ??_switch_calibration 0002  
                             _RC0PPS 0E62                               _RC4REG 0EE3  
                             _RE2PPS 0E74                               _RD5PPS 0E6F  
                             _RC7PPS 0E69                               _RE4PPS 0E76  
                             _RD6PPS 0E70                               _RG6PPS 0E88  
                   __end_of_backward 3AE2             __end_of_color_click_init 4A48  
                             _RX4PPS 0E15                     forward@max_power 0019  
                             _TX4REG 0EE4                     __end_of___xxtofl 3978  
                       _CCPTMRS0bits 0FAD                          _Color_Value 00D8  
                             ___flge 4358                               ___fleq 45D4  
                   ?_color_cardCheck 005C                     __end_of_leftTURN 413A  
                          ??___fladd 0009                               ___wmul 4AFE  
                          ??___fldiv 002A                            ??___lbdiv 0002  
                          ??___flmul 0043                            ??___flsub 0022  
                          ??___fltol 0005                            ??___lwdiv 000B  
      delay_ms_function@milliseconds 0001                               _length 00FC  
                             clear_0 4A66                               clear_1 4A72  
                             _motorL 00F2                               _motorR 00E9  
                             isa$std 0001                            ??_forward 0015  
      rightTURN@rotation_calibration 0016                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                      _Operation_Count 00DB  
                  ??_initDCmotorsPWM 0003                     ___lbdiv@dividend 0002  
                         ___flge@ff1 0001                           ___flge@ff2 0005  
                       ___xxtofl@arg 0016                         ___xxtofl@exp 0015  
                       ___xxtofl@val 000C                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0060  
            __end_of__initialization 4A78             __end_of_color_read_Clear 4930  
           __end_of_color_read_Green 48E0               ?_I2C_2_Master_RepStart 0001  
                      ___rparam_used 0001                           ___fltol@f1 0001  
                   ?_color_read_Blue 0005                       __pcstackCOMRAM 0001  
                       __pidataBANK0 4B6E                     ___lbdiv@quotient 0004  
                  forward@delay_time 001A                       _RGB_to_HSV$320 0091  
                     _RGB_to_HSV$321 0095                       _RGB_to_HSV$317 0085  
                     _RGB_to_HSV$318 0089                   RGB_to_HSV@deltaRGB 00A1  
              calibration_routine@mL 0020                calibration_routine@mR 0021  
                         __pbssBANK0 00D8                           __pbssBANK1 0100  
                  _color_writetoaddr 4B24                         _T2CLKCONbits 0FBF  
                 _adjust_calibration 3C36                              ?___flge 0001  
                            ?___fleq 0001                   ?_color_writetoaddr 0003  
                            ?___wmul 0001                   backward@delay_time 001E  
                ?_adjust_calibration 0001                  ??_color_writetoaddr 0004  
                          ?_backward 0013                         ??_RGB_to_HSV 005C  
                  _delay_ms_function 4A7E                           backward@mL 0013  
                         backward@mR 0014                            ?___xxtofl 000C  
                 ?_delay_ms_function 0001                              _SP4BRGH 0EE6  
                            _SP4BRGL 0EE5                              _SSP2ADD 0ED6  
                            _SSP2BUF 0ED5                          rightTURN@mL 0013  
                        rightTURN@mR 0014                            ?_leftTURN 0013  
                ??_delay_ms_function 0003                 ??_adjust_calibration 0002  
             color_writetoaddr@value 0003                     ??_color_read_Red 0007  
          __end_of_color_writetoaddr 4B44                          RGB_to_HSV@B 0072  
                        RGB_to_HSV@C 0076                          RGB_to_HSV@G 006E  
                        RGB_to_HSV@H 007A                          RGB_to_HSV@R 006A  
                        RGB_to_HSV@S 007B                          RGB_to_HSV@V 007C  
                        RGB_to_HSV@b 00B1                          RGB_to_HSV@g 00AD  
                 _I2C_2_Master_Start 4B5A                          RGB_to_HSV@r 00A9  
                 _I2C_2_Master_Write 4B44                              __Hparam 0000  
                 __end_of_RGB_to_HSV 1F60                              __Lparam 0000  
                  color_read_Red@tmp 000A                              ___fladd 2456  
                            ___fldiv 31FC                              ___lbdiv 47E4  
                            ___flmul 2DD2                              ___flsub 4980  
                            ___fltol 4252                  ?_I2C_2_Master_Start 0001  
                            ___lwdiv 4712                  ?_I2C_2_Master_Write 0001  
                       __psmallconst 0E00            __end_of_delay_ms_function 4AAC  
                            __pcinit 4A48                              __ramtop 0E00  
                            __ptext0 445C                              __ptext1 4786  
                            __ptext2 1F60                              __ptext3 4A08  
                            __ptext4 4B24                              __ptext5 4AAC  
                            __ptext6 0E02                              __ptext7 4840  
                            __ptext8 4890                              __ptext9 48E0  
                         ??_backward 0015                            _T2CONbits 0FBD  
                            _forward 3D84                           ??___xxtofl 0010  
                          _T2HLTbits 0FBE                        _RxBufWriteCnt 00DF  
               ??_I2C_2_Master_Start 0002                 ??_I2C_2_Master_Write 0002  
                       maze_search@c 00D3                         maze_search@i 00D6  
               end_of_initialization 4A78                           ??_leftTURN 0015  
                  __end_of_rightTURN 3FFE              _pause_until_RF2_pressed 4786  
                 leftTURN@delay_time 001A                    ?_color_click_init 0001  
                       maze_return@c 001F                         maze_return@i 0029  
                       maze_return@j 0025                   ??_color_click_init 0005  
           maze_return@distance_back 0027                              postdec2 0FDD  
                            postinc0 0FEE                              postinc2 0FDE  
                    _initDCmotorsPWM 467E                            _PORTFbits 0F8E  
                 setMotorPWM@negDuty 0012                          ___fladd@grs 0010  
                      ___xxtofl@sign 0014                            _TRISAbits 0F81  
                 setMotorPWM@posDuty 0011                            _TRISCbits 0F83  
                          _TRISDbits 0F84                            _TRISEbits 0F85  
                          _TRISFbits 0F86                            _TRISGbits 0F87  
                          _TRISHbits 0F88  adjust_calibration@calibration_label 0001  
switch_calibration@calibration_index 0001                          ___fldiv@grs 0035  
                        ___fldiv@rem 002E             color_writetoaddr@address 0004  
            ??_I2C_2_Master_RepStart 0002                          ___flmul@grs 0048  
                        _CCP1CONbits 0FAB                  _calibration_routine 3596  
                  ?_color_read_Clear 0005                         _EUSART4RXbuf 016E  
                       _EUSART4TXbuf 0100                          _CCP2CONbits 0FA7  
                  ?_color_read_Green 0005                          _CCP3CONbits 0F26  
        forward@Distance_Calibration 0016                          _CCP4CONbits 0F22  
                 ??_color_read_Clear 0007                   ??_color_read_Green 0007  
                 rightTURN@max_power 0019                    maze_return@i_2039 0028  
                         leftTURN@mL 0013                           leftTURN@mR 0014  
         __end_of_custom_floatmodulo 4252                       __end_of___flge 445C  
                     __end_of___fleq 467E                       __end_of___wmul 4B24  
          color_cardCheck@card_color 00C5                 ?_calibration_routine 001F  
                   RGB_to_HSV@H_temp 009D                  color_read_Clear@tmp 000A  
                start_initialization 4A48                        _TxBufWriteCnt 00DD  
       leftTURN@rotation_calibration 0016            ??_pause_until_RF2_pressed 0001  
                   RGB_to_HSV@maxRGB 00A5                     RGB_to_HSV@minRGB 008D  
                    _RGB_to_HSV$2715 007D                      _RGB_to_HSV$2716 0081  
                    _RGB_to_HSV$2717 0099                  color_read_Green@tmp 000A  
            __end_of_initDCmotorsPWM 4712                             ??___flge 0009  
                           ??___fleq 0009                             ??___wmul 0005  
                custom_floatmodulo@x 0054                  custom_floatmodulo@y 0058  
                        __pdataBANK0 00FB                          _calibration 00E0  
              ??_calibration_routine 0022                            ___fladd@a 0005  
                          ___fladd@b 0001                        ??_maze_search 005E  
       backward@Distance_Calibration 0018                            ___fldiv@a 0026  
                          ___fldiv@b 0022                        ??_maze_return 0022  
                          ___flmul@a 003F                            ___flmul@b 003B  
                          ___flsub@a 001E                            ___flsub@b 001A  
                      __pcstackBANK0 0060                 calibration_routine@c 001F  
          custom_floatmodulo@intPart 0068                     ___lwdiv@dividend 0007  
    __end_of_pause_until_RF2_pressed 47E4                             ?___fladd 0001  
                           ?___fldiv 0022                             ?___lbdiv 0001  
                           ?___flmul 003B                             ?___flsub 001A  
                           ?___fltol 0001                             ?___lwdiv 0007  
                          backward@i 0019                            backward@j 001B  
                         rightTURN@i 0017                           rightTURN@j 0018  
               I2C_2_Master_Read@ack 0003                 I2C_2_Master_Read@tmp 0004  
                        __smallconst 0E00                             ?_forward 0013  
                  _I2C_2_Master_Idle 4AD6                    _I2C_2_Master_Init 4AAC  
                  _I2C_2_Master_Read 49C6                    _I2C_2_Master_Stop 4B50  
                       _RxBufReadCnt 00DE                   ?_I2C_2_Master_Idle 0001  
                 ?_I2C_2_Master_Init 0001                   ?_I2C_2_Master_Read 0001  
                      ??_setMotorPWM 000F                   ?_I2C_2_Master_Stop 0001  
                   ___lwdiv@quotient 000B             initDCmotorsPWM@PWMperiod 0001  
                  ??_color_cardCheck 005E                  __end_of_maze_search 2456  
                  backward@max_power 001D                  __end_of_maze_return 2DD2  
                ??_I2C_2_Master_Idle 0001                  ??_I2C_2_Master_Init 0001  
                ??_I2C_2_Master_Read 0002                       ___wmul@product 0005  
                           _LATAbits 0F79                  ??_I2C_2_Master_Stop 0002  
                           _LATCbits 0F7B                             _LATDbits 0F7C  
                           _LATEbits 0F7D                             _LATFbits 0F7E  
                           _LATGbits 0F7F                             _LATHbits 0F80  
                          _rightTURN 3EC2                             _PIE4bits 0E2D  
                           _PIR4bits 0E37                     ?_initDCmotorsPWM 0001  
                           _SSP2CON2 0EDA                             _SSP2STAT 0ED8  
          __end_of_I2C_2_Master_Idle 4AFE            __end_of_I2C_2_Master_Init 4AD6  
          __end_of_I2C_2_Master_Read 4A08                    ___wmul@multiplier 0001  
          __end_of_I2C_2_Master_Stop 4B5A                         setMotorPWM@m 000E  
        I2C_2_Master_Write@data_byte 0002                    ??_color_read_Blue 0007  
                  leftTURN@max_power 0019                         _TxBufReadCnt 00DC  
                          leftTURN@i 0017                            leftTURN@j 0018  
      __end_of_I2C_2_Master_RepStart 4B6E                   color_read_Blue@tmp 000A  
                __end_of_setMotorPWM 3C36                           ?_rightTURN 0013  
                           __Hrparam 0000                             __Lrparam 0000  
                          forward@mL 0013                            forward@mR 0014  
                           _backward 3978                           _ANSELDbits 0EA7  
                         _ANSELFbits 0EB4                          _maze_search 1F60  
                           ___xxtofl 37C4                          _maze_return 2916  
                 _custom_floatmodulo 413A                      ___lwdiv@divisor 0009  
         __end_of_switch_calibration 45D4                      ___lwdiv@counter 000D  
                           __ptext10 4930                             __ptext11 4B44  
                           __ptext20 4252                             __ptext12 4B50  
                           __ptext21 4980                             __ptext13 4B5A  
                           __ptext30 4526                             __ptext22 2456  
                           __ptext14 4B64                             __ptext31 3EC2  
                           __ptext23 2DD2                             __ptext15 49C6  
                           __ptext40 3C36                             __ptext32 3FFE  
                           __ptext24 45D4                             __ptext16 4AD6  
                           __ptext33 3D84                             __ptext25 31FC  
                           __ptext17 183A                             __ptext34 3978  
                           __ptext26 4358                             __ptext18 413A  
                           __ptext35 3AE2                             __ptext27 2916  
                           __ptext19 37C4                             __ptext36 4AFE  
                           __ptext28 467E                             __ptext37 4712  
                           __ptext29 3596                             __ptext38 4A7E  
                           __ptext39 47E4          custom_floatmodulo@remainder 0064  
                       _SSP2CON1bits 0ED9                         _SSP2CON2bits 0EDA  
                           _leftTURN 3FFE                  ?_custom_floatmodulo 0054  
                           isa$xinst 0000                           _RC4STAbits 0EE7  
               ??_custom_floatmodulo 005C                        maze_search@mL 00D4  
                      maze_search@mR 00D5                             forward@i 0017  
                           forward@j 0018                          _setMotorPWM 3AE2  
                      maze_return@mL 0020                        maze_return@mR 0021  
                        ??_rightTURN 0015          __end_of_calibration_routine 37C4  
         custom_floatmodulo@quotient 0060                     _color_click_init 4A08  
                    _color_cardCheck 0E02                           _RGB_to_HSV 183A  
                  _Operation_History 013C                           _SSP2DATPPS 0E1D  
                         _SSP2CLKPPS 0E1C             ?_pause_until_RF2_pressed 0001  
                   color_cardCheck@H 00C7                     color_cardCheck@S 00CB  
                   color_cardCheck@V 00CF                     color_cardCheck@b 00BD  
                   color_cardCheck@c 00C1                     color_cardCheck@g 00B9  
                   color_cardCheck@r 00B5                        ___fladd@signs 000D  
                         _TX4STAbits 0EE8                  rightTURN@delay_time 001A  
                       ___fladd@aexp 000E                         ___fladd@bexp 000F  
